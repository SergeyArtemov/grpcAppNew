// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Ydb/Coordination/ydb_coordination.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ydb.Coordination {

  /// <summary>Holder for reflection information generated from Ydb/Coordination/ydb_coordination.proto</summary>
  public static partial class YdbCoordinationReflection {

    #region Descriptor
    /// <summary>File descriptor for Ydb/Coordination/ydb_coordination.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static YdbCoordinationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CidZZGIvQ29vcmRpbmF0aW9uL3lkYl9jb29yZGluYXRpb24ucHJvdG8SEFlk",
            "Yi5Db29yZGluYXRpb24aIllkYi9PcGVyYXRpb25zL3lkYl9vcGVyYXRpb24u",
            "cHJvdG8aGllkYi95ZGJfc3RhdHVzX2NvZGVzLnByb3RvGiFZZGIvSXNzdWUv",
            "eWRiX2lzc3VlX21lc3NhZ2UucHJvdG8aG1lkYi9TY2hlbWUveWRiX3NjaGVt",
            "ZS5wcm90byINCgtVbnN1cHBvcnRlZCKyAgoGQ29uZmlnEgwKBHBhdGgYASAB",
            "KAkSIAoYc2VsZl9jaGVja19wZXJpb2RfbWlsbGlzGAIgASgNEiMKG3Nlc3Np",
            "b25fZ3JhY2VfcGVyaW9kX21pbGxpcxgDIAEoDRJAChVyZWFkX2NvbnNpc3Rl",
            "bmN5X21vZGUYBCABKA4yIS5ZZGIuQ29vcmRpbmF0aW9uLkNvbnNpc3RlbmN5",
            "TW9kZRJCChdhdHRhY2hfY29uc2lzdGVuY3lfbW9kZRgFIAEoDjIhLllkYi5D",
            "b29yZGluYXRpb24uQ29uc2lzdGVuY3lNb2RlEk0KGnJhdGVfbGltaXRlcl9j",
            "b3VudGVyc19tb2RlGAYgASgOMikuWWRiLkNvb3JkaW5hdGlvbi5SYXRlTGlt",
            "aXRlckNvdW50ZXJzTW9kZSJnChJTZXNzaW9uRGVzY3JpcHRpb24SEgoKc2Vz",
            "c2lvbl9pZBgBIAEoBBIWCg50aW1lb3V0X21pbGxpcxgCIAEoBBITCgtkZXNj",
            "cmlwdGlvbhgDIAEoCRIQCghhdHRhY2hlZBgEIAEoCCJtChBTZW1hcGhvcmVT",
            "ZXNzaW9uEhAKCG9yZGVyX2lkGAUgASgEEhIKCnNlc3Npb25faWQYASABKAQS",
            "FgoOdGltZW91dF9taWxsaXMYAiABKAQSDQoFY291bnQYAyABKAQSDAoEZGF0",
            "YRgEIAEoDCLMAQoUU2VtYXBob3JlRGVzY3JpcHRpb24SDAoEbmFtZRgBIAEo",
            "CRIMCgRkYXRhGAIgASgMEg0KBWNvdW50GAcgASgEEg0KBWxpbWl0GAMgASgE",
            "EhEKCWVwaGVtZXJhbBgEIAEoCBIyCgZvd25lcnMYBSADKAsyIi5ZZGIuQ29v",
            "cmRpbmF0aW9uLlNlbWFwaG9yZVNlc3Npb24SMwoHd2FpdGVycxgGIAMoCzIi",
            "LllkYi5Db29yZGluYXRpb24uU2VtYXBob3JlU2Vzc2lvbiLRDQoOU2Vzc2lv",
            "blJlcXVlc3QSOQoEcGluZxgBIAEoCzIpLllkYi5Db29yZGluYXRpb24uU2Vz",
            "c2lvblJlcXVlc3QuUGluZ1BvbmdIABI5CgRwb25nGAIgASgLMikuWWRiLkNv",
            "b3JkaW5hdGlvbi5TZXNzaW9uUmVxdWVzdC5QaW5nUG9uZ0gAEkYKDXNlc3Np",
            "b25fc3RhcnQYAyABKAsyLS5ZZGIuQ29vcmRpbmF0aW9uLlNlc3Npb25SZXF1",
            "ZXN0LlNlc3Npb25TdGFydEgAEkQKDHNlc3Npb25fc3RvcBgEIAEoCzIsLllk",
            "Yi5Db29yZGluYXRpb24uU2Vzc2lvblJlcXVlc3QuU2Vzc2lvblN0b3BIABI2",
            "Cg11bnN1cHBvcnRlZF81GAUgASgLMh0uWWRiLkNvb3JkaW5hdGlvbi5VbnN1",
            "cHBvcnRlZEgAEjYKDXVuc3VwcG9ydGVkXzYYBiABKAsyHS5ZZGIuQ29vcmRp",
            "bmF0aW9uLlVuc3VwcG9ydGVkSAASTgoRYWNxdWlyZV9zZW1hcGhvcmUYByAB",
            "KAsyMS5ZZGIuQ29vcmRpbmF0aW9uLlNlc3Npb25SZXF1ZXN0LkFjcXVpcmVT",
            "ZW1hcGhvcmVIABJOChFyZWxlYXNlX3NlbWFwaG9yZRgIIAEoCzIxLllkYi5D",
            "b29yZGluYXRpb24uU2Vzc2lvblJlcXVlc3QuUmVsZWFzZVNlbWFwaG9yZUgA",
            "ElAKEmRlc2NyaWJlX3NlbWFwaG9yZRgJIAEoCzIyLllkYi5Db29yZGluYXRp",
            "b24uU2Vzc2lvblJlcXVlc3QuRGVzY3JpYmVTZW1hcGhvcmVIABJMChBjcmVh",
            "dGVfc2VtYXBob3JlGAogASgLMjAuWWRiLkNvb3JkaW5hdGlvbi5TZXNzaW9u",
            "UmVxdWVzdC5DcmVhdGVTZW1hcGhvcmVIABJMChB1cGRhdGVfc2VtYXBob3Jl",
            "GAsgASgLMjAuWWRiLkNvb3JkaW5hdGlvbi5TZXNzaW9uUmVxdWVzdC5VcGRh",
            "dGVTZW1hcGhvcmVIABJMChBkZWxldGVfc2VtYXBob3JlGAwgASgLMjAuWWRi",
            "LkNvb3JkaW5hdGlvbi5TZXNzaW9uUmVxdWVzdC5EZWxldGVTZW1hcGhvcmVI",
            "ABI3Cg51bnN1cHBvcnRlZF8xMxgNIAEoCzIdLllkYi5Db29yZGluYXRpb24u",
            "VW5zdXBwb3J0ZWRIABI3Cg51bnN1cHBvcnRlZF8xNBgOIAEoCzIdLllkYi5D",
            "b29yZGluYXRpb24uVW5zdXBwb3J0ZWRIABI3Cg51bnN1cHBvcnRlZF8xNRgP",
            "IAEoCzIdLllkYi5Db29yZGluYXRpb24uVW5zdXBwb3J0ZWRIABoaCghQaW5n",
            "UG9uZxIOCgZvcGFxdWUYASABKAQahQEKDFNlc3Npb25TdGFydBIMCgRwYXRo",
            "GAEgASgJEhIKCnNlc3Npb25faWQYAiABKAQSFgoOdGltZW91dF9taWxsaXMY",
            "AyABKAQSEwoLZGVzY3JpcHRpb24YBCABKAkSDgoGc2VxX25vGAUgASgEEhYK",
            "DnByb3RlY3Rpb25fa2V5GAYgASgMGg0KC1Nlc3Npb25TdG9wGngKEEFjcXVp",
            "cmVTZW1hcGhvcmUSDgoGcmVxX2lkGAEgASgEEgwKBG5hbWUYAiABKAkSFgoO",
            "dGltZW91dF9taWxsaXMYAyABKAQSDQoFY291bnQYBCABKAQSDAoEZGF0YRgF",
            "IAEoDBIRCgllcGhlbWVyYWwYBiABKAgaMAoQUmVsZWFzZVNlbWFwaG9yZRIO",
            "CgZyZXFfaWQYASABKAQSDAoEbmFtZRgCIAEoCRqMAQoRRGVzY3JpYmVTZW1h",
            "cGhvcmUSDgoGcmVxX2lkGAEgASgEEgwKBG5hbWUYAiABKAkSFgoOaW5jbHVk",
            "ZV9vd25lcnMYAyABKAgSFwoPaW5jbHVkZV93YWl0ZXJzGAQgASgIEhIKCndh",
            "dGNoX2RhdGEYBSABKAgSFAoMd2F0Y2hfb3duZXJzGAYgASgIGkwKD0NyZWF0",
            "ZVNlbWFwaG9yZRIOCgZyZXFfaWQYASABKAQSDAoEbmFtZRgCIAEoCRINCgVs",
            "aW1pdBgDIAEoBBIMCgRkYXRhGAQgASgMGj0KD1VwZGF0ZVNlbWFwaG9yZRIO",
            "CgZyZXFfaWQYASABKAQSDAoEbmFtZRgCIAEoCRIMCgRkYXRhGAMgASgMGj4K",
            "D0RlbGV0ZVNlbWFwaG9yZRIOCgZyZXFfaWQYASABKAQSDAoEbmFtZRgCIAEo",
            "CRINCgVmb3JjZRgDIAEoCEIJCgdyZXF1ZXN0ItMUCg9TZXNzaW9uUmVzcG9u",
            "c2USOgoEcGluZxgBIAEoCzIqLllkYi5Db29yZGluYXRpb24uU2Vzc2lvblJl",
            "c3BvbnNlLlBpbmdQb25nSAASOgoEcG9uZxgCIAEoCzIqLllkYi5Db29yZGlu",
            "YXRpb24uU2Vzc2lvblJlc3BvbnNlLlBpbmdQb25nSAASPAoHZmFpbHVyZRgD",
            "IAEoCzIpLllkYi5Db29yZGluYXRpb24uU2Vzc2lvblJlc3BvbnNlLkZhaWx1",
            "cmVIABJLCg9zZXNzaW9uX3N0YXJ0ZWQYBCABKAsyMC5ZZGIuQ29vcmRpbmF0",
            "aW9uLlNlc3Npb25SZXNwb25zZS5TZXNzaW9uU3RhcnRlZEgAEksKD3Nlc3Np",
            "b25fc3RvcHBlZBgFIAEoCzIwLllkYi5Db29yZGluYXRpb24uU2Vzc2lvblJl",
            "c3BvbnNlLlNlc3Npb25TdG9wcGVkSAASNgoNdW5zdXBwb3J0ZWRfNhgGIAEo",
            "CzIdLllkYi5Db29yZGluYXRpb24uVW5zdXBwb3J0ZWRIABI2Cg11bnN1cHBv",
            "cnRlZF83GAcgASgLMh0uWWRiLkNvb3JkaW5hdGlvbi5VbnN1cHBvcnRlZEgA",
            "El4KGWFjcXVpcmVfc2VtYXBob3JlX3BlbmRpbmcYCCABKAsyOS5ZZGIuQ29v",
            "cmRpbmF0aW9uLlNlc3Npb25SZXNwb25zZS5BY3F1aXJlU2VtYXBob3JlUGVu",
            "ZGluZ0gAElwKGGFjcXVpcmVfc2VtYXBob3JlX3Jlc3VsdBgJIAEoCzI4Lllk",
            "Yi5Db29yZGluYXRpb24uU2Vzc2lvblJlc3BvbnNlLkFjcXVpcmVTZW1hcGhv",
            "cmVSZXN1bHRIABJcChhyZWxlYXNlX3NlbWFwaG9yZV9yZXN1bHQYCiABKAsy",
            "OC5ZZGIuQ29vcmRpbmF0aW9uLlNlc3Npb25SZXNwb25zZS5SZWxlYXNlU2Vt",
            "YXBob3JlUmVzdWx0SAASXgoZZGVzY3JpYmVfc2VtYXBob3JlX3Jlc3VsdBgL",
            "IAEoCzI5LllkYi5Db29yZGluYXRpb24uU2Vzc2lvblJlc3BvbnNlLkRlc2Ny",
            "aWJlU2VtYXBob3JlUmVzdWx0SAASYAoaZGVzY3JpYmVfc2VtYXBob3JlX2No",
            "YW5nZWQYDCABKAsyOi5ZZGIuQ29vcmRpbmF0aW9uLlNlc3Npb25SZXNwb25z",
            "ZS5EZXNjcmliZVNlbWFwaG9yZUNoYW5nZWRIABJaChdjcmVhdGVfc2VtYXBo",
            "b3JlX3Jlc3VsdBgNIAEoCzI3LllkYi5Db29yZGluYXRpb24uU2Vzc2lvblJl",
            "c3BvbnNlLkNyZWF0ZVNlbWFwaG9yZVJlc3VsdEgAEloKF3VwZGF0ZV9zZW1h",
            "cGhvcmVfcmVzdWx0GA4gASgLMjcuWWRiLkNvb3JkaW5hdGlvbi5TZXNzaW9u",
            "UmVzcG9uc2UuVXBkYXRlU2VtYXBob3JlUmVzdWx0SAASWgoXZGVsZXRlX3Nl",
            "bWFwaG9yZV9yZXN1bHQYDyABKAsyNy5ZZGIuQ29vcmRpbmF0aW9uLlNlc3Np",
            "b25SZXNwb25zZS5EZWxldGVTZW1hcGhvcmVSZXN1bHRIABI3Cg51bnN1cHBv",
            "cnRlZF8xNhgQIAEoCzIdLllkYi5Db29yZGluYXRpb24uVW5zdXBwb3J0ZWRI",
            "ABI3Cg51bnN1cHBvcnRlZF8xNxgRIAEoCzIdLllkYi5Db29yZGluYXRpb24u",
            "VW5zdXBwb3J0ZWRIABI3Cg51bnN1cHBvcnRlZF8xOBgSIAEoCzIdLllkYi5D",
            "b29yZGluYXRpb24uVW5zdXBwb3J0ZWRIABoaCghQaW5nUG9uZxIOCgZvcGFx",
            "dWUYASABKAQaXQoHRmFpbHVyZRIpCgZzdGF0dXMYASABKA4yGS5ZZGIuU3Rh",
            "dHVzSWRzLlN0YXR1c0NvZGUSJwoGaXNzdWVzGAIgAygLMhcuWWRiLklzc3Vl",
            "Lklzc3VlTWVzc2FnZRo8Cg5TZXNzaW9uU3RhcnRlZBISCgpzZXNzaW9uX2lk",
            "GAEgASgEEhYKDnRpbWVvdXRfbWlsbGlzGAIgASgEGiQKDlNlc3Npb25TdG9w",
            "cGVkEhIKCnNlc3Npb25faWQYASABKAQaKQoXQWNxdWlyZVNlbWFwaG9yZVBl",
            "bmRpbmcSDgoGcmVxX2lkGAEgASgEGo4BChZBY3F1aXJlU2VtYXBob3JlUmVz",
            "dWx0Eg4KBnJlcV9pZBgBIAEoBBIpCgZzdGF0dXMYAiABKA4yGS5ZZGIuU3Rh",
            "dHVzSWRzLlN0YXR1c0NvZGUSJwoGaXNzdWVzGAMgAygLMhcuWWRiLklzc3Vl",
            "Lklzc3VlTWVzc2FnZRIQCghhY3F1aXJlZBgEIAEoCBqOAQoWUmVsZWFzZVNl",
            "bWFwaG9yZVJlc3VsdBIOCgZyZXFfaWQYASABKAQSKQoGc3RhdHVzGAIgASgO",
            "MhkuWWRiLlN0YXR1c0lkcy5TdGF0dXNDb2RlEicKBmlzc3VlcxgDIAMoCzIX",
            "LllkYi5Jc3N1ZS5Jc3N1ZU1lc3NhZ2USEAoIcmVsZWFzZWQYBCABKAga2QEK",
            "F0Rlc2NyaWJlU2VtYXBob3JlUmVzdWx0Eg4KBnJlcV9pZBgBIAEoBBIpCgZz",
            "dGF0dXMYAiABKA4yGS5ZZGIuU3RhdHVzSWRzLlN0YXR1c0NvZGUSJwoGaXNz",
            "dWVzGAMgAygLMhcuWWRiLklzc3VlLklzc3VlTWVzc2FnZRJFChVzZW1hcGhv",
            "cmVfZGVzY3JpcHRpb24YBCABKAsyJi5ZZGIuQ29vcmRpbmF0aW9uLlNlbWFw",
            "aG9yZURlc2NyaXB0aW9uEhMKC3dhdGNoX2FkZGVkGAUgASgIGlgKGERlc2Ny",
            "aWJlU2VtYXBob3JlQ2hhbmdlZBIOCgZyZXFfaWQYASABKAQSFAoMZGF0YV9j",
            "aGFuZ2VkGAIgASgIEhYKDm93bmVyc19jaGFuZ2VkGAMgASgIGnsKFUNyZWF0",
            "ZVNlbWFwaG9yZVJlc3VsdBIOCgZyZXFfaWQYASABKAQSKQoGc3RhdHVzGAIg",
            "ASgOMhkuWWRiLlN0YXR1c0lkcy5TdGF0dXNDb2RlEicKBmlzc3VlcxgDIAMo",
            "CzIXLllkYi5Jc3N1ZS5Jc3N1ZU1lc3NhZ2UaewoVVXBkYXRlU2VtYXBob3Jl",
            "UmVzdWx0Eg4KBnJlcV9pZBgBIAEoBBIpCgZzdGF0dXMYAiABKA4yGS5ZZGIu",
            "U3RhdHVzSWRzLlN0YXR1c0NvZGUSJwoGaXNzdWVzGAMgAygLMhcuWWRiLklz",
            "c3VlLklzc3VlTWVzc2FnZRp7ChVEZWxldGVTZW1hcGhvcmVSZXN1bHQSDgoG",
            "cmVxX2lkGAEgASgEEikKBnN0YXR1cxgCIAEoDjIZLllkYi5TdGF0dXNJZHMu",
            "U3RhdHVzQ29kZRInCgZpc3N1ZXMYAyADKAsyFy5ZZGIuSXNzdWUuSXNzdWVN",
            "ZXNzYWdlQgoKCHJlc3BvbnNlIoYBChFDcmVhdGVOb2RlUmVxdWVzdBIMCgRw",
            "YXRoGAEgASgJEigKBmNvbmZpZxgCIAEoCzIYLllkYi5Db29yZGluYXRpb24u",
            "Q29uZmlnEjkKEG9wZXJhdGlvbl9wYXJhbXMYAyABKAsyHy5ZZGIuT3BlcmF0",
            "aW9ucy5PcGVyYXRpb25QYXJhbXMiQgoSQ3JlYXRlTm9kZVJlc3BvbnNlEiwK",
            "CW9wZXJhdGlvbhgBIAEoCzIZLllkYi5PcGVyYXRpb25zLk9wZXJhdGlvbiKF",
            "AQoQQWx0ZXJOb2RlUmVxdWVzdBIMCgRwYXRoGAEgASgJEigKBmNvbmZpZxgC",
            "IAEoCzIYLllkYi5Db29yZGluYXRpb24uQ29uZmlnEjkKEG9wZXJhdGlvbl9w",
            "YXJhbXMYAyABKAsyHy5ZZGIuT3BlcmF0aW9ucy5PcGVyYXRpb25QYXJhbXMi",
            "QQoRQWx0ZXJOb2RlUmVzcG9uc2USLAoJb3BlcmF0aW9uGAEgASgLMhkuWWRi",
            "Lk9wZXJhdGlvbnMuT3BlcmF0aW9uIloKD0Ryb3BOb2RlUmVxdWVzdBIMCgRw",
            "YXRoGAEgASgJEjkKEG9wZXJhdGlvbl9wYXJhbXMYAiABKAsyHy5ZZGIuT3Bl",
            "cmF0aW9ucy5PcGVyYXRpb25QYXJhbXMiQAoQRHJvcE5vZGVSZXNwb25zZRIs",
            "CglvcGVyYXRpb24YASABKAsyGS5ZZGIuT3BlcmF0aW9ucy5PcGVyYXRpb24i",
            "XgoTRGVzY3JpYmVOb2RlUmVxdWVzdBIMCgRwYXRoGAEgASgJEjkKEG9wZXJh",
            "dGlvbl9wYXJhbXMYAiABKAsyHy5ZZGIuT3BlcmF0aW9ucy5PcGVyYXRpb25Q",
            "YXJhbXMiRAoURGVzY3JpYmVOb2RlUmVzcG9uc2USLAoJb3BlcmF0aW9uGAEg",
            "ASgLMhkuWWRiLk9wZXJhdGlvbnMuT3BlcmF0aW9uIl8KEkRlc2NyaWJlTm9k",
            "ZVJlc3VsdBIfCgRzZWxmGAEgASgLMhEuWWRiLlNjaGVtZS5FbnRyeRIoCgZj",
            "b25maWcYAiABKAsyGC5ZZGIuQ29vcmRpbmF0aW9uLkNvbmZpZypoCg9Db25z",
            "aXN0ZW5jeU1vZGUSGgoWQ09OU0lTVEVOQ1lfTU9ERV9VTlNFVBAAEhsKF0NP",
            "TlNJU1RFTkNZX01PREVfU1RSSUNUEAESHAoYQ09OU0lTVEVOQ1lfTU9ERV9S",
            "RUxBWEVEEAIqkwEKF1JhdGVMaW1pdGVyQ291bnRlcnNNb2RlEiQKIFJBVEVf",
            "TElNSVRFUl9DT1VOVEVSU19NT0RFX1VOU0VUEAASKQolUkFURV9MSU1JVEVS",
            "X0NPVU5URVJTX01PREVfQUdHUkVHQVRFRBABEicKI1JBVEVfTElNSVRFUl9D",
            "T1VOVEVSU19NT0RFX0RFVEFJTEVEEAJCNgobY29tLnlhbmRleC55ZGIuY29v",
            "cmRpbmF0aW9uQhJDb29yZGluYXRpb25Qcm90b3NQAfgBAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Ydb.Operations.YdbOperationReflection.Descriptor, global::Ydb.YdbStatusCodesReflection.Descriptor, global::Ydb.Issue.YdbIssueMessageReflection.Descriptor, global::Ydb.Scheme.YdbSchemeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Ydb.Coordination.ConsistencyMode), typeof(global::Ydb.Coordination.RateLimiterCountersMode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.Unsupported), global::Ydb.Coordination.Unsupported.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.Config), global::Ydb.Coordination.Config.Parser, new[]{ "Path", "SelfCheckPeriodMillis", "SessionGracePeriodMillis", "ReadConsistencyMode", "AttachConsistencyMode", "RateLimiterCountersMode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionDescription), global::Ydb.Coordination.SessionDescription.Parser, new[]{ "SessionId", "TimeoutMillis", "Description", "Attached" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SemaphoreSession), global::Ydb.Coordination.SemaphoreSession.Parser, new[]{ "OrderId", "SessionId", "TimeoutMillis", "Count", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SemaphoreDescription), global::Ydb.Coordination.SemaphoreDescription.Parser, new[]{ "Name", "Data", "Count", "Limit", "Ephemeral", "Owners", "Waiters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionRequest), global::Ydb.Coordination.SessionRequest.Parser, new[]{ "Ping", "Pong", "SessionStart", "SessionStop", "Unsupported5", "Unsupported6", "AcquireSemaphore", "ReleaseSemaphore", "DescribeSemaphore", "CreateSemaphore", "UpdateSemaphore", "DeleteSemaphore", "Unsupported13", "Unsupported14", "Unsupported15" }, new[]{ "Request" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionRequest.Types.PingPong), global::Ydb.Coordination.SessionRequest.Types.PingPong.Parser, new[]{ "Opaque" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionRequest.Types.SessionStart), global::Ydb.Coordination.SessionRequest.Types.SessionStart.Parser, new[]{ "Path", "SessionId", "TimeoutMillis", "Description", "SeqNo", "ProtectionKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionRequest.Types.SessionStop), global::Ydb.Coordination.SessionRequest.Types.SessionStop.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionRequest.Types.AcquireSemaphore), global::Ydb.Coordination.SessionRequest.Types.AcquireSemaphore.Parser, new[]{ "ReqId", "Name", "TimeoutMillis", "Count", "Data", "Ephemeral" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionRequest.Types.ReleaseSemaphore), global::Ydb.Coordination.SessionRequest.Types.ReleaseSemaphore.Parser, new[]{ "ReqId", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionRequest.Types.DescribeSemaphore), global::Ydb.Coordination.SessionRequest.Types.DescribeSemaphore.Parser, new[]{ "ReqId", "Name", "IncludeOwners", "IncludeWaiters", "WatchData", "WatchOwners" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionRequest.Types.CreateSemaphore), global::Ydb.Coordination.SessionRequest.Types.CreateSemaphore.Parser, new[]{ "ReqId", "Name", "Limit", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionRequest.Types.UpdateSemaphore), global::Ydb.Coordination.SessionRequest.Types.UpdateSemaphore.Parser, new[]{ "ReqId", "Name", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionRequest.Types.DeleteSemaphore), global::Ydb.Coordination.SessionRequest.Types.DeleteSemaphore.Parser, new[]{ "ReqId", "Name", "Force" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionResponse), global::Ydb.Coordination.SessionResponse.Parser, new[]{ "Ping", "Pong", "Failure", "SessionStarted", "SessionStopped", "Unsupported6", "Unsupported7", "AcquireSemaphorePending", "AcquireSemaphoreResult", "ReleaseSemaphoreResult", "DescribeSemaphoreResult", "DescribeSemaphoreChanged", "CreateSemaphoreResult", "UpdateSemaphoreResult", "DeleteSemaphoreResult", "Unsupported16", "Unsupported17", "Unsupported18" }, new[]{ "Response" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionResponse.Types.PingPong), global::Ydb.Coordination.SessionResponse.Types.PingPong.Parser, new[]{ "Opaque" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionResponse.Types.Failure), global::Ydb.Coordination.SessionResponse.Types.Failure.Parser, new[]{ "Status", "Issues" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionResponse.Types.SessionStarted), global::Ydb.Coordination.SessionResponse.Types.SessionStarted.Parser, new[]{ "SessionId", "TimeoutMillis" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionResponse.Types.SessionStopped), global::Ydb.Coordination.SessionResponse.Types.SessionStopped.Parser, new[]{ "SessionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionResponse.Types.AcquireSemaphorePending), global::Ydb.Coordination.SessionResponse.Types.AcquireSemaphorePending.Parser, new[]{ "ReqId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionResponse.Types.AcquireSemaphoreResult), global::Ydb.Coordination.SessionResponse.Types.AcquireSemaphoreResult.Parser, new[]{ "ReqId", "Status", "Issues", "Acquired" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionResponse.Types.ReleaseSemaphoreResult), global::Ydb.Coordination.SessionResponse.Types.ReleaseSemaphoreResult.Parser, new[]{ "ReqId", "Status", "Issues", "Released" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionResponse.Types.DescribeSemaphoreResult), global::Ydb.Coordination.SessionResponse.Types.DescribeSemaphoreResult.Parser, new[]{ "ReqId", "Status", "Issues", "SemaphoreDescription", "WatchAdded" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionResponse.Types.DescribeSemaphoreChanged), global::Ydb.Coordination.SessionResponse.Types.DescribeSemaphoreChanged.Parser, new[]{ "ReqId", "DataChanged", "OwnersChanged" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionResponse.Types.CreateSemaphoreResult), global::Ydb.Coordination.SessionResponse.Types.CreateSemaphoreResult.Parser, new[]{ "ReqId", "Status", "Issues" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionResponse.Types.UpdateSemaphoreResult), global::Ydb.Coordination.SessionResponse.Types.UpdateSemaphoreResult.Parser, new[]{ "ReqId", "Status", "Issues" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.SessionResponse.Types.DeleteSemaphoreResult), global::Ydb.Coordination.SessionResponse.Types.DeleteSemaphoreResult.Parser, new[]{ "ReqId", "Status", "Issues" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.CreateNodeRequest), global::Ydb.Coordination.CreateNodeRequest.Parser, new[]{ "Path", "Config", "OperationParams" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.CreateNodeResponse), global::Ydb.Coordination.CreateNodeResponse.Parser, new[]{ "Operation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.AlterNodeRequest), global::Ydb.Coordination.AlterNodeRequest.Parser, new[]{ "Path", "Config", "OperationParams" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.AlterNodeResponse), global::Ydb.Coordination.AlterNodeResponse.Parser, new[]{ "Operation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.DropNodeRequest), global::Ydb.Coordination.DropNodeRequest.Parser, new[]{ "Path", "OperationParams" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.DropNodeResponse), global::Ydb.Coordination.DropNodeResponse.Parser, new[]{ "Operation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.DescribeNodeRequest), global::Ydb.Coordination.DescribeNodeRequest.Parser, new[]{ "Path", "OperationParams" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.DescribeNodeResponse), global::Ydb.Coordination.DescribeNodeResponse.Parser, new[]{ "Operation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Coordination.DescribeNodeResult), global::Ydb.Coordination.DescribeNodeResult.Parser, new[]{ "Self", "Config" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///*
  /// Consistency mode
  /// </summary>
  public enum ConsistencyMode {
    /// <summary>
    /// The default or current value
    /// </summary>
    [pbr::OriginalName("CONSISTENCY_MODE_UNSET")] Unset = 0,
    /// <summary>
    /// Strict mode makes sure operations may only complete on current master
    /// </summary>
    [pbr::OriginalName("CONSISTENCY_MODE_STRICT")] Strict = 1,
    /// <summary>
    /// Relaxed mode allows operations to complete on stale masters
    /// </summary>
    [pbr::OriginalName("CONSISTENCY_MODE_RELAXED")] Relaxed = 2,
  }

  /// <summary>
  ///*
  /// Counters mode
  /// </summary>
  public enum RateLimiterCountersMode {
    /// <summary>
    /// The default or current value
    /// </summary>
    [pbr::OriginalName("RATE_LIMITER_COUNTERS_MODE_UNSET")] Unset = 0,
    /// <summary>
    /// Aggregated counters for resource tree
    /// </summary>
    [pbr::OriginalName("RATE_LIMITER_COUNTERS_MODE_AGGREGATED")] Aggregated = 1,
    /// <summary>
    /// Counters on every resource
    /// </summary>
    [pbr::OriginalName("RATE_LIMITER_COUNTERS_MODE_DETAILED")] Detailed = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  ///*
  /// Stub for unsupported messages
  /// </summary>
  public sealed partial class Unsupported : pb::IMessage<Unsupported>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Unsupported> _parser = new pb::MessageParser<Unsupported>(() => new Unsupported());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Unsupported> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Coordination.YdbCoordinationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unsupported() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unsupported(Unsupported other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unsupported Clone() {
      return new Unsupported(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Unsupported);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Unsupported other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Unsupported other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Configuration settings for a coordination node
  /// </summary>
  public sealed partial class Config : pb::IMessage<Config>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Config> _parser = new pb::MessageParser<Config>(() => new Config());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Config> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Coordination.YdbCoordinationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config(Config other) : this() {
      path_ = other.path_;
      selfCheckPeriodMillis_ = other.selfCheckPeriodMillis_;
      sessionGracePeriodMillis_ = other.sessionGracePeriodMillis_;
      readConsistencyMode_ = other.readConsistencyMode_;
      attachConsistencyMode_ = other.attachConsistencyMode_;
      rateLimiterCountersMode_ = other.rateLimiterCountersMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config Clone() {
      return new Config(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    /// <summary>
    /// Initialized on creation, cannot be set
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "self_check_period_millis" field.</summary>
    public const int SelfCheckPeriodMillisFieldNumber = 2;
    private uint selfCheckPeriodMillis_;
    /// <summary>
    /// Period in milliseconds for self-checks (default 1 second)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SelfCheckPeriodMillis {
      get { return selfCheckPeriodMillis_; }
      set {
        selfCheckPeriodMillis_ = value;
      }
    }

    /// <summary>Field number for the "session_grace_period_millis" field.</summary>
    public const int SessionGracePeriodMillisFieldNumber = 3;
    private uint sessionGracePeriodMillis_;
    /// <summary>
    /// Grace period for sessions on master change (default 10 seconds)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SessionGracePeriodMillis {
      get { return sessionGracePeriodMillis_; }
      set {
        sessionGracePeriodMillis_ = value;
      }
    }

    /// <summary>Field number for the "read_consistency_mode" field.</summary>
    public const int ReadConsistencyModeFieldNumber = 4;
    private global::Ydb.Coordination.ConsistencyMode readConsistencyMode_ = global::Ydb.Coordination.ConsistencyMode.Unset;
    /// <summary>
    /// Concistency mode for read operations
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.ConsistencyMode ReadConsistencyMode {
      get { return readConsistencyMode_; }
      set {
        readConsistencyMode_ = value;
      }
    }

    /// <summary>Field number for the "attach_consistency_mode" field.</summary>
    public const int AttachConsistencyModeFieldNumber = 5;
    private global::Ydb.Coordination.ConsistencyMode attachConsistencyMode_ = global::Ydb.Coordination.ConsistencyMode.Unset;
    /// <summary>
    /// Consistency mode for attach operations
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.ConsistencyMode AttachConsistencyMode {
      get { return attachConsistencyMode_; }
      set {
        attachConsistencyMode_ = value;
      }
    }

    /// <summary>Field number for the "rate_limiter_counters_mode" field.</summary>
    public const int RateLimiterCountersModeFieldNumber = 6;
    private global::Ydb.Coordination.RateLimiterCountersMode rateLimiterCountersMode_ = global::Ydb.Coordination.RateLimiterCountersMode.Unset;
    /// <summary>
    /// Rate limiter counters mode
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.RateLimiterCountersMode RateLimiterCountersMode {
      get { return rateLimiterCountersMode_; }
      set {
        rateLimiterCountersMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Config);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Config other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (SelfCheckPeriodMillis != other.SelfCheckPeriodMillis) return false;
      if (SessionGracePeriodMillis != other.SessionGracePeriodMillis) return false;
      if (ReadConsistencyMode != other.ReadConsistencyMode) return false;
      if (AttachConsistencyMode != other.AttachConsistencyMode) return false;
      if (RateLimiterCountersMode != other.RateLimiterCountersMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (SelfCheckPeriodMillis != 0) hash ^= SelfCheckPeriodMillis.GetHashCode();
      if (SessionGracePeriodMillis != 0) hash ^= SessionGracePeriodMillis.GetHashCode();
      if (ReadConsistencyMode != global::Ydb.Coordination.ConsistencyMode.Unset) hash ^= ReadConsistencyMode.GetHashCode();
      if (AttachConsistencyMode != global::Ydb.Coordination.ConsistencyMode.Unset) hash ^= AttachConsistencyMode.GetHashCode();
      if (RateLimiterCountersMode != global::Ydb.Coordination.RateLimiterCountersMode.Unset) hash ^= RateLimiterCountersMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (SelfCheckPeriodMillis != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SelfCheckPeriodMillis);
      }
      if (SessionGracePeriodMillis != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SessionGracePeriodMillis);
      }
      if (ReadConsistencyMode != global::Ydb.Coordination.ConsistencyMode.Unset) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ReadConsistencyMode);
      }
      if (AttachConsistencyMode != global::Ydb.Coordination.ConsistencyMode.Unset) {
        output.WriteRawTag(40);
        output.WriteEnum((int) AttachConsistencyMode);
      }
      if (RateLimiterCountersMode != global::Ydb.Coordination.RateLimiterCountersMode.Unset) {
        output.WriteRawTag(48);
        output.WriteEnum((int) RateLimiterCountersMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (SelfCheckPeriodMillis != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SelfCheckPeriodMillis);
      }
      if (SessionGracePeriodMillis != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SessionGracePeriodMillis);
      }
      if (ReadConsistencyMode != global::Ydb.Coordination.ConsistencyMode.Unset) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ReadConsistencyMode);
      }
      if (AttachConsistencyMode != global::Ydb.Coordination.ConsistencyMode.Unset) {
        output.WriteRawTag(40);
        output.WriteEnum((int) AttachConsistencyMode);
      }
      if (RateLimiterCountersMode != global::Ydb.Coordination.RateLimiterCountersMode.Unset) {
        output.WriteRawTag(48);
        output.WriteEnum((int) RateLimiterCountersMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (SelfCheckPeriodMillis != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SelfCheckPeriodMillis);
      }
      if (SessionGracePeriodMillis != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SessionGracePeriodMillis);
      }
      if (ReadConsistencyMode != global::Ydb.Coordination.ConsistencyMode.Unset) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReadConsistencyMode);
      }
      if (AttachConsistencyMode != global::Ydb.Coordination.ConsistencyMode.Unset) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AttachConsistencyMode);
      }
      if (RateLimiterCountersMode != global::Ydb.Coordination.RateLimiterCountersMode.Unset) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RateLimiterCountersMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Config other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.SelfCheckPeriodMillis != 0) {
        SelfCheckPeriodMillis = other.SelfCheckPeriodMillis;
      }
      if (other.SessionGracePeriodMillis != 0) {
        SessionGracePeriodMillis = other.SessionGracePeriodMillis;
      }
      if (other.ReadConsistencyMode != global::Ydb.Coordination.ConsistencyMode.Unset) {
        ReadConsistencyMode = other.ReadConsistencyMode;
      }
      if (other.AttachConsistencyMode != global::Ydb.Coordination.ConsistencyMode.Unset) {
        AttachConsistencyMode = other.AttachConsistencyMode;
      }
      if (other.RateLimiterCountersMode != global::Ydb.Coordination.RateLimiterCountersMode.Unset) {
        RateLimiterCountersMode = other.RateLimiterCountersMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 16: {
            SelfCheckPeriodMillis = input.ReadUInt32();
            break;
          }
          case 24: {
            SessionGracePeriodMillis = input.ReadUInt32();
            break;
          }
          case 32: {
            ReadConsistencyMode = (global::Ydb.Coordination.ConsistencyMode) input.ReadEnum();
            break;
          }
          case 40: {
            AttachConsistencyMode = (global::Ydb.Coordination.ConsistencyMode) input.ReadEnum();
            break;
          }
          case 48: {
            RateLimiterCountersMode = (global::Ydb.Coordination.RateLimiterCountersMode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 16: {
            SelfCheckPeriodMillis = input.ReadUInt32();
            break;
          }
          case 24: {
            SessionGracePeriodMillis = input.ReadUInt32();
            break;
          }
          case 32: {
            ReadConsistencyMode = (global::Ydb.Coordination.ConsistencyMode) input.ReadEnum();
            break;
          }
          case 40: {
            AttachConsistencyMode = (global::Ydb.Coordination.ConsistencyMode) input.ReadEnum();
            break;
          }
          case 48: {
            RateLimiterCountersMode = (global::Ydb.Coordination.RateLimiterCountersMode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Describes an active client session
  /// </summary>
  public sealed partial class SessionDescription : pb::IMessage<SessionDescription>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SessionDescription> _parser = new pb::MessageParser<SessionDescription>(() => new SessionDescription());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SessionDescription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Coordination.YdbCoordinationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionDescription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionDescription(SessionDescription other) : this() {
      sessionId_ = other.sessionId_;
      timeoutMillis_ = other.timeoutMillis_;
      description_ = other.description_;
      attached_ = other.attached_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionDescription Clone() {
      return new SessionDescription(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private ulong sessionId_;
    /// <summary>
    /// Session id generated by the server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    /// <summary>Field number for the "timeout_millis" field.</summary>
    public const int TimeoutMillisFieldNumber = 2;
    private ulong timeoutMillis_;
    /// <summary>
    /// Expiration timeout of the session
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TimeoutMillis {
      get { return timeoutMillis_; }
      set {
        timeoutMillis_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// User-specified description of this session
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attached" field.</summary>
    public const int AttachedFieldNumber = 4;
    private bool attached_;
    /// <summary>
    /// True if this session is currently attached to a client
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Attached {
      get { return attached_; }
      set {
        attached_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SessionDescription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SessionDescription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (TimeoutMillis != other.TimeoutMillis) return false;
      if (Description != other.Description) return false;
      if (Attached != other.Attached) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId != 0UL) hash ^= SessionId.GetHashCode();
      if (TimeoutMillis != 0UL) hash ^= TimeoutMillis.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Attached != false) hash ^= Attached.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SessionId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(SessionId);
      }
      if (TimeoutMillis != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(TimeoutMillis);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (Attached != false) {
        output.WriteRawTag(32);
        output.WriteBool(Attached);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SessionId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(SessionId);
      }
      if (TimeoutMillis != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(TimeoutMillis);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (Attached != false) {
        output.WriteRawTag(32);
        output.WriteBool(Attached);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SessionId);
      }
      if (TimeoutMillis != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeoutMillis);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Attached != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SessionDescription other) {
      if (other == null) {
        return;
      }
      if (other.SessionId != 0UL) {
        SessionId = other.SessionId;
      }
      if (other.TimeoutMillis != 0UL) {
        TimeoutMillis = other.TimeoutMillis;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Attached != false) {
        Attached = other.Attached;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SessionId = input.ReadUInt64();
            break;
          }
          case 16: {
            TimeoutMillis = input.ReadUInt64();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            Attached = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SessionId = input.ReadUInt64();
            break;
          }
          case 16: {
            TimeoutMillis = input.ReadUInt64();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            Attached = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Describes an owner or a waiter of this semaphore
  /// </summary>
  public sealed partial class SemaphoreSession : pb::IMessage<SemaphoreSession>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SemaphoreSession> _parser = new pb::MessageParser<SemaphoreSession>(() => new SemaphoreSession());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SemaphoreSession> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Coordination.YdbCoordinationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SemaphoreSession() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SemaphoreSession(SemaphoreSession other) : this() {
      orderId_ = other.orderId_;
      sessionId_ = other.sessionId_;
      timeoutMillis_ = other.timeoutMillis_;
      count_ = other.count_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SemaphoreSession Clone() {
      return new SemaphoreSession(this);
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 5;
    private ulong orderId_;
    /// <summary>
    /// A monotonically increasing id which determines locking order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong OrderId {
      get { return orderId_; }
      set {
        orderId_ = value;
      }
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private ulong sessionId_;
    /// <summary>
    /// An id of the session which tried to acquire the semaphore
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    /// <summary>Field number for the "timeout_millis" field.</summary>
    public const int TimeoutMillisFieldNumber = 2;
    private ulong timeoutMillis_;
    /// <summary>
    /// A timeout in milliseconds for operation in waiters queue
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TimeoutMillis {
      get { return timeoutMillis_; }
      set {
        timeoutMillis_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 3;
    private ulong count_;
    /// <summary>
    /// Number of tokens for an acquire operation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 4;
    private pb::ByteString data_ = pb::ByteString.Empty;
    /// <summary>
    /// User-defined data attached to the acquire operation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SemaphoreSession);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SemaphoreSession other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderId != other.OrderId) return false;
      if (SessionId != other.SessionId) return false;
      if (TimeoutMillis != other.TimeoutMillis) return false;
      if (Count != other.Count) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderId != 0UL) hash ^= OrderId.GetHashCode();
      if (SessionId != 0UL) hash ^= SessionId.GetHashCode();
      if (TimeoutMillis != 0UL) hash ^= TimeoutMillis.GetHashCode();
      if (Count != 0UL) hash ^= Count.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SessionId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(SessionId);
      }
      if (TimeoutMillis != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(TimeoutMillis);
      }
      if (Count != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Count);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Data);
      }
      if (OrderId != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(OrderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SessionId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(SessionId);
      }
      if (TimeoutMillis != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(TimeoutMillis);
      }
      if (Count != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Count);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Data);
      }
      if (OrderId != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(OrderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(OrderId);
      }
      if (SessionId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SessionId);
      }
      if (TimeoutMillis != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeoutMillis);
      }
      if (Count != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Count);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SemaphoreSession other) {
      if (other == null) {
        return;
      }
      if (other.OrderId != 0UL) {
        OrderId = other.OrderId;
      }
      if (other.SessionId != 0UL) {
        SessionId = other.SessionId;
      }
      if (other.TimeoutMillis != 0UL) {
        TimeoutMillis = other.TimeoutMillis;
      }
      if (other.Count != 0UL) {
        Count = other.Count;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SessionId = input.ReadUInt64();
            break;
          }
          case 16: {
            TimeoutMillis = input.ReadUInt64();
            break;
          }
          case 24: {
            Count = input.ReadUInt64();
            break;
          }
          case 34: {
            Data = input.ReadBytes();
            break;
          }
          case 40: {
            OrderId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SessionId = input.ReadUInt64();
            break;
          }
          case 16: {
            TimeoutMillis = input.ReadUInt64();
            break;
          }
          case 24: {
            Count = input.ReadUInt64();
            break;
          }
          case 34: {
            Data = input.ReadBytes();
            break;
          }
          case 40: {
            OrderId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Describes the state of a semaphore
  /// </summary>
  public sealed partial class SemaphoreDescription : pb::IMessage<SemaphoreDescription>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SemaphoreDescription> _parser = new pb::MessageParser<SemaphoreDescription>(() => new SemaphoreDescription());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SemaphoreDescription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Coordination.YdbCoordinationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SemaphoreDescription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SemaphoreDescription(SemaphoreDescription other) : this() {
      name_ = other.name_;
      data_ = other.data_;
      count_ = other.count_;
      limit_ = other.limit_;
      ephemeral_ = other.ephemeral_;
      owners_ = other.owners_.Clone();
      waiters_ = other.waiters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SemaphoreDescription Clone() {
      return new SemaphoreDescription(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the semaphore
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    /// <summary>
    /// User-defined data attached to the semaphore
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 7;
    private ulong count_;
    /// <summary>
    /// Number of tokens currently acquired by owners
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private ulong limit_;
    /// <summary>
    /// Maximum number of tokens that may acquired
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "ephemeral" field.</summary>
    public const int EphemeralFieldNumber = 4;
    private bool ephemeral_;
    /// <summary>
    /// Ephemeral semaphores are deleted when released by all owners and waiters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ephemeral {
      get { return ephemeral_; }
      set {
        ephemeral_ = value;
      }
    }

    /// <summary>Field number for the "owners" field.</summary>
    public const int OwnersFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Ydb.Coordination.SemaphoreSession> _repeated_owners_codec
        = pb::FieldCodec.ForMessage(42, global::Ydb.Coordination.SemaphoreSession.Parser);
    private readonly pbc::RepeatedField<global::Ydb.Coordination.SemaphoreSession> owners_ = new pbc::RepeatedField<global::Ydb.Coordination.SemaphoreSession>();
    /// <summary>
    /// A list of current owners of the semaphore
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.Coordination.SemaphoreSession> Owners {
      get { return owners_; }
    }

    /// <summary>Field number for the "waiters" field.</summary>
    public const int WaitersFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Ydb.Coordination.SemaphoreSession> _repeated_waiters_codec
        = pb::FieldCodec.ForMessage(50, global::Ydb.Coordination.SemaphoreSession.Parser);
    private readonly pbc::RepeatedField<global::Ydb.Coordination.SemaphoreSession> waiters_ = new pbc::RepeatedField<global::Ydb.Coordination.SemaphoreSession>();
    /// <summary>
    /// A list of current waiters on the semaphore
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.Coordination.SemaphoreSession> Waiters {
      get { return waiters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SemaphoreDescription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SemaphoreDescription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Data != other.Data) return false;
      if (Count != other.Count) return false;
      if (Limit != other.Limit) return false;
      if (Ephemeral != other.Ephemeral) return false;
      if(!owners_.Equals(other.owners_)) return false;
      if(!waiters_.Equals(other.waiters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (Count != 0UL) hash ^= Count.GetHashCode();
      if (Limit != 0UL) hash ^= Limit.GetHashCode();
      if (Ephemeral != false) hash ^= Ephemeral.GetHashCode();
      hash ^= owners_.GetHashCode();
      hash ^= waiters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (Limit != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Limit);
      }
      if (Ephemeral != false) {
        output.WriteRawTag(32);
        output.WriteBool(Ephemeral);
      }
      owners_.WriteTo(output, _repeated_owners_codec);
      waiters_.WriteTo(output, _repeated_waiters_codec);
      if (Count != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (Limit != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Limit);
      }
      if (Ephemeral != false) {
        output.WriteRawTag(32);
        output.WriteBool(Ephemeral);
      }
      owners_.WriteTo(ref output, _repeated_owners_codec);
      waiters_.WriteTo(ref output, _repeated_waiters_codec);
      if (Count != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (Count != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Count);
      }
      if (Limit != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Limit);
      }
      if (Ephemeral != false) {
        size += 1 + 1;
      }
      size += owners_.CalculateSize(_repeated_owners_codec);
      size += waiters_.CalculateSize(_repeated_waiters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SemaphoreDescription other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.Count != 0UL) {
        Count = other.Count;
      }
      if (other.Limit != 0UL) {
        Limit = other.Limit;
      }
      if (other.Ephemeral != false) {
        Ephemeral = other.Ephemeral;
      }
      owners_.Add(other.owners_);
      waiters_.Add(other.waiters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 24: {
            Limit = input.ReadUInt64();
            break;
          }
          case 32: {
            Ephemeral = input.ReadBool();
            break;
          }
          case 42: {
            owners_.AddEntriesFrom(input, _repeated_owners_codec);
            break;
          }
          case 50: {
            waiters_.AddEntriesFrom(input, _repeated_waiters_codec);
            break;
          }
          case 56: {
            Count = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 24: {
            Limit = input.ReadUInt64();
            break;
          }
          case 32: {
            Ephemeral = input.ReadBool();
            break;
          }
          case 42: {
            owners_.AddEntriesFrom(ref input, _repeated_owners_codec);
            break;
          }
          case 50: {
            waiters_.AddEntriesFrom(ref input, _repeated_waiters_codec);
            break;
          }
          case 56: {
            Count = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Session request message sent from client to server
  /// </summary>
  public sealed partial class SessionRequest : pb::IMessage<SessionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SessionRequest> _parser = new pb::MessageParser<SessionRequest>(() => new SessionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Coordination.YdbCoordinationReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionRequest(SessionRequest other) : this() {
      switch (other.RequestCase) {
        case RequestOneofCase.Ping:
          Ping = other.Ping.Clone();
          break;
        case RequestOneofCase.Pong:
          Pong = other.Pong.Clone();
          break;
        case RequestOneofCase.SessionStart:
          SessionStart = other.SessionStart.Clone();
          break;
        case RequestOneofCase.SessionStop:
          SessionStop = other.SessionStop.Clone();
          break;
        case RequestOneofCase.Unsupported5:
          Unsupported5 = other.Unsupported5.Clone();
          break;
        case RequestOneofCase.Unsupported6:
          Unsupported6 = other.Unsupported6.Clone();
          break;
        case RequestOneofCase.AcquireSemaphore:
          AcquireSemaphore = other.AcquireSemaphore.Clone();
          break;
        case RequestOneofCase.ReleaseSemaphore:
          ReleaseSemaphore = other.ReleaseSemaphore.Clone();
          break;
        case RequestOneofCase.DescribeSemaphore:
          DescribeSemaphore = other.DescribeSemaphore.Clone();
          break;
        case RequestOneofCase.CreateSemaphore:
          CreateSemaphore = other.CreateSemaphore.Clone();
          break;
        case RequestOneofCase.UpdateSemaphore:
          UpdateSemaphore = other.UpdateSemaphore.Clone();
          break;
        case RequestOneofCase.DeleteSemaphore:
          DeleteSemaphore = other.DeleteSemaphore.Clone();
          break;
        case RequestOneofCase.Unsupported13:
          Unsupported13 = other.Unsupported13.Clone();
          break;
        case RequestOneofCase.Unsupported14:
          Unsupported14 = other.Unsupported14.Clone();
          break;
        case RequestOneofCase.Unsupported15:
          Unsupported15 = other.Unsupported15.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionRequest Clone() {
      return new SessionRequest(this);
    }

    /// <summary>Field number for the "ping" field.</summary>
    public const int PingFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionRequest.Types.PingPong Ping {
      get { return requestCase_ == RequestOneofCase.Ping ? (global::Ydb.Coordination.SessionRequest.Types.PingPong) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Ping;
      }
    }

    /// <summary>Field number for the "pong" field.</summary>
    public const int PongFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionRequest.Types.PingPong Pong {
      get { return requestCase_ == RequestOneofCase.Pong ? (global::Ydb.Coordination.SessionRequest.Types.PingPong) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Pong;
      }
    }

    /// <summary>Field number for the "session_start" field.</summary>
    public const int SessionStartFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionRequest.Types.SessionStart SessionStart {
      get { return requestCase_ == RequestOneofCase.SessionStart ? (global::Ydb.Coordination.SessionRequest.Types.SessionStart) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.SessionStart;
      }
    }

    /// <summary>Field number for the "session_stop" field.</summary>
    public const int SessionStopFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionRequest.Types.SessionStop SessionStop {
      get { return requestCase_ == RequestOneofCase.SessionStop ? (global::Ydb.Coordination.SessionRequest.Types.SessionStop) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.SessionStop;
      }
    }

    /// <summary>Field number for the "unsupported_5" field.</summary>
    public const int Unsupported5FieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.Unsupported Unsupported5 {
      get { return requestCase_ == RequestOneofCase.Unsupported5 ? (global::Ydb.Coordination.Unsupported) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Unsupported5;
      }
    }

    /// <summary>Field number for the "unsupported_6" field.</summary>
    public const int Unsupported6FieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.Unsupported Unsupported6 {
      get { return requestCase_ == RequestOneofCase.Unsupported6 ? (global::Ydb.Coordination.Unsupported) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Unsupported6;
      }
    }

    /// <summary>Field number for the "acquire_semaphore" field.</summary>
    public const int AcquireSemaphoreFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionRequest.Types.AcquireSemaphore AcquireSemaphore {
      get { return requestCase_ == RequestOneofCase.AcquireSemaphore ? (global::Ydb.Coordination.SessionRequest.Types.AcquireSemaphore) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.AcquireSemaphore;
      }
    }

    /// <summary>Field number for the "release_semaphore" field.</summary>
    public const int ReleaseSemaphoreFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionRequest.Types.ReleaseSemaphore ReleaseSemaphore {
      get { return requestCase_ == RequestOneofCase.ReleaseSemaphore ? (global::Ydb.Coordination.SessionRequest.Types.ReleaseSemaphore) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.ReleaseSemaphore;
      }
    }

    /// <summary>Field number for the "describe_semaphore" field.</summary>
    public const int DescribeSemaphoreFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionRequest.Types.DescribeSemaphore DescribeSemaphore {
      get { return requestCase_ == RequestOneofCase.DescribeSemaphore ? (global::Ydb.Coordination.SessionRequest.Types.DescribeSemaphore) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.DescribeSemaphore;
      }
    }

    /// <summary>Field number for the "create_semaphore" field.</summary>
    public const int CreateSemaphoreFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionRequest.Types.CreateSemaphore CreateSemaphore {
      get { return requestCase_ == RequestOneofCase.CreateSemaphore ? (global::Ydb.Coordination.SessionRequest.Types.CreateSemaphore) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.CreateSemaphore;
      }
    }

    /// <summary>Field number for the "update_semaphore" field.</summary>
    public const int UpdateSemaphoreFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionRequest.Types.UpdateSemaphore UpdateSemaphore {
      get { return requestCase_ == RequestOneofCase.UpdateSemaphore ? (global::Ydb.Coordination.SessionRequest.Types.UpdateSemaphore) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.UpdateSemaphore;
      }
    }

    /// <summary>Field number for the "delete_semaphore" field.</summary>
    public const int DeleteSemaphoreFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionRequest.Types.DeleteSemaphore DeleteSemaphore {
      get { return requestCase_ == RequestOneofCase.DeleteSemaphore ? (global::Ydb.Coordination.SessionRequest.Types.DeleteSemaphore) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.DeleteSemaphore;
      }
    }

    /// <summary>Field number for the "unsupported_13" field.</summary>
    public const int Unsupported13FieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.Unsupported Unsupported13 {
      get { return requestCase_ == RequestOneofCase.Unsupported13 ? (global::Ydb.Coordination.Unsupported) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Unsupported13;
      }
    }

    /// <summary>Field number for the "unsupported_14" field.</summary>
    public const int Unsupported14FieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.Unsupported Unsupported14 {
      get { return requestCase_ == RequestOneofCase.Unsupported14 ? (global::Ydb.Coordination.Unsupported) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Unsupported14;
      }
    }

    /// <summary>Field number for the "unsupported_15" field.</summary>
    public const int Unsupported15FieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.Unsupported Unsupported15 {
      get { return requestCase_ == RequestOneofCase.Unsupported15 ? (global::Ydb.Coordination.Unsupported) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Unsupported15;
      }
    }

    private object request_;
    /// <summary>Enum of possible cases for the "request" oneof.</summary>
    public enum RequestOneofCase {
      None = 0,
      Ping = 1,
      Pong = 2,
      SessionStart = 3,
      SessionStop = 4,
      Unsupported5 = 5,
      Unsupported6 = 6,
      AcquireSemaphore = 7,
      ReleaseSemaphore = 8,
      DescribeSemaphore = 9,
      CreateSemaphore = 10,
      UpdateSemaphore = 11,
      DeleteSemaphore = 12,
      Unsupported13 = 13,
      Unsupported14 = 14,
      Unsupported15 = 15,
    }
    private RequestOneofCase requestCase_ = RequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestOneofCase RequestCase {
      get { return requestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequest() {
      requestCase_ = RequestOneofCase.None;
      request_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ping, other.Ping)) return false;
      if (!object.Equals(Pong, other.Pong)) return false;
      if (!object.Equals(SessionStart, other.SessionStart)) return false;
      if (!object.Equals(SessionStop, other.SessionStop)) return false;
      if (!object.Equals(Unsupported5, other.Unsupported5)) return false;
      if (!object.Equals(Unsupported6, other.Unsupported6)) return false;
      if (!object.Equals(AcquireSemaphore, other.AcquireSemaphore)) return false;
      if (!object.Equals(ReleaseSemaphore, other.ReleaseSemaphore)) return false;
      if (!object.Equals(DescribeSemaphore, other.DescribeSemaphore)) return false;
      if (!object.Equals(CreateSemaphore, other.CreateSemaphore)) return false;
      if (!object.Equals(UpdateSemaphore, other.UpdateSemaphore)) return false;
      if (!object.Equals(DeleteSemaphore, other.DeleteSemaphore)) return false;
      if (!object.Equals(Unsupported13, other.Unsupported13)) return false;
      if (!object.Equals(Unsupported14, other.Unsupported14)) return false;
      if (!object.Equals(Unsupported15, other.Unsupported15)) return false;
      if (RequestCase != other.RequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (requestCase_ == RequestOneofCase.Ping) hash ^= Ping.GetHashCode();
      if (requestCase_ == RequestOneofCase.Pong) hash ^= Pong.GetHashCode();
      if (requestCase_ == RequestOneofCase.SessionStart) hash ^= SessionStart.GetHashCode();
      if (requestCase_ == RequestOneofCase.SessionStop) hash ^= SessionStop.GetHashCode();
      if (requestCase_ == RequestOneofCase.Unsupported5) hash ^= Unsupported5.GetHashCode();
      if (requestCase_ == RequestOneofCase.Unsupported6) hash ^= Unsupported6.GetHashCode();
      if (requestCase_ == RequestOneofCase.AcquireSemaphore) hash ^= AcquireSemaphore.GetHashCode();
      if (requestCase_ == RequestOneofCase.ReleaseSemaphore) hash ^= ReleaseSemaphore.GetHashCode();
      if (requestCase_ == RequestOneofCase.DescribeSemaphore) hash ^= DescribeSemaphore.GetHashCode();
      if (requestCase_ == RequestOneofCase.CreateSemaphore) hash ^= CreateSemaphore.GetHashCode();
      if (requestCase_ == RequestOneofCase.UpdateSemaphore) hash ^= UpdateSemaphore.GetHashCode();
      if (requestCase_ == RequestOneofCase.DeleteSemaphore) hash ^= DeleteSemaphore.GetHashCode();
      if (requestCase_ == RequestOneofCase.Unsupported13) hash ^= Unsupported13.GetHashCode();
      if (requestCase_ == RequestOneofCase.Unsupported14) hash ^= Unsupported14.GetHashCode();
      if (requestCase_ == RequestOneofCase.Unsupported15) hash ^= Unsupported15.GetHashCode();
      hash ^= (int) requestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (requestCase_ == RequestOneofCase.Ping) {
        output.WriteRawTag(10);
        output.WriteMessage(Ping);
      }
      if (requestCase_ == RequestOneofCase.Pong) {
        output.WriteRawTag(18);
        output.WriteMessage(Pong);
      }
      if (requestCase_ == RequestOneofCase.SessionStart) {
        output.WriteRawTag(26);
        output.WriteMessage(SessionStart);
      }
      if (requestCase_ == RequestOneofCase.SessionStop) {
        output.WriteRawTag(34);
        output.WriteMessage(SessionStop);
      }
      if (requestCase_ == RequestOneofCase.Unsupported5) {
        output.WriteRawTag(42);
        output.WriteMessage(Unsupported5);
      }
      if (requestCase_ == RequestOneofCase.Unsupported6) {
        output.WriteRawTag(50);
        output.WriteMessage(Unsupported6);
      }
      if (requestCase_ == RequestOneofCase.AcquireSemaphore) {
        output.WriteRawTag(58);
        output.WriteMessage(AcquireSemaphore);
      }
      if (requestCase_ == RequestOneofCase.ReleaseSemaphore) {
        output.WriteRawTag(66);
        output.WriteMessage(ReleaseSemaphore);
      }
      if (requestCase_ == RequestOneofCase.DescribeSemaphore) {
        output.WriteRawTag(74);
        output.WriteMessage(DescribeSemaphore);
      }
      if (requestCase_ == RequestOneofCase.CreateSemaphore) {
        output.WriteRawTag(82);
        output.WriteMessage(CreateSemaphore);
      }
      if (requestCase_ == RequestOneofCase.UpdateSemaphore) {
        output.WriteRawTag(90);
        output.WriteMessage(UpdateSemaphore);
      }
      if (requestCase_ == RequestOneofCase.DeleteSemaphore) {
        output.WriteRawTag(98);
        output.WriteMessage(DeleteSemaphore);
      }
      if (requestCase_ == RequestOneofCase.Unsupported13) {
        output.WriteRawTag(106);
        output.WriteMessage(Unsupported13);
      }
      if (requestCase_ == RequestOneofCase.Unsupported14) {
        output.WriteRawTag(114);
        output.WriteMessage(Unsupported14);
      }
      if (requestCase_ == RequestOneofCase.Unsupported15) {
        output.WriteRawTag(122);
        output.WriteMessage(Unsupported15);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (requestCase_ == RequestOneofCase.Ping) {
        output.WriteRawTag(10);
        output.WriteMessage(Ping);
      }
      if (requestCase_ == RequestOneofCase.Pong) {
        output.WriteRawTag(18);
        output.WriteMessage(Pong);
      }
      if (requestCase_ == RequestOneofCase.SessionStart) {
        output.WriteRawTag(26);
        output.WriteMessage(SessionStart);
      }
      if (requestCase_ == RequestOneofCase.SessionStop) {
        output.WriteRawTag(34);
        output.WriteMessage(SessionStop);
      }
      if (requestCase_ == RequestOneofCase.Unsupported5) {
        output.WriteRawTag(42);
        output.WriteMessage(Unsupported5);
      }
      if (requestCase_ == RequestOneofCase.Unsupported6) {
        output.WriteRawTag(50);
        output.WriteMessage(Unsupported6);
      }
      if (requestCase_ == RequestOneofCase.AcquireSemaphore) {
        output.WriteRawTag(58);
        output.WriteMessage(AcquireSemaphore);
      }
      if (requestCase_ == RequestOneofCase.ReleaseSemaphore) {
        output.WriteRawTag(66);
        output.WriteMessage(ReleaseSemaphore);
      }
      if (requestCase_ == RequestOneofCase.DescribeSemaphore) {
        output.WriteRawTag(74);
        output.WriteMessage(DescribeSemaphore);
      }
      if (requestCase_ == RequestOneofCase.CreateSemaphore) {
        output.WriteRawTag(82);
        output.WriteMessage(CreateSemaphore);
      }
      if (requestCase_ == RequestOneofCase.UpdateSemaphore) {
        output.WriteRawTag(90);
        output.WriteMessage(UpdateSemaphore);
      }
      if (requestCase_ == RequestOneofCase.DeleteSemaphore) {
        output.WriteRawTag(98);
        output.WriteMessage(DeleteSemaphore);
      }
      if (requestCase_ == RequestOneofCase.Unsupported13) {
        output.WriteRawTag(106);
        output.WriteMessage(Unsupported13);
      }
      if (requestCase_ == RequestOneofCase.Unsupported14) {
        output.WriteRawTag(114);
        output.WriteMessage(Unsupported14);
      }
      if (requestCase_ == RequestOneofCase.Unsupported15) {
        output.WriteRawTag(122);
        output.WriteMessage(Unsupported15);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (requestCase_ == RequestOneofCase.Ping) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ping);
      }
      if (requestCase_ == RequestOneofCase.Pong) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pong);
      }
      if (requestCase_ == RequestOneofCase.SessionStart) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionStart);
      }
      if (requestCase_ == RequestOneofCase.SessionStop) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionStop);
      }
      if (requestCase_ == RequestOneofCase.Unsupported5) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unsupported5);
      }
      if (requestCase_ == RequestOneofCase.Unsupported6) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unsupported6);
      }
      if (requestCase_ == RequestOneofCase.AcquireSemaphore) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AcquireSemaphore);
      }
      if (requestCase_ == RequestOneofCase.ReleaseSemaphore) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReleaseSemaphore);
      }
      if (requestCase_ == RequestOneofCase.DescribeSemaphore) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DescribeSemaphore);
      }
      if (requestCase_ == RequestOneofCase.CreateSemaphore) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateSemaphore);
      }
      if (requestCase_ == RequestOneofCase.UpdateSemaphore) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateSemaphore);
      }
      if (requestCase_ == RequestOneofCase.DeleteSemaphore) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteSemaphore);
      }
      if (requestCase_ == RequestOneofCase.Unsupported13) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unsupported13);
      }
      if (requestCase_ == RequestOneofCase.Unsupported14) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unsupported14);
      }
      if (requestCase_ == RequestOneofCase.Unsupported15) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unsupported15);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SessionRequest other) {
      if (other == null) {
        return;
      }
      switch (other.RequestCase) {
        case RequestOneofCase.Ping:
          if (Ping == null) {
            Ping = new global::Ydb.Coordination.SessionRequest.Types.PingPong();
          }
          Ping.MergeFrom(other.Ping);
          break;
        case RequestOneofCase.Pong:
          if (Pong == null) {
            Pong = new global::Ydb.Coordination.SessionRequest.Types.PingPong();
          }
          Pong.MergeFrom(other.Pong);
          break;
        case RequestOneofCase.SessionStart:
          if (SessionStart == null) {
            SessionStart = new global::Ydb.Coordination.SessionRequest.Types.SessionStart();
          }
          SessionStart.MergeFrom(other.SessionStart);
          break;
        case RequestOneofCase.SessionStop:
          if (SessionStop == null) {
            SessionStop = new global::Ydb.Coordination.SessionRequest.Types.SessionStop();
          }
          SessionStop.MergeFrom(other.SessionStop);
          break;
        case RequestOneofCase.Unsupported5:
          if (Unsupported5 == null) {
            Unsupported5 = new global::Ydb.Coordination.Unsupported();
          }
          Unsupported5.MergeFrom(other.Unsupported5);
          break;
        case RequestOneofCase.Unsupported6:
          if (Unsupported6 == null) {
            Unsupported6 = new global::Ydb.Coordination.Unsupported();
          }
          Unsupported6.MergeFrom(other.Unsupported6);
          break;
        case RequestOneofCase.AcquireSemaphore:
          if (AcquireSemaphore == null) {
            AcquireSemaphore = new global::Ydb.Coordination.SessionRequest.Types.AcquireSemaphore();
          }
          AcquireSemaphore.MergeFrom(other.AcquireSemaphore);
          break;
        case RequestOneofCase.ReleaseSemaphore:
          if (ReleaseSemaphore == null) {
            ReleaseSemaphore = new global::Ydb.Coordination.SessionRequest.Types.ReleaseSemaphore();
          }
          ReleaseSemaphore.MergeFrom(other.ReleaseSemaphore);
          break;
        case RequestOneofCase.DescribeSemaphore:
          if (DescribeSemaphore == null) {
            DescribeSemaphore = new global::Ydb.Coordination.SessionRequest.Types.DescribeSemaphore();
          }
          DescribeSemaphore.MergeFrom(other.DescribeSemaphore);
          break;
        case RequestOneofCase.CreateSemaphore:
          if (CreateSemaphore == null) {
            CreateSemaphore = new global::Ydb.Coordination.SessionRequest.Types.CreateSemaphore();
          }
          CreateSemaphore.MergeFrom(other.CreateSemaphore);
          break;
        case RequestOneofCase.UpdateSemaphore:
          if (UpdateSemaphore == null) {
            UpdateSemaphore = new global::Ydb.Coordination.SessionRequest.Types.UpdateSemaphore();
          }
          UpdateSemaphore.MergeFrom(other.UpdateSemaphore);
          break;
        case RequestOneofCase.DeleteSemaphore:
          if (DeleteSemaphore == null) {
            DeleteSemaphore = new global::Ydb.Coordination.SessionRequest.Types.DeleteSemaphore();
          }
          DeleteSemaphore.MergeFrom(other.DeleteSemaphore);
          break;
        case RequestOneofCase.Unsupported13:
          if (Unsupported13 == null) {
            Unsupported13 = new global::Ydb.Coordination.Unsupported();
          }
          Unsupported13.MergeFrom(other.Unsupported13);
          break;
        case RequestOneofCase.Unsupported14:
          if (Unsupported14 == null) {
            Unsupported14 = new global::Ydb.Coordination.Unsupported();
          }
          Unsupported14.MergeFrom(other.Unsupported14);
          break;
        case RequestOneofCase.Unsupported15:
          if (Unsupported15 == null) {
            Unsupported15 = new global::Ydb.Coordination.Unsupported();
          }
          Unsupported15.MergeFrom(other.Unsupported15);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Ydb.Coordination.SessionRequest.Types.PingPong subBuilder = new global::Ydb.Coordination.SessionRequest.Types.PingPong();
            if (requestCase_ == RequestOneofCase.Ping) {
              subBuilder.MergeFrom(Ping);
            }
            input.ReadMessage(subBuilder);
            Ping = subBuilder;
            break;
          }
          case 18: {
            global::Ydb.Coordination.SessionRequest.Types.PingPong subBuilder = new global::Ydb.Coordination.SessionRequest.Types.PingPong();
            if (requestCase_ == RequestOneofCase.Pong) {
              subBuilder.MergeFrom(Pong);
            }
            input.ReadMessage(subBuilder);
            Pong = subBuilder;
            break;
          }
          case 26: {
            global::Ydb.Coordination.SessionRequest.Types.SessionStart subBuilder = new global::Ydb.Coordination.SessionRequest.Types.SessionStart();
            if (requestCase_ == RequestOneofCase.SessionStart) {
              subBuilder.MergeFrom(SessionStart);
            }
            input.ReadMessage(subBuilder);
            SessionStart = subBuilder;
            break;
          }
          case 34: {
            global::Ydb.Coordination.SessionRequest.Types.SessionStop subBuilder = new global::Ydb.Coordination.SessionRequest.Types.SessionStop();
            if (requestCase_ == RequestOneofCase.SessionStop) {
              subBuilder.MergeFrom(SessionStop);
            }
            input.ReadMessage(subBuilder);
            SessionStop = subBuilder;
            break;
          }
          case 42: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (requestCase_ == RequestOneofCase.Unsupported5) {
              subBuilder.MergeFrom(Unsupported5);
            }
            input.ReadMessage(subBuilder);
            Unsupported5 = subBuilder;
            break;
          }
          case 50: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (requestCase_ == RequestOneofCase.Unsupported6) {
              subBuilder.MergeFrom(Unsupported6);
            }
            input.ReadMessage(subBuilder);
            Unsupported6 = subBuilder;
            break;
          }
          case 58: {
            global::Ydb.Coordination.SessionRequest.Types.AcquireSemaphore subBuilder = new global::Ydb.Coordination.SessionRequest.Types.AcquireSemaphore();
            if (requestCase_ == RequestOneofCase.AcquireSemaphore) {
              subBuilder.MergeFrom(AcquireSemaphore);
            }
            input.ReadMessage(subBuilder);
            AcquireSemaphore = subBuilder;
            break;
          }
          case 66: {
            global::Ydb.Coordination.SessionRequest.Types.ReleaseSemaphore subBuilder = new global::Ydb.Coordination.SessionRequest.Types.ReleaseSemaphore();
            if (requestCase_ == RequestOneofCase.ReleaseSemaphore) {
              subBuilder.MergeFrom(ReleaseSemaphore);
            }
            input.ReadMessage(subBuilder);
            ReleaseSemaphore = subBuilder;
            break;
          }
          case 74: {
            global::Ydb.Coordination.SessionRequest.Types.DescribeSemaphore subBuilder = new global::Ydb.Coordination.SessionRequest.Types.DescribeSemaphore();
            if (requestCase_ == RequestOneofCase.DescribeSemaphore) {
              subBuilder.MergeFrom(DescribeSemaphore);
            }
            input.ReadMessage(subBuilder);
            DescribeSemaphore = subBuilder;
            break;
          }
          case 82: {
            global::Ydb.Coordination.SessionRequest.Types.CreateSemaphore subBuilder = new global::Ydb.Coordination.SessionRequest.Types.CreateSemaphore();
            if (requestCase_ == RequestOneofCase.CreateSemaphore) {
              subBuilder.MergeFrom(CreateSemaphore);
            }
            input.ReadMessage(subBuilder);
            CreateSemaphore = subBuilder;
            break;
          }
          case 90: {
            global::Ydb.Coordination.SessionRequest.Types.UpdateSemaphore subBuilder = new global::Ydb.Coordination.SessionRequest.Types.UpdateSemaphore();
            if (requestCase_ == RequestOneofCase.UpdateSemaphore) {
              subBuilder.MergeFrom(UpdateSemaphore);
            }
            input.ReadMessage(subBuilder);
            UpdateSemaphore = subBuilder;
            break;
          }
          case 98: {
            global::Ydb.Coordination.SessionRequest.Types.DeleteSemaphore subBuilder = new global::Ydb.Coordination.SessionRequest.Types.DeleteSemaphore();
            if (requestCase_ == RequestOneofCase.DeleteSemaphore) {
              subBuilder.MergeFrom(DeleteSemaphore);
            }
            input.ReadMessage(subBuilder);
            DeleteSemaphore = subBuilder;
            break;
          }
          case 106: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (requestCase_ == RequestOneofCase.Unsupported13) {
              subBuilder.MergeFrom(Unsupported13);
            }
            input.ReadMessage(subBuilder);
            Unsupported13 = subBuilder;
            break;
          }
          case 114: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (requestCase_ == RequestOneofCase.Unsupported14) {
              subBuilder.MergeFrom(Unsupported14);
            }
            input.ReadMessage(subBuilder);
            Unsupported14 = subBuilder;
            break;
          }
          case 122: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (requestCase_ == RequestOneofCase.Unsupported15) {
              subBuilder.MergeFrom(Unsupported15);
            }
            input.ReadMessage(subBuilder);
            Unsupported15 = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Ydb.Coordination.SessionRequest.Types.PingPong subBuilder = new global::Ydb.Coordination.SessionRequest.Types.PingPong();
            if (requestCase_ == RequestOneofCase.Ping) {
              subBuilder.MergeFrom(Ping);
            }
            input.ReadMessage(subBuilder);
            Ping = subBuilder;
            break;
          }
          case 18: {
            global::Ydb.Coordination.SessionRequest.Types.PingPong subBuilder = new global::Ydb.Coordination.SessionRequest.Types.PingPong();
            if (requestCase_ == RequestOneofCase.Pong) {
              subBuilder.MergeFrom(Pong);
            }
            input.ReadMessage(subBuilder);
            Pong = subBuilder;
            break;
          }
          case 26: {
            global::Ydb.Coordination.SessionRequest.Types.SessionStart subBuilder = new global::Ydb.Coordination.SessionRequest.Types.SessionStart();
            if (requestCase_ == RequestOneofCase.SessionStart) {
              subBuilder.MergeFrom(SessionStart);
            }
            input.ReadMessage(subBuilder);
            SessionStart = subBuilder;
            break;
          }
          case 34: {
            global::Ydb.Coordination.SessionRequest.Types.SessionStop subBuilder = new global::Ydb.Coordination.SessionRequest.Types.SessionStop();
            if (requestCase_ == RequestOneofCase.SessionStop) {
              subBuilder.MergeFrom(SessionStop);
            }
            input.ReadMessage(subBuilder);
            SessionStop = subBuilder;
            break;
          }
          case 42: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (requestCase_ == RequestOneofCase.Unsupported5) {
              subBuilder.MergeFrom(Unsupported5);
            }
            input.ReadMessage(subBuilder);
            Unsupported5 = subBuilder;
            break;
          }
          case 50: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (requestCase_ == RequestOneofCase.Unsupported6) {
              subBuilder.MergeFrom(Unsupported6);
            }
            input.ReadMessage(subBuilder);
            Unsupported6 = subBuilder;
            break;
          }
          case 58: {
            global::Ydb.Coordination.SessionRequest.Types.AcquireSemaphore subBuilder = new global::Ydb.Coordination.SessionRequest.Types.AcquireSemaphore();
            if (requestCase_ == RequestOneofCase.AcquireSemaphore) {
              subBuilder.MergeFrom(AcquireSemaphore);
            }
            input.ReadMessage(subBuilder);
            AcquireSemaphore = subBuilder;
            break;
          }
          case 66: {
            global::Ydb.Coordination.SessionRequest.Types.ReleaseSemaphore subBuilder = new global::Ydb.Coordination.SessionRequest.Types.ReleaseSemaphore();
            if (requestCase_ == RequestOneofCase.ReleaseSemaphore) {
              subBuilder.MergeFrom(ReleaseSemaphore);
            }
            input.ReadMessage(subBuilder);
            ReleaseSemaphore = subBuilder;
            break;
          }
          case 74: {
            global::Ydb.Coordination.SessionRequest.Types.DescribeSemaphore subBuilder = new global::Ydb.Coordination.SessionRequest.Types.DescribeSemaphore();
            if (requestCase_ == RequestOneofCase.DescribeSemaphore) {
              subBuilder.MergeFrom(DescribeSemaphore);
            }
            input.ReadMessage(subBuilder);
            DescribeSemaphore = subBuilder;
            break;
          }
          case 82: {
            global::Ydb.Coordination.SessionRequest.Types.CreateSemaphore subBuilder = new global::Ydb.Coordination.SessionRequest.Types.CreateSemaphore();
            if (requestCase_ == RequestOneofCase.CreateSemaphore) {
              subBuilder.MergeFrom(CreateSemaphore);
            }
            input.ReadMessage(subBuilder);
            CreateSemaphore = subBuilder;
            break;
          }
          case 90: {
            global::Ydb.Coordination.SessionRequest.Types.UpdateSemaphore subBuilder = new global::Ydb.Coordination.SessionRequest.Types.UpdateSemaphore();
            if (requestCase_ == RequestOneofCase.UpdateSemaphore) {
              subBuilder.MergeFrom(UpdateSemaphore);
            }
            input.ReadMessage(subBuilder);
            UpdateSemaphore = subBuilder;
            break;
          }
          case 98: {
            global::Ydb.Coordination.SessionRequest.Types.DeleteSemaphore subBuilder = new global::Ydb.Coordination.SessionRequest.Types.DeleteSemaphore();
            if (requestCase_ == RequestOneofCase.DeleteSemaphore) {
              subBuilder.MergeFrom(DeleteSemaphore);
            }
            input.ReadMessage(subBuilder);
            DeleteSemaphore = subBuilder;
            break;
          }
          case 106: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (requestCase_ == RequestOneofCase.Unsupported13) {
              subBuilder.MergeFrom(Unsupported13);
            }
            input.ReadMessage(subBuilder);
            Unsupported13 = subBuilder;
            break;
          }
          case 114: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (requestCase_ == RequestOneofCase.Unsupported14) {
              subBuilder.MergeFrom(Unsupported14);
            }
            input.ReadMessage(subBuilder);
            Unsupported14 = subBuilder;
            break;
          }
          case 122: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (requestCase_ == RequestOneofCase.Unsupported15) {
              subBuilder.MergeFrom(Unsupported15);
            }
            input.ReadMessage(subBuilder);
            Unsupported15 = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SessionRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      ///*
      /// Used for checking liveness of the connection
      /// </summary>
      public sealed partial class PingPong : pb::IMessage<PingPong>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PingPong> _parser = new pb::MessageParser<PingPong>(() => new PingPong());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PingPong> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingPong() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingPong(PingPong other) : this() {
          opaque_ = other.opaque_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingPong Clone() {
          return new PingPong(this);
        }

        /// <summary>Field number for the "opaque" field.</summary>
        public const int OpaqueFieldNumber = 1;
        private ulong opaque_;
        /// <summary>
        /// Opaque number specified in the ping message is echoed in the pong message
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Opaque {
          get { return opaque_; }
          set {
            opaque_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PingPong);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PingPong other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Opaque != other.Opaque) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Opaque != 0UL) hash ^= Opaque.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Opaque != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(Opaque);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Opaque != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(Opaque);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Opaque != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Opaque);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PingPong other) {
          if (other == null) {
            return;
          }
          if (other.Opaque != 0UL) {
            Opaque = other.Opaque;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Opaque = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Opaque = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// First message used to start/restore a session
      /// </summary>
      public sealed partial class SessionStart : pb::IMessage<SessionStart>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SessionStart> _parser = new pb::MessageParser<SessionStart>(() => new SessionStart());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionStart> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionRequest.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionStart() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionStart(SessionStart other) : this() {
          path_ = other.path_;
          sessionId_ = other.sessionId_;
          timeoutMillis_ = other.timeoutMillis_;
          description_ = other.description_;
          seqNo_ = other.seqNo_;
          protectionKey_ = other.protectionKey_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionStart Clone() {
          return new SessionStart(this);
        }

        /// <summary>Field number for the "path" field.</summary>
        public const int PathFieldNumber = 1;
        private string path_ = "";
        /// <summary>
        /// Path to a coordination node
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Path {
          get { return path_; }
          set {
            path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "session_id" field.</summary>
        public const int SessionIdFieldNumber = 2;
        private ulong sessionId_;
        /// <summary>
        /// Non-zero when restoring a session, 0 when creating a new session
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong SessionId {
          get { return sessionId_; }
          set {
            sessionId_ = value;
          }
        }

        /// <summary>Field number for the "timeout_millis" field.</summary>
        public const int TimeoutMillisFieldNumber = 3;
        private ulong timeoutMillis_;
        /// <summary>
        /// Timeout in milliseconds during which client may restore a detached session
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong TimeoutMillis {
          get { return timeoutMillis_; }
          set {
            timeoutMillis_ = value;
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 4;
        private string description_ = "";
        /// <summary>
        /// User-defined description that may be used to describe the client
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "seq_no" field.</summary>
        public const int SeqNoFieldNumber = 5;
        private ulong seqNo_;
        /// <summary>
        /// Monotonically increasing sequence number generated by the client
        /// When concurrent SessionStart requests are detected the one with
        /// the biggest sequence number will succeed
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong SeqNo {
          get { return seqNo_; }
          set {
            seqNo_ = value;
          }
        }

        /// <summary>Field number for the "protection_key" field.</summary>
        public const int ProtectionKeyFieldNumber = 6;
        private pb::ByteString protectionKey_ = pb::ByteString.Empty;
        /// <summary>
        /// Random bytes used to protect session from restore by other clients (max. 16 bytes)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString ProtectionKey {
          get { return protectionKey_; }
          set {
            protectionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionStart);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionStart other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Path != other.Path) return false;
          if (SessionId != other.SessionId) return false;
          if (TimeoutMillis != other.TimeoutMillis) return false;
          if (Description != other.Description) return false;
          if (SeqNo != other.SeqNo) return false;
          if (ProtectionKey != other.ProtectionKey) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Path.Length != 0) hash ^= Path.GetHashCode();
          if (SessionId != 0UL) hash ^= SessionId.GetHashCode();
          if (TimeoutMillis != 0UL) hash ^= TimeoutMillis.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (SeqNo != 0UL) hash ^= SeqNo.GetHashCode();
          if (ProtectionKey.Length != 0) hash ^= ProtectionKey.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Path.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Path);
          }
          if (SessionId != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(SessionId);
          }
          if (TimeoutMillis != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(TimeoutMillis);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Description);
          }
          if (SeqNo != 0UL) {
            output.WriteRawTag(40);
            output.WriteUInt64(SeqNo);
          }
          if (ProtectionKey.Length != 0) {
            output.WriteRawTag(50);
            output.WriteBytes(ProtectionKey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Path.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Path);
          }
          if (SessionId != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(SessionId);
          }
          if (TimeoutMillis != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(TimeoutMillis);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Description);
          }
          if (SeqNo != 0UL) {
            output.WriteRawTag(40);
            output.WriteUInt64(SeqNo);
          }
          if (ProtectionKey.Length != 0) {
            output.WriteRawTag(50);
            output.WriteBytes(ProtectionKey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Path.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
          }
          if (SessionId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SessionId);
          }
          if (TimeoutMillis != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeoutMillis);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (SeqNo != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SeqNo);
          }
          if (ProtectionKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(ProtectionKey);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionStart other) {
          if (other == null) {
            return;
          }
          if (other.Path.Length != 0) {
            Path = other.Path;
          }
          if (other.SessionId != 0UL) {
            SessionId = other.SessionId;
          }
          if (other.TimeoutMillis != 0UL) {
            TimeoutMillis = other.TimeoutMillis;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          if (other.SeqNo != 0UL) {
            SeqNo = other.SeqNo;
          }
          if (other.ProtectionKey.Length != 0) {
            ProtectionKey = other.ProtectionKey;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Path = input.ReadString();
                break;
              }
              case 16: {
                SessionId = input.ReadUInt64();
                break;
              }
              case 24: {
                TimeoutMillis = input.ReadUInt64();
                break;
              }
              case 34: {
                Description = input.ReadString();
                break;
              }
              case 40: {
                SeqNo = input.ReadUInt64();
                break;
              }
              case 50: {
                ProtectionKey = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Path = input.ReadString();
                break;
              }
              case 16: {
                SessionId = input.ReadUInt64();
                break;
              }
              case 24: {
                TimeoutMillis = input.ReadUInt64();
                break;
              }
              case 34: {
                Description = input.ReadString();
                break;
              }
              case 40: {
                SeqNo = input.ReadUInt64();
                break;
              }
              case 50: {
                ProtectionKey = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// Last message used to cleanly stop session before its timeout expires
      /// </summary>
      public sealed partial class SessionStop : pb::IMessage<SessionStop>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SessionStop> _parser = new pb::MessageParser<SessionStop>(() => new SessionStop());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionStop> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionRequest.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionStop() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionStop(SessionStop other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionStop Clone() {
          return new SessionStop(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionStop);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionStop other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionStop other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// Used to acquire a semaphore
      ///
      /// WARNING: a single session cannot acquire the same semaphore multiple times
      ///
      /// Later requests override previous operations with the same semaphore,
      /// e.g. to reduce acquired count, change timeout or attached data.
      /// </summary>
      public sealed partial class AcquireSemaphore : pb::IMessage<AcquireSemaphore>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AcquireSemaphore> _parser = new pb::MessageParser<AcquireSemaphore>(() => new AcquireSemaphore());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AcquireSemaphore> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionRequest.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AcquireSemaphore() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AcquireSemaphore(AcquireSemaphore other) : this() {
          reqId_ = other.reqId_;
          name_ = other.name_;
          timeoutMillis_ = other.timeoutMillis_;
          count_ = other.count_;
          data_ = other.data_;
          ephemeral_ = other.ephemeral_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AcquireSemaphore Clone() {
          return new AcquireSemaphore(this);
        }

        /// <summary>Field number for the "req_id" field.</summary>
        public const int ReqIdFieldNumber = 1;
        private ulong reqId_;
        /// <summary>
        /// Client-defined request id, echoed in the response
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ReqId {
          get { return reqId_; }
          set {
            reqId_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        /// <summary>
        /// Name of the semaphore to acquire
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "timeout_millis" field.</summary>
        public const int TimeoutMillisFieldNumber = 3;
        private ulong timeoutMillis_;
        /// <summary>
        /// Timeout in milliseconds after which operation will fail
        /// if it's still waiting in the waiters queue
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong TimeoutMillis {
          get { return timeoutMillis_; }
          set {
            timeoutMillis_ = value;
          }
        }

        /// <summary>Field number for the "count" field.</summary>
        public const int CountFieldNumber = 4;
        private ulong count_;
        /// <summary>
        /// Number of tokens to acquire on the semaphore
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Count {
          get { return count_; }
          set {
            count_ = value;
          }
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 5;
        private pb::ByteString data_ = pb::ByteString.Empty;
        /// <summary>
        /// User-defined binary data that may be attached to the operation
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Data {
          get { return data_; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ephemeral" field.</summary>
        public const int EphemeralFieldNumber = 6;
        private bool ephemeral_;
        /// <summary>
        /// Ephemeral semaphores are created with the first acquire operation
        /// and automatically deleted with the last release operation
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Ephemeral {
          get { return ephemeral_; }
          set {
            ephemeral_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AcquireSemaphore);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AcquireSemaphore other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReqId != other.ReqId) return false;
          if (Name != other.Name) return false;
          if (TimeoutMillis != other.TimeoutMillis) return false;
          if (Count != other.Count) return false;
          if (Data != other.Data) return false;
          if (Ephemeral != other.Ephemeral) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReqId != 0UL) hash ^= ReqId.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (TimeoutMillis != 0UL) hash ^= TimeoutMillis.GetHashCode();
          if (Count != 0UL) hash ^= Count.GetHashCode();
          if (Data.Length != 0) hash ^= Data.GetHashCode();
          if (Ephemeral != false) hash ^= Ephemeral.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (TimeoutMillis != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(TimeoutMillis);
          }
          if (Count != 0UL) {
            output.WriteRawTag(32);
            output.WriteUInt64(Count);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(42);
            output.WriteBytes(Data);
          }
          if (Ephemeral != false) {
            output.WriteRawTag(48);
            output.WriteBool(Ephemeral);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (TimeoutMillis != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(TimeoutMillis);
          }
          if (Count != 0UL) {
            output.WriteRawTag(32);
            output.WriteUInt64(Count);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(42);
            output.WriteBytes(Data);
          }
          if (Ephemeral != false) {
            output.WriteRawTag(48);
            output.WriteBool(Ephemeral);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReqId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReqId);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (TimeoutMillis != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeoutMillis);
          }
          if (Count != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Count);
          }
          if (Data.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
          }
          if (Ephemeral != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AcquireSemaphore other) {
          if (other == null) {
            return;
          }
          if (other.ReqId != 0UL) {
            ReqId = other.ReqId;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.TimeoutMillis != 0UL) {
            TimeoutMillis = other.TimeoutMillis;
          }
          if (other.Count != 0UL) {
            Count = other.Count;
          }
          if (other.Data.Length != 0) {
            Data = other.Data;
          }
          if (other.Ephemeral != false) {
            Ephemeral = other.Ephemeral;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 24: {
                TimeoutMillis = input.ReadUInt64();
                break;
              }
              case 32: {
                Count = input.ReadUInt64();
                break;
              }
              case 42: {
                Data = input.ReadBytes();
                break;
              }
              case 48: {
                Ephemeral = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 24: {
                TimeoutMillis = input.ReadUInt64();
                break;
              }
              case 32: {
                Count = input.ReadUInt64();
                break;
              }
              case 42: {
                Data = input.ReadBytes();
                break;
              }
              case 48: {
                Ephemeral = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// Used to release a semaphore
      ///
      /// WARNING: a single session cannot release the same semaphore multiple times
      ///
      /// The release operation will either remove current session from waiters
      /// queue or release an already owned semaphore.
      /// </summary>
      public sealed partial class ReleaseSemaphore : pb::IMessage<ReleaseSemaphore>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ReleaseSemaphore> _parser = new pb::MessageParser<ReleaseSemaphore>(() => new ReleaseSemaphore());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ReleaseSemaphore> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionRequest.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReleaseSemaphore() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReleaseSemaphore(ReleaseSemaphore other) : this() {
          reqId_ = other.reqId_;
          name_ = other.name_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReleaseSemaphore Clone() {
          return new ReleaseSemaphore(this);
        }

        /// <summary>Field number for the "req_id" field.</summary>
        public const int ReqIdFieldNumber = 1;
        private ulong reqId_;
        /// <summary>
        /// Client-defined request id, echoed in the response
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ReqId {
          get { return reqId_; }
          set {
            reqId_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        /// <summary>
        /// Name of the semaphore to release
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ReleaseSemaphore);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ReleaseSemaphore other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReqId != other.ReqId) return false;
          if (Name != other.Name) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReqId != 0UL) hash ^= ReqId.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReqId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReqId);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ReleaseSemaphore other) {
          if (other == null) {
            return;
          }
          if (other.ReqId != 0UL) {
            ReqId = other.ReqId;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// Used to describe semaphores and watch them for changes
      ///
      /// WARNING: a describe operation will cancel previous watches on the same semaphore
      /// </summary>
      public sealed partial class DescribeSemaphore : pb::IMessage<DescribeSemaphore>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DescribeSemaphore> _parser = new pb::MessageParser<DescribeSemaphore>(() => new DescribeSemaphore());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DescribeSemaphore> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionRequest.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DescribeSemaphore() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DescribeSemaphore(DescribeSemaphore other) : this() {
          reqId_ = other.reqId_;
          name_ = other.name_;
          includeOwners_ = other.includeOwners_;
          includeWaiters_ = other.includeWaiters_;
          watchData_ = other.watchData_;
          watchOwners_ = other.watchOwners_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DescribeSemaphore Clone() {
          return new DescribeSemaphore(this);
        }

        /// <summary>Field number for the "req_id" field.</summary>
        public const int ReqIdFieldNumber = 1;
        private ulong reqId_;
        /// <summary>
        /// Client-defined request id, echoed in the response
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ReqId {
          get { return reqId_; }
          set {
            reqId_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        /// <summary>
        /// Name of the semaphore to describe
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "include_owners" field.</summary>
        public const int IncludeOwnersFieldNumber = 3;
        private bool includeOwners_;
        /// <summary>
        /// Response will include owners list if true
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IncludeOwners {
          get { return includeOwners_; }
          set {
            includeOwners_ = value;
          }
        }

        /// <summary>Field number for the "include_waiters" field.</summary>
        public const int IncludeWaitersFieldNumber = 4;
        private bool includeWaiters_;
        /// <summary>
        /// Response will include waiters list if true
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IncludeWaiters {
          get { return includeWaiters_; }
          set {
            includeWaiters_ = value;
          }
        }

        /// <summary>Field number for the "watch_data" field.</summary>
        public const int WatchDataFieldNumber = 5;
        private bool watchData_;
        /// <summary>
        /// Watch for changes in semaphore data
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool WatchData {
          get { return watchData_; }
          set {
            watchData_ = value;
          }
        }

        /// <summary>Field number for the "watch_owners" field.</summary>
        public const int WatchOwnersFieldNumber = 6;
        private bool watchOwners_;
        /// <summary>
        /// Watch for changes in semaphore owners (including owners data)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool WatchOwners {
          get { return watchOwners_; }
          set {
            watchOwners_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DescribeSemaphore);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DescribeSemaphore other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReqId != other.ReqId) return false;
          if (Name != other.Name) return false;
          if (IncludeOwners != other.IncludeOwners) return false;
          if (IncludeWaiters != other.IncludeWaiters) return false;
          if (WatchData != other.WatchData) return false;
          if (WatchOwners != other.WatchOwners) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReqId != 0UL) hash ^= ReqId.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (IncludeOwners != false) hash ^= IncludeOwners.GetHashCode();
          if (IncludeWaiters != false) hash ^= IncludeWaiters.GetHashCode();
          if (WatchData != false) hash ^= WatchData.GetHashCode();
          if (WatchOwners != false) hash ^= WatchOwners.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (IncludeOwners != false) {
            output.WriteRawTag(24);
            output.WriteBool(IncludeOwners);
          }
          if (IncludeWaiters != false) {
            output.WriteRawTag(32);
            output.WriteBool(IncludeWaiters);
          }
          if (WatchData != false) {
            output.WriteRawTag(40);
            output.WriteBool(WatchData);
          }
          if (WatchOwners != false) {
            output.WriteRawTag(48);
            output.WriteBool(WatchOwners);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (IncludeOwners != false) {
            output.WriteRawTag(24);
            output.WriteBool(IncludeOwners);
          }
          if (IncludeWaiters != false) {
            output.WriteRawTag(32);
            output.WriteBool(IncludeWaiters);
          }
          if (WatchData != false) {
            output.WriteRawTag(40);
            output.WriteBool(WatchData);
          }
          if (WatchOwners != false) {
            output.WriteRawTag(48);
            output.WriteBool(WatchOwners);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReqId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReqId);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (IncludeOwners != false) {
            size += 1 + 1;
          }
          if (IncludeWaiters != false) {
            size += 1 + 1;
          }
          if (WatchData != false) {
            size += 1 + 1;
          }
          if (WatchOwners != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DescribeSemaphore other) {
          if (other == null) {
            return;
          }
          if (other.ReqId != 0UL) {
            ReqId = other.ReqId;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.IncludeOwners != false) {
            IncludeOwners = other.IncludeOwners;
          }
          if (other.IncludeWaiters != false) {
            IncludeWaiters = other.IncludeWaiters;
          }
          if (other.WatchData != false) {
            WatchData = other.WatchData;
          }
          if (other.WatchOwners != false) {
            WatchOwners = other.WatchOwners;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 24: {
                IncludeOwners = input.ReadBool();
                break;
              }
              case 32: {
                IncludeWaiters = input.ReadBool();
                break;
              }
              case 40: {
                WatchData = input.ReadBool();
                break;
              }
              case 48: {
                WatchOwners = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 24: {
                IncludeOwners = input.ReadBool();
                break;
              }
              case 32: {
                IncludeWaiters = input.ReadBool();
                break;
              }
              case 40: {
                WatchData = input.ReadBool();
                break;
              }
              case 48: {
                WatchOwners = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// Used to create a new semaphore
      /// </summary>
      public sealed partial class CreateSemaphore : pb::IMessage<CreateSemaphore>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CreateSemaphore> _parser = new pb::MessageParser<CreateSemaphore>(() => new CreateSemaphore());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CreateSemaphore> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionRequest.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreateSemaphore() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreateSemaphore(CreateSemaphore other) : this() {
          reqId_ = other.reqId_;
          name_ = other.name_;
          limit_ = other.limit_;
          data_ = other.data_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreateSemaphore Clone() {
          return new CreateSemaphore(this);
        }

        /// <summary>Field number for the "req_id" field.</summary>
        public const int ReqIdFieldNumber = 1;
        private ulong reqId_;
        /// <summary>
        /// Client-defined request id, echoed in the response
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ReqId {
          get { return reqId_; }
          set {
            reqId_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        /// <summary>
        /// Name of the semaphore to create
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "limit" field.</summary>
        public const int LimitFieldNumber = 3;
        private ulong limit_;
        /// <summary>
        /// Number of tokens that may be acquired by sessions
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Limit {
          get { return limit_; }
          set {
            limit_ = value;
          }
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 4;
        private pb::ByteString data_ = pb::ByteString.Empty;
        /// <summary>
        /// User-defined data that is attached to the semaphore
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Data {
          get { return data_; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CreateSemaphore);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CreateSemaphore other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReqId != other.ReqId) return false;
          if (Name != other.Name) return false;
          if (Limit != other.Limit) return false;
          if (Data != other.Data) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReqId != 0UL) hash ^= ReqId.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Limit != 0UL) hash ^= Limit.GetHashCode();
          if (Data.Length != 0) hash ^= Data.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Limit != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(Limit);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Limit != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(Limit);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReqId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReqId);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Limit != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Limit);
          }
          if (Data.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CreateSemaphore other) {
          if (other == null) {
            return;
          }
          if (other.ReqId != 0UL) {
            ReqId = other.ReqId;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Limit != 0UL) {
            Limit = other.Limit;
          }
          if (other.Data.Length != 0) {
            Data = other.Data;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 24: {
                Limit = input.ReadUInt64();
                break;
              }
              case 34: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 24: {
                Limit = input.ReadUInt64();
                break;
              }
              case 34: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// Used to change semaphore data
      /// </summary>
      public sealed partial class UpdateSemaphore : pb::IMessage<UpdateSemaphore>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UpdateSemaphore> _parser = new pb::MessageParser<UpdateSemaphore>(() => new UpdateSemaphore());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UpdateSemaphore> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionRequest.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateSemaphore() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateSemaphore(UpdateSemaphore other) : this() {
          reqId_ = other.reqId_;
          name_ = other.name_;
          data_ = other.data_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateSemaphore Clone() {
          return new UpdateSemaphore(this);
        }

        /// <summary>Field number for the "req_id" field.</summary>
        public const int ReqIdFieldNumber = 1;
        private ulong reqId_;
        /// <summary>
        /// Client-defined request id, echoed in the response
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ReqId {
          get { return reqId_; }
          set {
            reqId_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        /// <summary>
        /// Name of the semaphore to update
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 3;
        private pb::ByteString data_ = pb::ByteString.Empty;
        /// <summary>
        /// User-defined data that is attached to the semaphore
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Data {
          get { return data_; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UpdateSemaphore);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UpdateSemaphore other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReqId != other.ReqId) return false;
          if (Name != other.Name) return false;
          if (Data != other.Data) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReqId != 0UL) hash ^= ReqId.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Data.Length != 0) hash ^= Data.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Data.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReqId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReqId);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Data.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UpdateSemaphore other) {
          if (other == null) {
            return;
          }
          if (other.ReqId != 0UL) {
            ReqId = other.ReqId;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Data.Length != 0) {
            Data = other.Data;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// Used to delete an existing semaphore
      /// </summary>
      public sealed partial class DeleteSemaphore : pb::IMessage<DeleteSemaphore>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DeleteSemaphore> _parser = new pb::MessageParser<DeleteSemaphore>(() => new DeleteSemaphore());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DeleteSemaphore> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionRequest.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeleteSemaphore() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeleteSemaphore(DeleteSemaphore other) : this() {
          reqId_ = other.reqId_;
          name_ = other.name_;
          force_ = other.force_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeleteSemaphore Clone() {
          return new DeleteSemaphore(this);
        }

        /// <summary>Field number for the "req_id" field.</summary>
        public const int ReqIdFieldNumber = 1;
        private ulong reqId_;
        /// <summary>
        /// Client-defined request id, echoed in the response
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ReqId {
          get { return reqId_; }
          set {
            reqId_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        /// <summary>
        /// Name of the semaphore to delete
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "force" field.</summary>
        public const int ForceFieldNumber = 3;
        private bool force_;
        /// <summary>
        /// Will delete semaphore even if currently acquired by sessions
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Force {
          get { return force_; }
          set {
            force_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DeleteSemaphore);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DeleteSemaphore other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReqId != other.ReqId) return false;
          if (Name != other.Name) return false;
          if (Force != other.Force) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReqId != 0UL) hash ^= ReqId.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Force != false) hash ^= Force.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Force != false) {
            output.WriteRawTag(24);
            output.WriteBool(Force);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Force != false) {
            output.WriteRawTag(24);
            output.WriteBool(Force);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReqId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReqId);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Force != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DeleteSemaphore other) {
          if (other == null) {
            return;
          }
          if (other.ReqId != 0UL) {
            ReqId = other.ReqId;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Force != false) {
            Force = other.Force;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 24: {
                Force = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 24: {
                Force = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  ///*
  /// Session response message sent from server to client
  /// </summary>
  public sealed partial class SessionResponse : pb::IMessage<SessionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SessionResponse> _parser = new pb::MessageParser<SessionResponse>(() => new SessionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SessionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Coordination.YdbCoordinationReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionResponse(SessionResponse other) : this() {
      switch (other.ResponseCase) {
        case ResponseOneofCase.Ping:
          Ping = other.Ping.Clone();
          break;
        case ResponseOneofCase.Pong:
          Pong = other.Pong.Clone();
          break;
        case ResponseOneofCase.Failure:
          Failure = other.Failure.Clone();
          break;
        case ResponseOneofCase.SessionStarted:
          SessionStarted = other.SessionStarted.Clone();
          break;
        case ResponseOneofCase.SessionStopped:
          SessionStopped = other.SessionStopped.Clone();
          break;
        case ResponseOneofCase.Unsupported6:
          Unsupported6 = other.Unsupported6.Clone();
          break;
        case ResponseOneofCase.Unsupported7:
          Unsupported7 = other.Unsupported7.Clone();
          break;
        case ResponseOneofCase.AcquireSemaphorePending:
          AcquireSemaphorePending = other.AcquireSemaphorePending.Clone();
          break;
        case ResponseOneofCase.AcquireSemaphoreResult:
          AcquireSemaphoreResult = other.AcquireSemaphoreResult.Clone();
          break;
        case ResponseOneofCase.ReleaseSemaphoreResult:
          ReleaseSemaphoreResult = other.ReleaseSemaphoreResult.Clone();
          break;
        case ResponseOneofCase.DescribeSemaphoreResult:
          DescribeSemaphoreResult = other.DescribeSemaphoreResult.Clone();
          break;
        case ResponseOneofCase.DescribeSemaphoreChanged:
          DescribeSemaphoreChanged = other.DescribeSemaphoreChanged.Clone();
          break;
        case ResponseOneofCase.CreateSemaphoreResult:
          CreateSemaphoreResult = other.CreateSemaphoreResult.Clone();
          break;
        case ResponseOneofCase.UpdateSemaphoreResult:
          UpdateSemaphoreResult = other.UpdateSemaphoreResult.Clone();
          break;
        case ResponseOneofCase.DeleteSemaphoreResult:
          DeleteSemaphoreResult = other.DeleteSemaphoreResult.Clone();
          break;
        case ResponseOneofCase.Unsupported16:
          Unsupported16 = other.Unsupported16.Clone();
          break;
        case ResponseOneofCase.Unsupported17:
          Unsupported17 = other.Unsupported17.Clone();
          break;
        case ResponseOneofCase.Unsupported18:
          Unsupported18 = other.Unsupported18.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionResponse Clone() {
      return new SessionResponse(this);
    }

    /// <summary>Field number for the "ping" field.</summary>
    public const int PingFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionResponse.Types.PingPong Ping {
      get { return responseCase_ == ResponseOneofCase.Ping ? (global::Ydb.Coordination.SessionResponse.Types.PingPong) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Ping;
      }
    }

    /// <summary>Field number for the "pong" field.</summary>
    public const int PongFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionResponse.Types.PingPong Pong {
      get { return responseCase_ == ResponseOneofCase.Pong ? (global::Ydb.Coordination.SessionResponse.Types.PingPong) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Pong;
      }
    }

    /// <summary>Field number for the "failure" field.</summary>
    public const int FailureFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionResponse.Types.Failure Failure {
      get { return responseCase_ == ResponseOneofCase.Failure ? (global::Ydb.Coordination.SessionResponse.Types.Failure) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Failure;
      }
    }

    /// <summary>Field number for the "session_started" field.</summary>
    public const int SessionStartedFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionResponse.Types.SessionStarted SessionStarted {
      get { return responseCase_ == ResponseOneofCase.SessionStarted ? (global::Ydb.Coordination.SessionResponse.Types.SessionStarted) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.SessionStarted;
      }
    }

    /// <summary>Field number for the "session_stopped" field.</summary>
    public const int SessionStoppedFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionResponse.Types.SessionStopped SessionStopped {
      get { return responseCase_ == ResponseOneofCase.SessionStopped ? (global::Ydb.Coordination.SessionResponse.Types.SessionStopped) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.SessionStopped;
      }
    }

    /// <summary>Field number for the "unsupported_6" field.</summary>
    public const int Unsupported6FieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.Unsupported Unsupported6 {
      get { return responseCase_ == ResponseOneofCase.Unsupported6 ? (global::Ydb.Coordination.Unsupported) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Unsupported6;
      }
    }

    /// <summary>Field number for the "unsupported_7" field.</summary>
    public const int Unsupported7FieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.Unsupported Unsupported7 {
      get { return responseCase_ == ResponseOneofCase.Unsupported7 ? (global::Ydb.Coordination.Unsupported) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Unsupported7;
      }
    }

    /// <summary>Field number for the "acquire_semaphore_pending" field.</summary>
    public const int AcquireSemaphorePendingFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionResponse.Types.AcquireSemaphorePending AcquireSemaphorePending {
      get { return responseCase_ == ResponseOneofCase.AcquireSemaphorePending ? (global::Ydb.Coordination.SessionResponse.Types.AcquireSemaphorePending) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.AcquireSemaphorePending;
      }
    }

    /// <summary>Field number for the "acquire_semaphore_result" field.</summary>
    public const int AcquireSemaphoreResultFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionResponse.Types.AcquireSemaphoreResult AcquireSemaphoreResult {
      get { return responseCase_ == ResponseOneofCase.AcquireSemaphoreResult ? (global::Ydb.Coordination.SessionResponse.Types.AcquireSemaphoreResult) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.AcquireSemaphoreResult;
      }
    }

    /// <summary>Field number for the "release_semaphore_result" field.</summary>
    public const int ReleaseSemaphoreResultFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionResponse.Types.ReleaseSemaphoreResult ReleaseSemaphoreResult {
      get { return responseCase_ == ResponseOneofCase.ReleaseSemaphoreResult ? (global::Ydb.Coordination.SessionResponse.Types.ReleaseSemaphoreResult) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.ReleaseSemaphoreResult;
      }
    }

    /// <summary>Field number for the "describe_semaphore_result" field.</summary>
    public const int DescribeSemaphoreResultFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionResponse.Types.DescribeSemaphoreResult DescribeSemaphoreResult {
      get { return responseCase_ == ResponseOneofCase.DescribeSemaphoreResult ? (global::Ydb.Coordination.SessionResponse.Types.DescribeSemaphoreResult) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.DescribeSemaphoreResult;
      }
    }

    /// <summary>Field number for the "describe_semaphore_changed" field.</summary>
    public const int DescribeSemaphoreChangedFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionResponse.Types.DescribeSemaphoreChanged DescribeSemaphoreChanged {
      get { return responseCase_ == ResponseOneofCase.DescribeSemaphoreChanged ? (global::Ydb.Coordination.SessionResponse.Types.DescribeSemaphoreChanged) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.DescribeSemaphoreChanged;
      }
    }

    /// <summary>Field number for the "create_semaphore_result" field.</summary>
    public const int CreateSemaphoreResultFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionResponse.Types.CreateSemaphoreResult CreateSemaphoreResult {
      get { return responseCase_ == ResponseOneofCase.CreateSemaphoreResult ? (global::Ydb.Coordination.SessionResponse.Types.CreateSemaphoreResult) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.CreateSemaphoreResult;
      }
    }

    /// <summary>Field number for the "update_semaphore_result" field.</summary>
    public const int UpdateSemaphoreResultFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionResponse.Types.UpdateSemaphoreResult UpdateSemaphoreResult {
      get { return responseCase_ == ResponseOneofCase.UpdateSemaphoreResult ? (global::Ydb.Coordination.SessionResponse.Types.UpdateSemaphoreResult) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.UpdateSemaphoreResult;
      }
    }

    /// <summary>Field number for the "delete_semaphore_result" field.</summary>
    public const int DeleteSemaphoreResultFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.SessionResponse.Types.DeleteSemaphoreResult DeleteSemaphoreResult {
      get { return responseCase_ == ResponseOneofCase.DeleteSemaphoreResult ? (global::Ydb.Coordination.SessionResponse.Types.DeleteSemaphoreResult) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.DeleteSemaphoreResult;
      }
    }

    /// <summary>Field number for the "unsupported_16" field.</summary>
    public const int Unsupported16FieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.Unsupported Unsupported16 {
      get { return responseCase_ == ResponseOneofCase.Unsupported16 ? (global::Ydb.Coordination.Unsupported) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Unsupported16;
      }
    }

    /// <summary>Field number for the "unsupported_17" field.</summary>
    public const int Unsupported17FieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.Unsupported Unsupported17 {
      get { return responseCase_ == ResponseOneofCase.Unsupported17 ? (global::Ydb.Coordination.Unsupported) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Unsupported17;
      }
    }

    /// <summary>Field number for the "unsupported_18" field.</summary>
    public const int Unsupported18FieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.Unsupported Unsupported18 {
      get { return responseCase_ == ResponseOneofCase.Unsupported18 ? (global::Ydb.Coordination.Unsupported) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Unsupported18;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      Ping = 1,
      Pong = 2,
      Failure = 3,
      SessionStarted = 4,
      SessionStopped = 5,
      Unsupported6 = 6,
      Unsupported7 = 7,
      AcquireSemaphorePending = 8,
      AcquireSemaphoreResult = 9,
      ReleaseSemaphoreResult = 10,
      DescribeSemaphoreResult = 11,
      DescribeSemaphoreChanged = 12,
      CreateSemaphoreResult = 13,
      UpdateSemaphoreResult = 14,
      DeleteSemaphoreResult = 15,
      Unsupported16 = 16,
      Unsupported17 = 17,
      Unsupported18 = 18,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SessionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SessionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ping, other.Ping)) return false;
      if (!object.Equals(Pong, other.Pong)) return false;
      if (!object.Equals(Failure, other.Failure)) return false;
      if (!object.Equals(SessionStarted, other.SessionStarted)) return false;
      if (!object.Equals(SessionStopped, other.SessionStopped)) return false;
      if (!object.Equals(Unsupported6, other.Unsupported6)) return false;
      if (!object.Equals(Unsupported7, other.Unsupported7)) return false;
      if (!object.Equals(AcquireSemaphorePending, other.AcquireSemaphorePending)) return false;
      if (!object.Equals(AcquireSemaphoreResult, other.AcquireSemaphoreResult)) return false;
      if (!object.Equals(ReleaseSemaphoreResult, other.ReleaseSemaphoreResult)) return false;
      if (!object.Equals(DescribeSemaphoreResult, other.DescribeSemaphoreResult)) return false;
      if (!object.Equals(DescribeSemaphoreChanged, other.DescribeSemaphoreChanged)) return false;
      if (!object.Equals(CreateSemaphoreResult, other.CreateSemaphoreResult)) return false;
      if (!object.Equals(UpdateSemaphoreResult, other.UpdateSemaphoreResult)) return false;
      if (!object.Equals(DeleteSemaphoreResult, other.DeleteSemaphoreResult)) return false;
      if (!object.Equals(Unsupported16, other.Unsupported16)) return false;
      if (!object.Equals(Unsupported17, other.Unsupported17)) return false;
      if (!object.Equals(Unsupported18, other.Unsupported18)) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseCase_ == ResponseOneofCase.Ping) hash ^= Ping.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Pong) hash ^= Pong.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Failure) hash ^= Failure.GetHashCode();
      if (responseCase_ == ResponseOneofCase.SessionStarted) hash ^= SessionStarted.GetHashCode();
      if (responseCase_ == ResponseOneofCase.SessionStopped) hash ^= SessionStopped.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Unsupported6) hash ^= Unsupported6.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Unsupported7) hash ^= Unsupported7.GetHashCode();
      if (responseCase_ == ResponseOneofCase.AcquireSemaphorePending) hash ^= AcquireSemaphorePending.GetHashCode();
      if (responseCase_ == ResponseOneofCase.AcquireSemaphoreResult) hash ^= AcquireSemaphoreResult.GetHashCode();
      if (responseCase_ == ResponseOneofCase.ReleaseSemaphoreResult) hash ^= ReleaseSemaphoreResult.GetHashCode();
      if (responseCase_ == ResponseOneofCase.DescribeSemaphoreResult) hash ^= DescribeSemaphoreResult.GetHashCode();
      if (responseCase_ == ResponseOneofCase.DescribeSemaphoreChanged) hash ^= DescribeSemaphoreChanged.GetHashCode();
      if (responseCase_ == ResponseOneofCase.CreateSemaphoreResult) hash ^= CreateSemaphoreResult.GetHashCode();
      if (responseCase_ == ResponseOneofCase.UpdateSemaphoreResult) hash ^= UpdateSemaphoreResult.GetHashCode();
      if (responseCase_ == ResponseOneofCase.DeleteSemaphoreResult) hash ^= DeleteSemaphoreResult.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Unsupported16) hash ^= Unsupported16.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Unsupported17) hash ^= Unsupported17.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Unsupported18) hash ^= Unsupported18.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (responseCase_ == ResponseOneofCase.Ping) {
        output.WriteRawTag(10);
        output.WriteMessage(Ping);
      }
      if (responseCase_ == ResponseOneofCase.Pong) {
        output.WriteRawTag(18);
        output.WriteMessage(Pong);
      }
      if (responseCase_ == ResponseOneofCase.Failure) {
        output.WriteRawTag(26);
        output.WriteMessage(Failure);
      }
      if (responseCase_ == ResponseOneofCase.SessionStarted) {
        output.WriteRawTag(34);
        output.WriteMessage(SessionStarted);
      }
      if (responseCase_ == ResponseOneofCase.SessionStopped) {
        output.WriteRawTag(42);
        output.WriteMessage(SessionStopped);
      }
      if (responseCase_ == ResponseOneofCase.Unsupported6) {
        output.WriteRawTag(50);
        output.WriteMessage(Unsupported6);
      }
      if (responseCase_ == ResponseOneofCase.Unsupported7) {
        output.WriteRawTag(58);
        output.WriteMessage(Unsupported7);
      }
      if (responseCase_ == ResponseOneofCase.AcquireSemaphorePending) {
        output.WriteRawTag(66);
        output.WriteMessage(AcquireSemaphorePending);
      }
      if (responseCase_ == ResponseOneofCase.AcquireSemaphoreResult) {
        output.WriteRawTag(74);
        output.WriteMessage(AcquireSemaphoreResult);
      }
      if (responseCase_ == ResponseOneofCase.ReleaseSemaphoreResult) {
        output.WriteRawTag(82);
        output.WriteMessage(ReleaseSemaphoreResult);
      }
      if (responseCase_ == ResponseOneofCase.DescribeSemaphoreResult) {
        output.WriteRawTag(90);
        output.WriteMessage(DescribeSemaphoreResult);
      }
      if (responseCase_ == ResponseOneofCase.DescribeSemaphoreChanged) {
        output.WriteRawTag(98);
        output.WriteMessage(DescribeSemaphoreChanged);
      }
      if (responseCase_ == ResponseOneofCase.CreateSemaphoreResult) {
        output.WriteRawTag(106);
        output.WriteMessage(CreateSemaphoreResult);
      }
      if (responseCase_ == ResponseOneofCase.UpdateSemaphoreResult) {
        output.WriteRawTag(114);
        output.WriteMessage(UpdateSemaphoreResult);
      }
      if (responseCase_ == ResponseOneofCase.DeleteSemaphoreResult) {
        output.WriteRawTag(122);
        output.WriteMessage(DeleteSemaphoreResult);
      }
      if (responseCase_ == ResponseOneofCase.Unsupported16) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Unsupported16);
      }
      if (responseCase_ == ResponseOneofCase.Unsupported17) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Unsupported17);
      }
      if (responseCase_ == ResponseOneofCase.Unsupported18) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Unsupported18);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (responseCase_ == ResponseOneofCase.Ping) {
        output.WriteRawTag(10);
        output.WriteMessage(Ping);
      }
      if (responseCase_ == ResponseOneofCase.Pong) {
        output.WriteRawTag(18);
        output.WriteMessage(Pong);
      }
      if (responseCase_ == ResponseOneofCase.Failure) {
        output.WriteRawTag(26);
        output.WriteMessage(Failure);
      }
      if (responseCase_ == ResponseOneofCase.SessionStarted) {
        output.WriteRawTag(34);
        output.WriteMessage(SessionStarted);
      }
      if (responseCase_ == ResponseOneofCase.SessionStopped) {
        output.WriteRawTag(42);
        output.WriteMessage(SessionStopped);
      }
      if (responseCase_ == ResponseOneofCase.Unsupported6) {
        output.WriteRawTag(50);
        output.WriteMessage(Unsupported6);
      }
      if (responseCase_ == ResponseOneofCase.Unsupported7) {
        output.WriteRawTag(58);
        output.WriteMessage(Unsupported7);
      }
      if (responseCase_ == ResponseOneofCase.AcquireSemaphorePending) {
        output.WriteRawTag(66);
        output.WriteMessage(AcquireSemaphorePending);
      }
      if (responseCase_ == ResponseOneofCase.AcquireSemaphoreResult) {
        output.WriteRawTag(74);
        output.WriteMessage(AcquireSemaphoreResult);
      }
      if (responseCase_ == ResponseOneofCase.ReleaseSemaphoreResult) {
        output.WriteRawTag(82);
        output.WriteMessage(ReleaseSemaphoreResult);
      }
      if (responseCase_ == ResponseOneofCase.DescribeSemaphoreResult) {
        output.WriteRawTag(90);
        output.WriteMessage(DescribeSemaphoreResult);
      }
      if (responseCase_ == ResponseOneofCase.DescribeSemaphoreChanged) {
        output.WriteRawTag(98);
        output.WriteMessage(DescribeSemaphoreChanged);
      }
      if (responseCase_ == ResponseOneofCase.CreateSemaphoreResult) {
        output.WriteRawTag(106);
        output.WriteMessage(CreateSemaphoreResult);
      }
      if (responseCase_ == ResponseOneofCase.UpdateSemaphoreResult) {
        output.WriteRawTag(114);
        output.WriteMessage(UpdateSemaphoreResult);
      }
      if (responseCase_ == ResponseOneofCase.DeleteSemaphoreResult) {
        output.WriteRawTag(122);
        output.WriteMessage(DeleteSemaphoreResult);
      }
      if (responseCase_ == ResponseOneofCase.Unsupported16) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Unsupported16);
      }
      if (responseCase_ == ResponseOneofCase.Unsupported17) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Unsupported17);
      }
      if (responseCase_ == ResponseOneofCase.Unsupported18) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Unsupported18);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseCase_ == ResponseOneofCase.Ping) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ping);
      }
      if (responseCase_ == ResponseOneofCase.Pong) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pong);
      }
      if (responseCase_ == ResponseOneofCase.Failure) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Failure);
      }
      if (responseCase_ == ResponseOneofCase.SessionStarted) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionStarted);
      }
      if (responseCase_ == ResponseOneofCase.SessionStopped) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionStopped);
      }
      if (responseCase_ == ResponseOneofCase.Unsupported6) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unsupported6);
      }
      if (responseCase_ == ResponseOneofCase.Unsupported7) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unsupported7);
      }
      if (responseCase_ == ResponseOneofCase.AcquireSemaphorePending) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AcquireSemaphorePending);
      }
      if (responseCase_ == ResponseOneofCase.AcquireSemaphoreResult) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AcquireSemaphoreResult);
      }
      if (responseCase_ == ResponseOneofCase.ReleaseSemaphoreResult) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReleaseSemaphoreResult);
      }
      if (responseCase_ == ResponseOneofCase.DescribeSemaphoreResult) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DescribeSemaphoreResult);
      }
      if (responseCase_ == ResponseOneofCase.DescribeSemaphoreChanged) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DescribeSemaphoreChanged);
      }
      if (responseCase_ == ResponseOneofCase.CreateSemaphoreResult) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateSemaphoreResult);
      }
      if (responseCase_ == ResponseOneofCase.UpdateSemaphoreResult) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateSemaphoreResult);
      }
      if (responseCase_ == ResponseOneofCase.DeleteSemaphoreResult) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteSemaphoreResult);
      }
      if (responseCase_ == ResponseOneofCase.Unsupported16) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Unsupported16);
      }
      if (responseCase_ == ResponseOneofCase.Unsupported17) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Unsupported17);
      }
      if (responseCase_ == ResponseOneofCase.Unsupported18) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Unsupported18);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SessionResponse other) {
      if (other == null) {
        return;
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.Ping:
          if (Ping == null) {
            Ping = new global::Ydb.Coordination.SessionResponse.Types.PingPong();
          }
          Ping.MergeFrom(other.Ping);
          break;
        case ResponseOneofCase.Pong:
          if (Pong == null) {
            Pong = new global::Ydb.Coordination.SessionResponse.Types.PingPong();
          }
          Pong.MergeFrom(other.Pong);
          break;
        case ResponseOneofCase.Failure:
          if (Failure == null) {
            Failure = new global::Ydb.Coordination.SessionResponse.Types.Failure();
          }
          Failure.MergeFrom(other.Failure);
          break;
        case ResponseOneofCase.SessionStarted:
          if (SessionStarted == null) {
            SessionStarted = new global::Ydb.Coordination.SessionResponse.Types.SessionStarted();
          }
          SessionStarted.MergeFrom(other.SessionStarted);
          break;
        case ResponseOneofCase.SessionStopped:
          if (SessionStopped == null) {
            SessionStopped = new global::Ydb.Coordination.SessionResponse.Types.SessionStopped();
          }
          SessionStopped.MergeFrom(other.SessionStopped);
          break;
        case ResponseOneofCase.Unsupported6:
          if (Unsupported6 == null) {
            Unsupported6 = new global::Ydb.Coordination.Unsupported();
          }
          Unsupported6.MergeFrom(other.Unsupported6);
          break;
        case ResponseOneofCase.Unsupported7:
          if (Unsupported7 == null) {
            Unsupported7 = new global::Ydb.Coordination.Unsupported();
          }
          Unsupported7.MergeFrom(other.Unsupported7);
          break;
        case ResponseOneofCase.AcquireSemaphorePending:
          if (AcquireSemaphorePending == null) {
            AcquireSemaphorePending = new global::Ydb.Coordination.SessionResponse.Types.AcquireSemaphorePending();
          }
          AcquireSemaphorePending.MergeFrom(other.AcquireSemaphorePending);
          break;
        case ResponseOneofCase.AcquireSemaphoreResult:
          if (AcquireSemaphoreResult == null) {
            AcquireSemaphoreResult = new global::Ydb.Coordination.SessionResponse.Types.AcquireSemaphoreResult();
          }
          AcquireSemaphoreResult.MergeFrom(other.AcquireSemaphoreResult);
          break;
        case ResponseOneofCase.ReleaseSemaphoreResult:
          if (ReleaseSemaphoreResult == null) {
            ReleaseSemaphoreResult = new global::Ydb.Coordination.SessionResponse.Types.ReleaseSemaphoreResult();
          }
          ReleaseSemaphoreResult.MergeFrom(other.ReleaseSemaphoreResult);
          break;
        case ResponseOneofCase.DescribeSemaphoreResult:
          if (DescribeSemaphoreResult == null) {
            DescribeSemaphoreResult = new global::Ydb.Coordination.SessionResponse.Types.DescribeSemaphoreResult();
          }
          DescribeSemaphoreResult.MergeFrom(other.DescribeSemaphoreResult);
          break;
        case ResponseOneofCase.DescribeSemaphoreChanged:
          if (DescribeSemaphoreChanged == null) {
            DescribeSemaphoreChanged = new global::Ydb.Coordination.SessionResponse.Types.DescribeSemaphoreChanged();
          }
          DescribeSemaphoreChanged.MergeFrom(other.DescribeSemaphoreChanged);
          break;
        case ResponseOneofCase.CreateSemaphoreResult:
          if (CreateSemaphoreResult == null) {
            CreateSemaphoreResult = new global::Ydb.Coordination.SessionResponse.Types.CreateSemaphoreResult();
          }
          CreateSemaphoreResult.MergeFrom(other.CreateSemaphoreResult);
          break;
        case ResponseOneofCase.UpdateSemaphoreResult:
          if (UpdateSemaphoreResult == null) {
            UpdateSemaphoreResult = new global::Ydb.Coordination.SessionResponse.Types.UpdateSemaphoreResult();
          }
          UpdateSemaphoreResult.MergeFrom(other.UpdateSemaphoreResult);
          break;
        case ResponseOneofCase.DeleteSemaphoreResult:
          if (DeleteSemaphoreResult == null) {
            DeleteSemaphoreResult = new global::Ydb.Coordination.SessionResponse.Types.DeleteSemaphoreResult();
          }
          DeleteSemaphoreResult.MergeFrom(other.DeleteSemaphoreResult);
          break;
        case ResponseOneofCase.Unsupported16:
          if (Unsupported16 == null) {
            Unsupported16 = new global::Ydb.Coordination.Unsupported();
          }
          Unsupported16.MergeFrom(other.Unsupported16);
          break;
        case ResponseOneofCase.Unsupported17:
          if (Unsupported17 == null) {
            Unsupported17 = new global::Ydb.Coordination.Unsupported();
          }
          Unsupported17.MergeFrom(other.Unsupported17);
          break;
        case ResponseOneofCase.Unsupported18:
          if (Unsupported18 == null) {
            Unsupported18 = new global::Ydb.Coordination.Unsupported();
          }
          Unsupported18.MergeFrom(other.Unsupported18);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Ydb.Coordination.SessionResponse.Types.PingPong subBuilder = new global::Ydb.Coordination.SessionResponse.Types.PingPong();
            if (responseCase_ == ResponseOneofCase.Ping) {
              subBuilder.MergeFrom(Ping);
            }
            input.ReadMessage(subBuilder);
            Ping = subBuilder;
            break;
          }
          case 18: {
            global::Ydb.Coordination.SessionResponse.Types.PingPong subBuilder = new global::Ydb.Coordination.SessionResponse.Types.PingPong();
            if (responseCase_ == ResponseOneofCase.Pong) {
              subBuilder.MergeFrom(Pong);
            }
            input.ReadMessage(subBuilder);
            Pong = subBuilder;
            break;
          }
          case 26: {
            global::Ydb.Coordination.SessionResponse.Types.Failure subBuilder = new global::Ydb.Coordination.SessionResponse.Types.Failure();
            if (responseCase_ == ResponseOneofCase.Failure) {
              subBuilder.MergeFrom(Failure);
            }
            input.ReadMessage(subBuilder);
            Failure = subBuilder;
            break;
          }
          case 34: {
            global::Ydb.Coordination.SessionResponse.Types.SessionStarted subBuilder = new global::Ydb.Coordination.SessionResponse.Types.SessionStarted();
            if (responseCase_ == ResponseOneofCase.SessionStarted) {
              subBuilder.MergeFrom(SessionStarted);
            }
            input.ReadMessage(subBuilder);
            SessionStarted = subBuilder;
            break;
          }
          case 42: {
            global::Ydb.Coordination.SessionResponse.Types.SessionStopped subBuilder = new global::Ydb.Coordination.SessionResponse.Types.SessionStopped();
            if (responseCase_ == ResponseOneofCase.SessionStopped) {
              subBuilder.MergeFrom(SessionStopped);
            }
            input.ReadMessage(subBuilder);
            SessionStopped = subBuilder;
            break;
          }
          case 50: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (responseCase_ == ResponseOneofCase.Unsupported6) {
              subBuilder.MergeFrom(Unsupported6);
            }
            input.ReadMessage(subBuilder);
            Unsupported6 = subBuilder;
            break;
          }
          case 58: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (responseCase_ == ResponseOneofCase.Unsupported7) {
              subBuilder.MergeFrom(Unsupported7);
            }
            input.ReadMessage(subBuilder);
            Unsupported7 = subBuilder;
            break;
          }
          case 66: {
            global::Ydb.Coordination.SessionResponse.Types.AcquireSemaphorePending subBuilder = new global::Ydb.Coordination.SessionResponse.Types.AcquireSemaphorePending();
            if (responseCase_ == ResponseOneofCase.AcquireSemaphorePending) {
              subBuilder.MergeFrom(AcquireSemaphorePending);
            }
            input.ReadMessage(subBuilder);
            AcquireSemaphorePending = subBuilder;
            break;
          }
          case 74: {
            global::Ydb.Coordination.SessionResponse.Types.AcquireSemaphoreResult subBuilder = new global::Ydb.Coordination.SessionResponse.Types.AcquireSemaphoreResult();
            if (responseCase_ == ResponseOneofCase.AcquireSemaphoreResult) {
              subBuilder.MergeFrom(AcquireSemaphoreResult);
            }
            input.ReadMessage(subBuilder);
            AcquireSemaphoreResult = subBuilder;
            break;
          }
          case 82: {
            global::Ydb.Coordination.SessionResponse.Types.ReleaseSemaphoreResult subBuilder = new global::Ydb.Coordination.SessionResponse.Types.ReleaseSemaphoreResult();
            if (responseCase_ == ResponseOneofCase.ReleaseSemaphoreResult) {
              subBuilder.MergeFrom(ReleaseSemaphoreResult);
            }
            input.ReadMessage(subBuilder);
            ReleaseSemaphoreResult = subBuilder;
            break;
          }
          case 90: {
            global::Ydb.Coordination.SessionResponse.Types.DescribeSemaphoreResult subBuilder = new global::Ydb.Coordination.SessionResponse.Types.DescribeSemaphoreResult();
            if (responseCase_ == ResponseOneofCase.DescribeSemaphoreResult) {
              subBuilder.MergeFrom(DescribeSemaphoreResult);
            }
            input.ReadMessage(subBuilder);
            DescribeSemaphoreResult = subBuilder;
            break;
          }
          case 98: {
            global::Ydb.Coordination.SessionResponse.Types.DescribeSemaphoreChanged subBuilder = new global::Ydb.Coordination.SessionResponse.Types.DescribeSemaphoreChanged();
            if (responseCase_ == ResponseOneofCase.DescribeSemaphoreChanged) {
              subBuilder.MergeFrom(DescribeSemaphoreChanged);
            }
            input.ReadMessage(subBuilder);
            DescribeSemaphoreChanged = subBuilder;
            break;
          }
          case 106: {
            global::Ydb.Coordination.SessionResponse.Types.CreateSemaphoreResult subBuilder = new global::Ydb.Coordination.SessionResponse.Types.CreateSemaphoreResult();
            if (responseCase_ == ResponseOneofCase.CreateSemaphoreResult) {
              subBuilder.MergeFrom(CreateSemaphoreResult);
            }
            input.ReadMessage(subBuilder);
            CreateSemaphoreResult = subBuilder;
            break;
          }
          case 114: {
            global::Ydb.Coordination.SessionResponse.Types.UpdateSemaphoreResult subBuilder = new global::Ydb.Coordination.SessionResponse.Types.UpdateSemaphoreResult();
            if (responseCase_ == ResponseOneofCase.UpdateSemaphoreResult) {
              subBuilder.MergeFrom(UpdateSemaphoreResult);
            }
            input.ReadMessage(subBuilder);
            UpdateSemaphoreResult = subBuilder;
            break;
          }
          case 122: {
            global::Ydb.Coordination.SessionResponse.Types.DeleteSemaphoreResult subBuilder = new global::Ydb.Coordination.SessionResponse.Types.DeleteSemaphoreResult();
            if (responseCase_ == ResponseOneofCase.DeleteSemaphoreResult) {
              subBuilder.MergeFrom(DeleteSemaphoreResult);
            }
            input.ReadMessage(subBuilder);
            DeleteSemaphoreResult = subBuilder;
            break;
          }
          case 130: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (responseCase_ == ResponseOneofCase.Unsupported16) {
              subBuilder.MergeFrom(Unsupported16);
            }
            input.ReadMessage(subBuilder);
            Unsupported16 = subBuilder;
            break;
          }
          case 138: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (responseCase_ == ResponseOneofCase.Unsupported17) {
              subBuilder.MergeFrom(Unsupported17);
            }
            input.ReadMessage(subBuilder);
            Unsupported17 = subBuilder;
            break;
          }
          case 146: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (responseCase_ == ResponseOneofCase.Unsupported18) {
              subBuilder.MergeFrom(Unsupported18);
            }
            input.ReadMessage(subBuilder);
            Unsupported18 = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Ydb.Coordination.SessionResponse.Types.PingPong subBuilder = new global::Ydb.Coordination.SessionResponse.Types.PingPong();
            if (responseCase_ == ResponseOneofCase.Ping) {
              subBuilder.MergeFrom(Ping);
            }
            input.ReadMessage(subBuilder);
            Ping = subBuilder;
            break;
          }
          case 18: {
            global::Ydb.Coordination.SessionResponse.Types.PingPong subBuilder = new global::Ydb.Coordination.SessionResponse.Types.PingPong();
            if (responseCase_ == ResponseOneofCase.Pong) {
              subBuilder.MergeFrom(Pong);
            }
            input.ReadMessage(subBuilder);
            Pong = subBuilder;
            break;
          }
          case 26: {
            global::Ydb.Coordination.SessionResponse.Types.Failure subBuilder = new global::Ydb.Coordination.SessionResponse.Types.Failure();
            if (responseCase_ == ResponseOneofCase.Failure) {
              subBuilder.MergeFrom(Failure);
            }
            input.ReadMessage(subBuilder);
            Failure = subBuilder;
            break;
          }
          case 34: {
            global::Ydb.Coordination.SessionResponse.Types.SessionStarted subBuilder = new global::Ydb.Coordination.SessionResponse.Types.SessionStarted();
            if (responseCase_ == ResponseOneofCase.SessionStarted) {
              subBuilder.MergeFrom(SessionStarted);
            }
            input.ReadMessage(subBuilder);
            SessionStarted = subBuilder;
            break;
          }
          case 42: {
            global::Ydb.Coordination.SessionResponse.Types.SessionStopped subBuilder = new global::Ydb.Coordination.SessionResponse.Types.SessionStopped();
            if (responseCase_ == ResponseOneofCase.SessionStopped) {
              subBuilder.MergeFrom(SessionStopped);
            }
            input.ReadMessage(subBuilder);
            SessionStopped = subBuilder;
            break;
          }
          case 50: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (responseCase_ == ResponseOneofCase.Unsupported6) {
              subBuilder.MergeFrom(Unsupported6);
            }
            input.ReadMessage(subBuilder);
            Unsupported6 = subBuilder;
            break;
          }
          case 58: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (responseCase_ == ResponseOneofCase.Unsupported7) {
              subBuilder.MergeFrom(Unsupported7);
            }
            input.ReadMessage(subBuilder);
            Unsupported7 = subBuilder;
            break;
          }
          case 66: {
            global::Ydb.Coordination.SessionResponse.Types.AcquireSemaphorePending subBuilder = new global::Ydb.Coordination.SessionResponse.Types.AcquireSemaphorePending();
            if (responseCase_ == ResponseOneofCase.AcquireSemaphorePending) {
              subBuilder.MergeFrom(AcquireSemaphorePending);
            }
            input.ReadMessage(subBuilder);
            AcquireSemaphorePending = subBuilder;
            break;
          }
          case 74: {
            global::Ydb.Coordination.SessionResponse.Types.AcquireSemaphoreResult subBuilder = new global::Ydb.Coordination.SessionResponse.Types.AcquireSemaphoreResult();
            if (responseCase_ == ResponseOneofCase.AcquireSemaphoreResult) {
              subBuilder.MergeFrom(AcquireSemaphoreResult);
            }
            input.ReadMessage(subBuilder);
            AcquireSemaphoreResult = subBuilder;
            break;
          }
          case 82: {
            global::Ydb.Coordination.SessionResponse.Types.ReleaseSemaphoreResult subBuilder = new global::Ydb.Coordination.SessionResponse.Types.ReleaseSemaphoreResult();
            if (responseCase_ == ResponseOneofCase.ReleaseSemaphoreResult) {
              subBuilder.MergeFrom(ReleaseSemaphoreResult);
            }
            input.ReadMessage(subBuilder);
            ReleaseSemaphoreResult = subBuilder;
            break;
          }
          case 90: {
            global::Ydb.Coordination.SessionResponse.Types.DescribeSemaphoreResult subBuilder = new global::Ydb.Coordination.SessionResponse.Types.DescribeSemaphoreResult();
            if (responseCase_ == ResponseOneofCase.DescribeSemaphoreResult) {
              subBuilder.MergeFrom(DescribeSemaphoreResult);
            }
            input.ReadMessage(subBuilder);
            DescribeSemaphoreResult = subBuilder;
            break;
          }
          case 98: {
            global::Ydb.Coordination.SessionResponse.Types.DescribeSemaphoreChanged subBuilder = new global::Ydb.Coordination.SessionResponse.Types.DescribeSemaphoreChanged();
            if (responseCase_ == ResponseOneofCase.DescribeSemaphoreChanged) {
              subBuilder.MergeFrom(DescribeSemaphoreChanged);
            }
            input.ReadMessage(subBuilder);
            DescribeSemaphoreChanged = subBuilder;
            break;
          }
          case 106: {
            global::Ydb.Coordination.SessionResponse.Types.CreateSemaphoreResult subBuilder = new global::Ydb.Coordination.SessionResponse.Types.CreateSemaphoreResult();
            if (responseCase_ == ResponseOneofCase.CreateSemaphoreResult) {
              subBuilder.MergeFrom(CreateSemaphoreResult);
            }
            input.ReadMessage(subBuilder);
            CreateSemaphoreResult = subBuilder;
            break;
          }
          case 114: {
            global::Ydb.Coordination.SessionResponse.Types.UpdateSemaphoreResult subBuilder = new global::Ydb.Coordination.SessionResponse.Types.UpdateSemaphoreResult();
            if (responseCase_ == ResponseOneofCase.UpdateSemaphoreResult) {
              subBuilder.MergeFrom(UpdateSemaphoreResult);
            }
            input.ReadMessage(subBuilder);
            UpdateSemaphoreResult = subBuilder;
            break;
          }
          case 122: {
            global::Ydb.Coordination.SessionResponse.Types.DeleteSemaphoreResult subBuilder = new global::Ydb.Coordination.SessionResponse.Types.DeleteSemaphoreResult();
            if (responseCase_ == ResponseOneofCase.DeleteSemaphoreResult) {
              subBuilder.MergeFrom(DeleteSemaphoreResult);
            }
            input.ReadMessage(subBuilder);
            DeleteSemaphoreResult = subBuilder;
            break;
          }
          case 130: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (responseCase_ == ResponseOneofCase.Unsupported16) {
              subBuilder.MergeFrom(Unsupported16);
            }
            input.ReadMessage(subBuilder);
            Unsupported16 = subBuilder;
            break;
          }
          case 138: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (responseCase_ == ResponseOneofCase.Unsupported17) {
              subBuilder.MergeFrom(Unsupported17);
            }
            input.ReadMessage(subBuilder);
            Unsupported17 = subBuilder;
            break;
          }
          case 146: {
            global::Ydb.Coordination.Unsupported subBuilder = new global::Ydb.Coordination.Unsupported();
            if (responseCase_ == ResponseOneofCase.Unsupported18) {
              subBuilder.MergeFrom(Unsupported18);
            }
            input.ReadMessage(subBuilder);
            Unsupported18 = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SessionResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      ///*
      /// Used for checking liveness of the connection
      /// </summary>
      public sealed partial class PingPong : pb::IMessage<PingPong>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PingPong> _parser = new pb::MessageParser<PingPong>(() => new PingPong());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PingPong> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingPong() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingPong(PingPong other) : this() {
          opaque_ = other.opaque_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingPong Clone() {
          return new PingPong(this);
        }

        /// <summary>Field number for the "opaque" field.</summary>
        public const int OpaqueFieldNumber = 1;
        private ulong opaque_;
        /// <summary>
        /// Opaque number specified in the ping message is echoed in the pong message
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Opaque {
          get { return opaque_; }
          set {
            opaque_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PingPong);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PingPong other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Opaque != other.Opaque) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Opaque != 0UL) hash ^= Opaque.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Opaque != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(Opaque);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Opaque != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(Opaque);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Opaque != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Opaque);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PingPong other) {
          if (other == null) {
            return;
          }
          if (other.Opaque != 0UL) {
            Opaque = other.Opaque;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Opaque = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Opaque = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// Used to report connection and session level failures
      /// </summary>
      public sealed partial class Failure : pb::IMessage<Failure>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Failure> _parser = new pb::MessageParser<Failure>(() => new Failure());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Failure> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionResponse.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Failure() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Failure(Failure other) : this() {
          status_ = other.status_;
          issues_ = other.issues_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Failure Clone() {
          return new Failure(this);
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 1;
        private global::Ydb.StatusIds.Types.StatusCode status_ = global::Ydb.StatusIds.Types.StatusCode.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.StatusIds.Types.StatusCode Status {
          get { return status_; }
          set {
            status_ = value;
          }
        }

        /// <summary>Field number for the "issues" field.</summary>
        public const int IssuesFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Ydb.Issue.IssueMessage> _repeated_issues_codec
            = pb::FieldCodec.ForMessage(18, global::Ydb.Issue.IssueMessage.Parser);
        private readonly pbc::RepeatedField<global::Ydb.Issue.IssueMessage> issues_ = new pbc::RepeatedField<global::Ydb.Issue.IssueMessage>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.Issue.IssueMessage> Issues {
          get { return issues_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Failure);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Failure other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Status != other.Status) return false;
          if(!issues_.Equals(other.issues_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) hash ^= Status.GetHashCode();
          hash ^= issues_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Status);
          }
          issues_.WriteTo(output, _repeated_issues_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Status);
          }
          issues_.WriteTo(ref output, _repeated_issues_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
          }
          size += issues_.CalculateSize(_repeated_issues_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Failure other) {
          if (other == null) {
            return;
          }
          if (other.Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            Status = other.Status;
          }
          issues_.Add(other.issues_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
                break;
              }
              case 18: {
                issues_.AddEntriesFrom(input, _repeated_issues_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
                break;
              }
              case 18: {
                issues_.AddEntriesFrom(ref input, _repeated_issues_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// Used to report a successful session create/restore operation
      /// </summary>
      public sealed partial class SessionStarted : pb::IMessage<SessionStarted>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SessionStarted> _parser = new pb::MessageParser<SessionStarted>(() => new SessionStarted());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionStarted> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionResponse.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionStarted() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionStarted(SessionStarted other) : this() {
          sessionId_ = other.sessionId_;
          timeoutMillis_ = other.timeoutMillis_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionStarted Clone() {
          return new SessionStarted(this);
        }

        /// <summary>Field number for the "session_id" field.</summary>
        public const int SessionIdFieldNumber = 1;
        private ulong sessionId_;
        /// <summary>
        /// A server generation id that may be used for restoring the session
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong SessionId {
          get { return sessionId_; }
          set {
            sessionId_ = value;
          }
        }

        /// <summary>Field number for the "timeout_millis" field.</summary>
        public const int TimeoutMillisFieldNumber = 2;
        private ulong timeoutMillis_;
        /// <summary>
        /// Timeout in milliseconds that will be used by the server
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong TimeoutMillis {
          get { return timeoutMillis_; }
          set {
            timeoutMillis_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionStarted);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionStarted other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SessionId != other.SessionId) return false;
          if (TimeoutMillis != other.TimeoutMillis) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (SessionId != 0UL) hash ^= SessionId.GetHashCode();
          if (TimeoutMillis != 0UL) hash ^= TimeoutMillis.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SessionId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(SessionId);
          }
          if (TimeoutMillis != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(TimeoutMillis);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SessionId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(SessionId);
          }
          if (TimeoutMillis != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(TimeoutMillis);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (SessionId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SessionId);
          }
          if (TimeoutMillis != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeoutMillis);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionStarted other) {
          if (other == null) {
            return;
          }
          if (other.SessionId != 0UL) {
            SessionId = other.SessionId;
          }
          if (other.TimeoutMillis != 0UL) {
            TimeoutMillis = other.TimeoutMillis;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                SessionId = input.ReadUInt64();
                break;
              }
              case 16: {
                TimeoutMillis = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                SessionId = input.ReadUInt64();
                break;
              }
              case 16: {
                TimeoutMillis = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// Used to report a successful graceful termination of the session
      /// </summary>
      public sealed partial class SessionStopped : pb::IMessage<SessionStopped>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SessionStopped> _parser = new pb::MessageParser<SessionStopped>(() => new SessionStopped());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SessionStopped> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionResponse.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionStopped() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionStopped(SessionStopped other) : this() {
          sessionId_ = other.sessionId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SessionStopped Clone() {
          return new SessionStopped(this);
        }

        /// <summary>Field number for the "session_id" field.</summary>
        public const int SessionIdFieldNumber = 1;
        private ulong sessionId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong SessionId {
          get { return sessionId_; }
          set {
            sessionId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SessionStopped);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SessionStopped other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SessionId != other.SessionId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (SessionId != 0UL) hash ^= SessionId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SessionId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(SessionId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SessionId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(SessionId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (SessionId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SessionId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SessionStopped other) {
          if (other == null) {
            return;
          }
          if (other.SessionId != 0UL) {
            SessionId = other.SessionId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                SessionId = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                SessionId = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// Used by the server to report when an acquire operation is added to the waiters queue
      /// </summary>
      public sealed partial class AcquireSemaphorePending : pb::IMessage<AcquireSemaphorePending>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AcquireSemaphorePending> _parser = new pb::MessageParser<AcquireSemaphorePending>(() => new AcquireSemaphorePending());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AcquireSemaphorePending> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionResponse.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AcquireSemaphorePending() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AcquireSemaphorePending(AcquireSemaphorePending other) : this() {
          reqId_ = other.reqId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AcquireSemaphorePending Clone() {
          return new AcquireSemaphorePending(this);
        }

        /// <summary>Field number for the "req_id" field.</summary>
        public const int ReqIdFieldNumber = 1;
        private ulong reqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ReqId {
          get { return reqId_; }
          set {
            reqId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AcquireSemaphorePending);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AcquireSemaphorePending other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReqId != other.ReqId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReqId != 0UL) hash ^= ReqId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReqId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReqId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AcquireSemaphorePending other) {
          if (other == null) {
            return;
          }
          if (other.ReqId != 0UL) {
            ReqId = other.ReqId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// Used by the server to report the result of an acquire operation
      /// </summary>
      public sealed partial class AcquireSemaphoreResult : pb::IMessage<AcquireSemaphoreResult>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AcquireSemaphoreResult> _parser = new pb::MessageParser<AcquireSemaphoreResult>(() => new AcquireSemaphoreResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AcquireSemaphoreResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionResponse.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AcquireSemaphoreResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AcquireSemaphoreResult(AcquireSemaphoreResult other) : this() {
          reqId_ = other.reqId_;
          status_ = other.status_;
          issues_ = other.issues_.Clone();
          acquired_ = other.acquired_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AcquireSemaphoreResult Clone() {
          return new AcquireSemaphoreResult(this);
        }

        /// <summary>Field number for the "req_id" field.</summary>
        public const int ReqIdFieldNumber = 1;
        private ulong reqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ReqId {
          get { return reqId_; }
          set {
            reqId_ = value;
          }
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 2;
        private global::Ydb.StatusIds.Types.StatusCode status_ = global::Ydb.StatusIds.Types.StatusCode.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.StatusIds.Types.StatusCode Status {
          get { return status_; }
          set {
            status_ = value;
          }
        }

        /// <summary>Field number for the "issues" field.</summary>
        public const int IssuesFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Ydb.Issue.IssueMessage> _repeated_issues_codec
            = pb::FieldCodec.ForMessage(26, global::Ydb.Issue.IssueMessage.Parser);
        private readonly pbc::RepeatedField<global::Ydb.Issue.IssueMessage> issues_ = new pbc::RepeatedField<global::Ydb.Issue.IssueMessage>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.Issue.IssueMessage> Issues {
          get { return issues_; }
        }

        /// <summary>Field number for the "acquired" field.</summary>
        public const int AcquiredFieldNumber = 4;
        private bool acquired_;
        /// <summary>
        /// True if semaphore was acquired, false if acquire timed out
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Acquired {
          get { return acquired_; }
          set {
            acquired_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AcquireSemaphoreResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AcquireSemaphoreResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReqId != other.ReqId) return false;
          if (Status != other.Status) return false;
          if(!issues_.Equals(other.issues_)) return false;
          if (Acquired != other.Acquired) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReqId != 0UL) hash ^= ReqId.GetHashCode();
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) hash ^= Status.GetHashCode();
          hash ^= issues_.GetHashCode();
          if (Acquired != false) hash ^= Acquired.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Status);
          }
          issues_.WriteTo(output, _repeated_issues_codec);
          if (Acquired != false) {
            output.WriteRawTag(32);
            output.WriteBool(Acquired);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Status);
          }
          issues_.WriteTo(ref output, _repeated_issues_codec);
          if (Acquired != false) {
            output.WriteRawTag(32);
            output.WriteBool(Acquired);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReqId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReqId);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
          }
          size += issues_.CalculateSize(_repeated_issues_codec);
          if (Acquired != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AcquireSemaphoreResult other) {
          if (other == null) {
            return;
          }
          if (other.ReqId != 0UL) {
            ReqId = other.ReqId;
          }
          if (other.Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            Status = other.Status;
          }
          issues_.Add(other.issues_);
          if (other.Acquired != false) {
            Acquired = other.Acquired;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 16: {
                Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
                break;
              }
              case 26: {
                issues_.AddEntriesFrom(input, _repeated_issues_codec);
                break;
              }
              case 32: {
                Acquired = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 16: {
                Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
                break;
              }
              case 26: {
                issues_.AddEntriesFrom(ref input, _repeated_issues_codec);
                break;
              }
              case 32: {
                Acquired = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// Used by the server to report the result of a release operation
      /// </summary>
      public sealed partial class ReleaseSemaphoreResult : pb::IMessage<ReleaseSemaphoreResult>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ReleaseSemaphoreResult> _parser = new pb::MessageParser<ReleaseSemaphoreResult>(() => new ReleaseSemaphoreResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ReleaseSemaphoreResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionResponse.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReleaseSemaphoreResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReleaseSemaphoreResult(ReleaseSemaphoreResult other) : this() {
          reqId_ = other.reqId_;
          status_ = other.status_;
          issues_ = other.issues_.Clone();
          released_ = other.released_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReleaseSemaphoreResult Clone() {
          return new ReleaseSemaphoreResult(this);
        }

        /// <summary>Field number for the "req_id" field.</summary>
        public const int ReqIdFieldNumber = 1;
        private ulong reqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ReqId {
          get { return reqId_; }
          set {
            reqId_ = value;
          }
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 2;
        private global::Ydb.StatusIds.Types.StatusCode status_ = global::Ydb.StatusIds.Types.StatusCode.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.StatusIds.Types.StatusCode Status {
          get { return status_; }
          set {
            status_ = value;
          }
        }

        /// <summary>Field number for the "issues" field.</summary>
        public const int IssuesFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Ydb.Issue.IssueMessage> _repeated_issues_codec
            = pb::FieldCodec.ForMessage(26, global::Ydb.Issue.IssueMessage.Parser);
        private readonly pbc::RepeatedField<global::Ydb.Issue.IssueMessage> issues_ = new pbc::RepeatedField<global::Ydb.Issue.IssueMessage>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.Issue.IssueMessage> Issues {
          get { return issues_; }
        }

        /// <summary>Field number for the "released" field.</summary>
        public const int ReleasedFieldNumber = 4;
        private bool released_;
        /// <summary>
        /// True if semaphore was released, false if there was no active acquire operation
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Released {
          get { return released_; }
          set {
            released_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ReleaseSemaphoreResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ReleaseSemaphoreResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReqId != other.ReqId) return false;
          if (Status != other.Status) return false;
          if(!issues_.Equals(other.issues_)) return false;
          if (Released != other.Released) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReqId != 0UL) hash ^= ReqId.GetHashCode();
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) hash ^= Status.GetHashCode();
          hash ^= issues_.GetHashCode();
          if (Released != false) hash ^= Released.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Status);
          }
          issues_.WriteTo(output, _repeated_issues_codec);
          if (Released != false) {
            output.WriteRawTag(32);
            output.WriteBool(Released);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Status);
          }
          issues_.WriteTo(ref output, _repeated_issues_codec);
          if (Released != false) {
            output.WriteRawTag(32);
            output.WriteBool(Released);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReqId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReqId);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
          }
          size += issues_.CalculateSize(_repeated_issues_codec);
          if (Released != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ReleaseSemaphoreResult other) {
          if (other == null) {
            return;
          }
          if (other.ReqId != 0UL) {
            ReqId = other.ReqId;
          }
          if (other.Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            Status = other.Status;
          }
          issues_.Add(other.issues_);
          if (other.Released != false) {
            Released = other.Released;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 16: {
                Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
                break;
              }
              case 26: {
                issues_.AddEntriesFrom(input, _repeated_issues_codec);
                break;
              }
              case 32: {
                Released = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 16: {
                Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
                break;
              }
              case 26: {
                issues_.AddEntriesFrom(ref input, _repeated_issues_codec);
                break;
              }
              case 32: {
                Released = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// The result of the describe operation
      /// </summary>
      public sealed partial class DescribeSemaphoreResult : pb::IMessage<DescribeSemaphoreResult>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DescribeSemaphoreResult> _parser = new pb::MessageParser<DescribeSemaphoreResult>(() => new DescribeSemaphoreResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DescribeSemaphoreResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionResponse.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DescribeSemaphoreResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DescribeSemaphoreResult(DescribeSemaphoreResult other) : this() {
          reqId_ = other.reqId_;
          status_ = other.status_;
          issues_ = other.issues_.Clone();
          semaphoreDescription_ = other.semaphoreDescription_ != null ? other.semaphoreDescription_.Clone() : null;
          watchAdded_ = other.watchAdded_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DescribeSemaphoreResult Clone() {
          return new DescribeSemaphoreResult(this);
        }

        /// <summary>Field number for the "req_id" field.</summary>
        public const int ReqIdFieldNumber = 1;
        private ulong reqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ReqId {
          get { return reqId_; }
          set {
            reqId_ = value;
          }
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 2;
        private global::Ydb.StatusIds.Types.StatusCode status_ = global::Ydb.StatusIds.Types.StatusCode.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.StatusIds.Types.StatusCode Status {
          get { return status_; }
          set {
            status_ = value;
          }
        }

        /// <summary>Field number for the "issues" field.</summary>
        public const int IssuesFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Ydb.Issue.IssueMessage> _repeated_issues_codec
            = pb::FieldCodec.ForMessage(26, global::Ydb.Issue.IssueMessage.Parser);
        private readonly pbc::RepeatedField<global::Ydb.Issue.IssueMessage> issues_ = new pbc::RepeatedField<global::Ydb.Issue.IssueMessage>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.Issue.IssueMessage> Issues {
          get { return issues_; }
        }

        /// <summary>Field number for the "semaphore_description" field.</summary>
        public const int SemaphoreDescriptionFieldNumber = 4;
        private global::Ydb.Coordination.SemaphoreDescription semaphoreDescription_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.Coordination.SemaphoreDescription SemaphoreDescription {
          get { return semaphoreDescription_; }
          set {
            semaphoreDescription_ = value;
          }
        }

        /// <summary>Field number for the "watch_added" field.</summary>
        public const int WatchAddedFieldNumber = 5;
        private bool watchAdded_;
        /// <summary>
        /// True if a watch has been added for the semaphore
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool WatchAdded {
          get { return watchAdded_; }
          set {
            watchAdded_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DescribeSemaphoreResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DescribeSemaphoreResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReqId != other.ReqId) return false;
          if (Status != other.Status) return false;
          if(!issues_.Equals(other.issues_)) return false;
          if (!object.Equals(SemaphoreDescription, other.SemaphoreDescription)) return false;
          if (WatchAdded != other.WatchAdded) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReqId != 0UL) hash ^= ReqId.GetHashCode();
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) hash ^= Status.GetHashCode();
          hash ^= issues_.GetHashCode();
          if (semaphoreDescription_ != null) hash ^= SemaphoreDescription.GetHashCode();
          if (WatchAdded != false) hash ^= WatchAdded.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Status);
          }
          issues_.WriteTo(output, _repeated_issues_codec);
          if (semaphoreDescription_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(SemaphoreDescription);
          }
          if (WatchAdded != false) {
            output.WriteRawTag(40);
            output.WriteBool(WatchAdded);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Status);
          }
          issues_.WriteTo(ref output, _repeated_issues_codec);
          if (semaphoreDescription_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(SemaphoreDescription);
          }
          if (WatchAdded != false) {
            output.WriteRawTag(40);
            output.WriteBool(WatchAdded);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReqId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReqId);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
          }
          size += issues_.CalculateSize(_repeated_issues_codec);
          if (semaphoreDescription_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SemaphoreDescription);
          }
          if (WatchAdded != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DescribeSemaphoreResult other) {
          if (other == null) {
            return;
          }
          if (other.ReqId != 0UL) {
            ReqId = other.ReqId;
          }
          if (other.Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            Status = other.Status;
          }
          issues_.Add(other.issues_);
          if (other.semaphoreDescription_ != null) {
            if (semaphoreDescription_ == null) {
              SemaphoreDescription = new global::Ydb.Coordination.SemaphoreDescription();
            }
            SemaphoreDescription.MergeFrom(other.SemaphoreDescription);
          }
          if (other.WatchAdded != false) {
            WatchAdded = other.WatchAdded;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 16: {
                Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
                break;
              }
              case 26: {
                issues_.AddEntriesFrom(input, _repeated_issues_codec);
                break;
              }
              case 34: {
                if (semaphoreDescription_ == null) {
                  SemaphoreDescription = new global::Ydb.Coordination.SemaphoreDescription();
                }
                input.ReadMessage(SemaphoreDescription);
                break;
              }
              case 40: {
                WatchAdded = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 16: {
                Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
                break;
              }
              case 26: {
                issues_.AddEntriesFrom(ref input, _repeated_issues_codec);
                break;
              }
              case 34: {
                if (semaphoreDescription_ == null) {
                  SemaphoreDescription = new global::Ydb.Coordination.SemaphoreDescription();
                }
                input.ReadMessage(SemaphoreDescription);
                break;
              }
              case 40: {
                WatchAdded = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// Used to report a change in the watched semaphore
      /// </summary>
      public sealed partial class DescribeSemaphoreChanged : pb::IMessage<DescribeSemaphoreChanged>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DescribeSemaphoreChanged> _parser = new pb::MessageParser<DescribeSemaphoreChanged>(() => new DescribeSemaphoreChanged());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DescribeSemaphoreChanged> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionResponse.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DescribeSemaphoreChanged() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DescribeSemaphoreChanged(DescribeSemaphoreChanged other) : this() {
          reqId_ = other.reqId_;
          dataChanged_ = other.dataChanged_;
          ownersChanged_ = other.ownersChanged_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DescribeSemaphoreChanged Clone() {
          return new DescribeSemaphoreChanged(this);
        }

        /// <summary>Field number for the "req_id" field.</summary>
        public const int ReqIdFieldNumber = 1;
        private ulong reqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ReqId {
          get { return reqId_; }
          set {
            reqId_ = value;
          }
        }

        /// <summary>Field number for the "data_changed" field.</summary>
        public const int DataChangedFieldNumber = 2;
        private bool dataChanged_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool DataChanged {
          get { return dataChanged_; }
          set {
            dataChanged_ = value;
          }
        }

        /// <summary>Field number for the "owners_changed" field.</summary>
        public const int OwnersChangedFieldNumber = 3;
        private bool ownersChanged_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool OwnersChanged {
          get { return ownersChanged_; }
          set {
            ownersChanged_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DescribeSemaphoreChanged);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DescribeSemaphoreChanged other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReqId != other.ReqId) return false;
          if (DataChanged != other.DataChanged) return false;
          if (OwnersChanged != other.OwnersChanged) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReqId != 0UL) hash ^= ReqId.GetHashCode();
          if (DataChanged != false) hash ^= DataChanged.GetHashCode();
          if (OwnersChanged != false) hash ^= OwnersChanged.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (DataChanged != false) {
            output.WriteRawTag(16);
            output.WriteBool(DataChanged);
          }
          if (OwnersChanged != false) {
            output.WriteRawTag(24);
            output.WriteBool(OwnersChanged);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (DataChanged != false) {
            output.WriteRawTag(16);
            output.WriteBool(DataChanged);
          }
          if (OwnersChanged != false) {
            output.WriteRawTag(24);
            output.WriteBool(OwnersChanged);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReqId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReqId);
          }
          if (DataChanged != false) {
            size += 1 + 1;
          }
          if (OwnersChanged != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DescribeSemaphoreChanged other) {
          if (other == null) {
            return;
          }
          if (other.ReqId != 0UL) {
            ReqId = other.ReqId;
          }
          if (other.DataChanged != false) {
            DataChanged = other.DataChanged;
          }
          if (other.OwnersChanged != false) {
            OwnersChanged = other.OwnersChanged;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 16: {
                DataChanged = input.ReadBool();
                break;
              }
              case 24: {
                OwnersChanged = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 16: {
                DataChanged = input.ReadBool();
                break;
              }
              case 24: {
                OwnersChanged = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// The result of semaphore creation
      /// </summary>
      public sealed partial class CreateSemaphoreResult : pb::IMessage<CreateSemaphoreResult>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CreateSemaphoreResult> _parser = new pb::MessageParser<CreateSemaphoreResult>(() => new CreateSemaphoreResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CreateSemaphoreResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionResponse.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreateSemaphoreResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreateSemaphoreResult(CreateSemaphoreResult other) : this() {
          reqId_ = other.reqId_;
          status_ = other.status_;
          issues_ = other.issues_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreateSemaphoreResult Clone() {
          return new CreateSemaphoreResult(this);
        }

        /// <summary>Field number for the "req_id" field.</summary>
        public const int ReqIdFieldNumber = 1;
        private ulong reqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ReqId {
          get { return reqId_; }
          set {
            reqId_ = value;
          }
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 2;
        private global::Ydb.StatusIds.Types.StatusCode status_ = global::Ydb.StatusIds.Types.StatusCode.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.StatusIds.Types.StatusCode Status {
          get { return status_; }
          set {
            status_ = value;
          }
        }

        /// <summary>Field number for the "issues" field.</summary>
        public const int IssuesFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Ydb.Issue.IssueMessage> _repeated_issues_codec
            = pb::FieldCodec.ForMessage(26, global::Ydb.Issue.IssueMessage.Parser);
        private readonly pbc::RepeatedField<global::Ydb.Issue.IssueMessage> issues_ = new pbc::RepeatedField<global::Ydb.Issue.IssueMessage>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.Issue.IssueMessage> Issues {
          get { return issues_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CreateSemaphoreResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CreateSemaphoreResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReqId != other.ReqId) return false;
          if (Status != other.Status) return false;
          if(!issues_.Equals(other.issues_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReqId != 0UL) hash ^= ReqId.GetHashCode();
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) hash ^= Status.GetHashCode();
          hash ^= issues_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Status);
          }
          issues_.WriteTo(output, _repeated_issues_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Status);
          }
          issues_.WriteTo(ref output, _repeated_issues_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReqId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReqId);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
          }
          size += issues_.CalculateSize(_repeated_issues_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CreateSemaphoreResult other) {
          if (other == null) {
            return;
          }
          if (other.ReqId != 0UL) {
            ReqId = other.ReqId;
          }
          if (other.Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            Status = other.Status;
          }
          issues_.Add(other.issues_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 16: {
                Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
                break;
              }
              case 26: {
                issues_.AddEntriesFrom(input, _repeated_issues_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 16: {
                Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
                break;
              }
              case 26: {
                issues_.AddEntriesFrom(ref input, _repeated_issues_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// The result of semaphore update
      /// </summary>
      public sealed partial class UpdateSemaphoreResult : pb::IMessage<UpdateSemaphoreResult>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UpdateSemaphoreResult> _parser = new pb::MessageParser<UpdateSemaphoreResult>(() => new UpdateSemaphoreResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UpdateSemaphoreResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionResponse.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateSemaphoreResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateSemaphoreResult(UpdateSemaphoreResult other) : this() {
          reqId_ = other.reqId_;
          status_ = other.status_;
          issues_ = other.issues_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateSemaphoreResult Clone() {
          return new UpdateSemaphoreResult(this);
        }

        /// <summary>Field number for the "req_id" field.</summary>
        public const int ReqIdFieldNumber = 1;
        private ulong reqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ReqId {
          get { return reqId_; }
          set {
            reqId_ = value;
          }
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 2;
        private global::Ydb.StatusIds.Types.StatusCode status_ = global::Ydb.StatusIds.Types.StatusCode.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.StatusIds.Types.StatusCode Status {
          get { return status_; }
          set {
            status_ = value;
          }
        }

        /// <summary>Field number for the "issues" field.</summary>
        public const int IssuesFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Ydb.Issue.IssueMessage> _repeated_issues_codec
            = pb::FieldCodec.ForMessage(26, global::Ydb.Issue.IssueMessage.Parser);
        private readonly pbc::RepeatedField<global::Ydb.Issue.IssueMessage> issues_ = new pbc::RepeatedField<global::Ydb.Issue.IssueMessage>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.Issue.IssueMessage> Issues {
          get { return issues_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UpdateSemaphoreResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UpdateSemaphoreResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReqId != other.ReqId) return false;
          if (Status != other.Status) return false;
          if(!issues_.Equals(other.issues_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReqId != 0UL) hash ^= ReqId.GetHashCode();
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) hash ^= Status.GetHashCode();
          hash ^= issues_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Status);
          }
          issues_.WriteTo(output, _repeated_issues_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Status);
          }
          issues_.WriteTo(ref output, _repeated_issues_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReqId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReqId);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
          }
          size += issues_.CalculateSize(_repeated_issues_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UpdateSemaphoreResult other) {
          if (other == null) {
            return;
          }
          if (other.ReqId != 0UL) {
            ReqId = other.ReqId;
          }
          if (other.Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            Status = other.Status;
          }
          issues_.Add(other.issues_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 16: {
                Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
                break;
              }
              case 26: {
                issues_.AddEntriesFrom(input, _repeated_issues_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 16: {
                Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
                break;
              }
              case 26: {
                issues_.AddEntriesFrom(ref input, _repeated_issues_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// The result of semaphore deletion
      /// </summary>
      public sealed partial class DeleteSemaphoreResult : pb::IMessage<DeleteSemaphoreResult>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DeleteSemaphoreResult> _parser = new pb::MessageParser<DeleteSemaphoreResult>(() => new DeleteSemaphoreResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DeleteSemaphoreResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.Coordination.SessionResponse.Descriptor.NestedTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeleteSemaphoreResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeleteSemaphoreResult(DeleteSemaphoreResult other) : this() {
          reqId_ = other.reqId_;
          status_ = other.status_;
          issues_ = other.issues_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeleteSemaphoreResult Clone() {
          return new DeleteSemaphoreResult(this);
        }

        /// <summary>Field number for the "req_id" field.</summary>
        public const int ReqIdFieldNumber = 1;
        private ulong reqId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ReqId {
          get { return reqId_; }
          set {
            reqId_ = value;
          }
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 2;
        private global::Ydb.StatusIds.Types.StatusCode status_ = global::Ydb.StatusIds.Types.StatusCode.Unspecified;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.StatusIds.Types.StatusCode Status {
          get { return status_; }
          set {
            status_ = value;
          }
        }

        /// <summary>Field number for the "issues" field.</summary>
        public const int IssuesFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Ydb.Issue.IssueMessage> _repeated_issues_codec
            = pb::FieldCodec.ForMessage(26, global::Ydb.Issue.IssueMessage.Parser);
        private readonly pbc::RepeatedField<global::Ydb.Issue.IssueMessage> issues_ = new pbc::RepeatedField<global::Ydb.Issue.IssueMessage>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.Issue.IssueMessage> Issues {
          get { return issues_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DeleteSemaphoreResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DeleteSemaphoreResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReqId != other.ReqId) return false;
          if (Status != other.Status) return false;
          if(!issues_.Equals(other.issues_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReqId != 0UL) hash ^= ReqId.GetHashCode();
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) hash ^= Status.GetHashCode();
          hash ^= issues_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Status);
          }
          issues_.WriteTo(output, _repeated_issues_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReqId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(ReqId);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Status);
          }
          issues_.WriteTo(ref output, _repeated_issues_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReqId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReqId);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
          }
          size += issues_.CalculateSize(_repeated_issues_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DeleteSemaphoreResult other) {
          if (other == null) {
            return;
          }
          if (other.ReqId != 0UL) {
            ReqId = other.ReqId;
          }
          if (other.Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            Status = other.Status;
          }
          issues_.Add(other.issues_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 16: {
                Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
                break;
              }
              case 26: {
                issues_.AddEntriesFrom(input, _repeated_issues_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReqId = input.ReadUInt64();
                break;
              }
              case 16: {
                Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
                break;
              }
              case 26: {
                issues_.AddEntriesFrom(ref input, _repeated_issues_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CreateNodeRequest : pb::IMessage<CreateNodeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateNodeRequest> _parser = new pb::MessageParser<CreateNodeRequest>(() => new CreateNodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateNodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Coordination.YdbCoordinationReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNodeRequest(CreateNodeRequest other) : this() {
      path_ = other.path_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      operationParams_ = other.operationParams_ != null ? other.operationParams_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNodeRequest Clone() {
      return new CreateNodeRequest(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Ydb.Coordination.Config config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.Config Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "operation_params" field.</summary>
    public const int OperationParamsFieldNumber = 3;
    private global::Ydb.Operations.OperationParams operationParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.OperationParams OperationParams {
      get { return operationParams_; }
      set {
        operationParams_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateNodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateNodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(OperationParams, other.OperationParams)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (operationParams_ != null) hash ^= OperationParams.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (operationParams_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OperationParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (operationParams_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OperationParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (operationParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperationParams);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateNodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Ydb.Coordination.Config();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.operationParams_ != null) {
        if (operationParams_ == null) {
          OperationParams = new global::Ydb.Operations.OperationParams();
        }
        OperationParams.MergeFrom(other.OperationParams);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Ydb.Coordination.Config();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Ydb.Coordination.Config();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateNodeResponse : pb::IMessage<CreateNodeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateNodeResponse> _parser = new pb::MessageParser<CreateNodeResponse>(() => new CreateNodeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateNodeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Coordination.YdbCoordinationReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNodeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNodeResponse(CreateNodeResponse other) : this() {
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNodeResponse Clone() {
      return new CreateNodeResponse(this);
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 1;
    private global::Ydb.Operations.Operation operation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.Operation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateNodeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateNodeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Operation, other.Operation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateNodeResponse other) {
      if (other == null) {
        return;
      }
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::Ydb.Operations.Operation();
        }
        Operation.MergeFrom(other.Operation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AlterNodeRequest : pb::IMessage<AlterNodeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AlterNodeRequest> _parser = new pb::MessageParser<AlterNodeRequest>(() => new AlterNodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AlterNodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Coordination.YdbCoordinationReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterNodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterNodeRequest(AlterNodeRequest other) : this() {
      path_ = other.path_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      operationParams_ = other.operationParams_ != null ? other.operationParams_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterNodeRequest Clone() {
      return new AlterNodeRequest(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Ydb.Coordination.Config config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.Config Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "operation_params" field.</summary>
    public const int OperationParamsFieldNumber = 3;
    private global::Ydb.Operations.OperationParams operationParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.OperationParams OperationParams {
      get { return operationParams_; }
      set {
        operationParams_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AlterNodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AlterNodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(OperationParams, other.OperationParams)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (operationParams_ != null) hash ^= OperationParams.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (operationParams_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OperationParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (operationParams_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OperationParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (operationParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperationParams);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AlterNodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Ydb.Coordination.Config();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.operationParams_ != null) {
        if (operationParams_ == null) {
          OperationParams = new global::Ydb.Operations.OperationParams();
        }
        OperationParams.MergeFrom(other.OperationParams);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Ydb.Coordination.Config();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Ydb.Coordination.Config();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AlterNodeResponse : pb::IMessage<AlterNodeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AlterNodeResponse> _parser = new pb::MessageParser<AlterNodeResponse>(() => new AlterNodeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AlterNodeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Coordination.YdbCoordinationReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterNodeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterNodeResponse(AlterNodeResponse other) : this() {
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterNodeResponse Clone() {
      return new AlterNodeResponse(this);
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 1;
    private global::Ydb.Operations.Operation operation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.Operation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AlterNodeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AlterNodeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Operation, other.Operation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AlterNodeResponse other) {
      if (other == null) {
        return;
      }
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::Ydb.Operations.Operation();
        }
        Operation.MergeFrom(other.Operation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DropNodeRequest : pb::IMessage<DropNodeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DropNodeRequest> _parser = new pb::MessageParser<DropNodeRequest>(() => new DropNodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DropNodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Coordination.YdbCoordinationReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropNodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropNodeRequest(DropNodeRequest other) : this() {
      path_ = other.path_;
      operationParams_ = other.operationParams_ != null ? other.operationParams_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropNodeRequest Clone() {
      return new DropNodeRequest(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operation_params" field.</summary>
    public const int OperationParamsFieldNumber = 2;
    private global::Ydb.Operations.OperationParams operationParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.OperationParams OperationParams {
      get { return operationParams_; }
      set {
        operationParams_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DropNodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DropNodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (!object.Equals(OperationParams, other.OperationParams)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (operationParams_ != null) hash ^= OperationParams.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (operationParams_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OperationParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (operationParams_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OperationParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (operationParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperationParams);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DropNodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.operationParams_ != null) {
        if (operationParams_ == null) {
          OperationParams = new global::Ydb.Operations.OperationParams();
        }
        OperationParams.MergeFrom(other.OperationParams);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DropNodeResponse : pb::IMessage<DropNodeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DropNodeResponse> _parser = new pb::MessageParser<DropNodeResponse>(() => new DropNodeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DropNodeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Coordination.YdbCoordinationReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropNodeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropNodeResponse(DropNodeResponse other) : this() {
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropNodeResponse Clone() {
      return new DropNodeResponse(this);
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 1;
    private global::Ydb.Operations.Operation operation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.Operation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DropNodeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DropNodeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Operation, other.Operation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DropNodeResponse other) {
      if (other == null) {
        return;
      }
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::Ydb.Operations.Operation();
        }
        Operation.MergeFrom(other.Operation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DescribeNodeRequest : pb::IMessage<DescribeNodeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DescribeNodeRequest> _parser = new pb::MessageParser<DescribeNodeRequest>(() => new DescribeNodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DescribeNodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Coordination.YdbCoordinationReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeNodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeNodeRequest(DescribeNodeRequest other) : this() {
      path_ = other.path_;
      operationParams_ = other.operationParams_ != null ? other.operationParams_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeNodeRequest Clone() {
      return new DescribeNodeRequest(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operation_params" field.</summary>
    public const int OperationParamsFieldNumber = 2;
    private global::Ydb.Operations.OperationParams operationParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.OperationParams OperationParams {
      get { return operationParams_; }
      set {
        operationParams_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DescribeNodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DescribeNodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (!object.Equals(OperationParams, other.OperationParams)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (operationParams_ != null) hash ^= OperationParams.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (operationParams_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OperationParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (operationParams_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OperationParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (operationParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperationParams);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DescribeNodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.operationParams_ != null) {
        if (operationParams_ == null) {
          OperationParams = new global::Ydb.Operations.OperationParams();
        }
        OperationParams.MergeFrom(other.OperationParams);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DescribeNodeResponse : pb::IMessage<DescribeNodeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DescribeNodeResponse> _parser = new pb::MessageParser<DescribeNodeResponse>(() => new DescribeNodeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DescribeNodeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Coordination.YdbCoordinationReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeNodeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeNodeResponse(DescribeNodeResponse other) : this() {
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeNodeResponse Clone() {
      return new DescribeNodeResponse(this);
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 1;
    private global::Ydb.Operations.Operation operation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.Operation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DescribeNodeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DescribeNodeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Operation, other.Operation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DescribeNodeResponse other) {
      if (other == null) {
        return;
      }
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::Ydb.Operations.Operation();
        }
        Operation.MergeFrom(other.Operation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DescribeNodeResult : pb::IMessage<DescribeNodeResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DescribeNodeResult> _parser = new pb::MessageParser<DescribeNodeResult>(() => new DescribeNodeResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DescribeNodeResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Coordination.YdbCoordinationReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeNodeResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeNodeResult(DescribeNodeResult other) : this() {
      self_ = other.self_ != null ? other.self_.Clone() : null;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeNodeResult Clone() {
      return new DescribeNodeResult(this);
    }

    /// <summary>Field number for the "self" field.</summary>
    public const int SelfFieldNumber = 1;
    private global::Ydb.Scheme.Entry self_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Scheme.Entry Self {
      get { return self_; }
      set {
        self_ = value;
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Ydb.Coordination.Config config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Coordination.Config Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DescribeNodeResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DescribeNodeResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Self, other.Self)) return false;
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (self_ != null) hash ^= Self.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (self_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Self);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (self_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Self);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (self_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Self);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DescribeNodeResult other) {
      if (other == null) {
        return;
      }
      if (other.self_ != null) {
        if (self_ == null) {
          Self = new global::Ydb.Scheme.Entry();
        }
        Self.MergeFrom(other.Self);
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Ydb.Coordination.Config();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (self_ == null) {
              Self = new global::Ydb.Scheme.Entry();
            }
            input.ReadMessage(Self);
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Ydb.Coordination.Config();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (self_ == null) {
              Self = new global::Ydb.Scheme.Entry();
            }
            input.ReadMessage(Self);
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Ydb.Coordination.Config();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
