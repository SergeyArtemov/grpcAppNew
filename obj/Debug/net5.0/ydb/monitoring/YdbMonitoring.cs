// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Ydb/Monitoring/ydb_monitoring.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ydb.Monitoring {

  /// <summary>Holder for reflection information generated from Ydb/Monitoring/ydb_monitoring.proto</summary>
  public static partial class YdbMonitoringReflection {

    #region Descriptor
    /// <summary>File descriptor for Ydb/Monitoring/ydb_monitoring.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static YdbMonitoringReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNZZGIvTW9uaXRvcmluZy95ZGJfbW9uaXRvcmluZy5wcm90bxIOWWRiLk1v",
            "bml0b3JpbmcaIllkYi9PcGVyYXRpb25zL3lkYl9vcGVyYXRpb24ucHJvdG8i",
            "ZwoKU3RhdHVzRmxhZyJZCgZTdGF0dXMSDwoLVU5TUEVDSUZJRUQQABIICgRH",
            "UkVZEAESCQoFR1JFRU4QAhIICgRCTFVFEAMSCgoGWUVMTE9XEAQSCgoGT1JB",
            "TkdFEAUSBwoDUkVEEAYivgEKEFNlbGZDaGVja1JlcXVlc3QSOQoQb3BlcmF0",
            "aW9uX3BhcmFtcxgBIAEoCzIfLllkYi5PcGVyYXRpb25zLk9wZXJhdGlvblBh",
            "cmFtcxIdChVyZXR1cm5fdmVyYm9zZV9zdGF0dXMYAiABKAgSOQoObWluaW11",
            "bV9zdGF0dXMYAyABKA4yIS5ZZGIuTW9uaXRvcmluZy5TdGF0dXNGbGFnLlN0",
            "YXR1cxIVCg1tYXhpbXVtX2xldmVsGAQgASgNIkEKEVNlbGZDaGVja1Jlc3Bv",
            "bnNlEiwKCW9wZXJhdGlvbhgBIAEoCzIZLllkYi5PcGVyYXRpb25zLk9wZXJh",
            "dGlvbiJnCglTZWxmQ2hlY2siWgoGUmVzdWx0Eg8KC1VOU1BFQ0lGSUVEEAAS",
            "CAoER09PRBABEgwKCERFR1JBREVEEAISGAoUTUFJTlRFTkFOQ0VfUkVRVUlS",
            "RUQQAxINCglFTUVSR0VOQ1kQBCJUChJTdG9yYWdlUERpc2tTdGF0dXMSCgoC",
            "aWQYASABKAkSMgoHb3ZlcmFsbBgCIAEoDjIhLllkYi5Nb25pdG9yaW5nLlN0",
            "YXR1c0ZsYWcuU3RhdHVzIsABChJTdG9yYWdlVkRpc2tTdGF0dXMSCgoCaWQY",
            "ASABKAkSMgoHb3ZlcmFsbBgCIAEoDjIhLllkYi5Nb25pdG9yaW5nLlN0YXR1",
            "c0ZsYWcuU3RhdHVzEjcKDHZkaXNrX3N0YXR1cxgDIAEoDjIhLllkYi5Nb25p",
            "dG9yaW5nLlN0YXR1c0ZsYWcuU3RhdHVzEjEKBXBkaXNrGAQgASgLMiIuWWRi",
            "Lk1vbml0b3JpbmcuU3RvcmFnZVBEaXNrU3RhdHVzIogBChJTdG9yYWdlR3Jv",
            "dXBTdGF0dXMSCgoCaWQYASABKAkSMgoHb3ZlcmFsbBgCIAEoDjIhLllkYi5N",
            "b25pdG9yaW5nLlN0YXR1c0ZsYWcuU3RhdHVzEjIKBnZkaXNrcxgDIAMoCzIi",
            "LllkYi5Nb25pdG9yaW5nLlN0b3JhZ2VWRGlza1N0YXR1cyKHAQoRU3RvcmFn",
            "ZVBvb2xTdGF0dXMSCgoCaWQYASABKAkSMgoHb3ZlcmFsbBgCIAEoDjIhLllk",
            "Yi5Nb25pdG9yaW5nLlN0YXR1c0ZsYWcuU3RhdHVzEjIKBmdyb3VwcxgDIAMo",
            "CzIiLllkYi5Nb25pdG9yaW5nLlN0b3JhZ2VHcm91cFN0YXR1cyJ1Cg1TdG9y",
            "YWdlU3RhdHVzEjIKB292ZXJhbGwYASABKA4yIS5ZZGIuTW9uaXRvcmluZy5T",
            "dGF0dXNGbGFnLlN0YXR1cxIwCgVwb29scxgCIAMoCzIhLllkYi5Nb25pdG9y",
            "aW5nLlN0b3JhZ2VQb29sU3RhdHVzInUKE0NvbXB1dGVUYWJsZXRTdGF0dXMS",
            "MgoHb3ZlcmFsbBgBIAEoDjIhLllkYi5Nb25pdG9yaW5nLlN0YXR1c0ZsYWcu",
            "U3RhdHVzEgwKBHR5cGUYAiABKAkSDQoFc3RhdGUYAyABKAkSDQoFY291bnQY",
            "BCABKA0iYwoQVGhyZWFkUG9vbFN0YXR1cxIyCgdvdmVyYWxsGAEgASgOMiEu",
            "WWRiLk1vbml0b3JpbmcuU3RhdHVzRmxhZy5TdGF0dXMSDAoEbmFtZRgCIAEo",
            "CRINCgV1c2FnZRgDIAEoAiJkChFMb2FkQXZlcmFnZVN0YXR1cxIyCgdvdmVy",
            "YWxsGAEgASgOMiEuWWRiLk1vbml0b3JpbmcuU3RhdHVzRmxhZy5TdGF0dXMS",
            "DAoEbG9hZBgCIAEoAhINCgVjb3JlcxgDIAEoDSLrAQoRQ29tcHV0ZU5vZGVT",
            "dGF0dXMSCgoCaWQYASABKAkSMgoHb3ZlcmFsbBgCIAEoDjIhLllkYi5Nb25p",
            "dG9yaW5nLlN0YXR1c0ZsYWcuU3RhdHVzEjQKB3RhYmxldHMYAyADKAsyIy5Z",
            "ZGIuTW9uaXRvcmluZy5Db21wdXRlVGFibGV0U3RhdHVzEi8KBXBvb2xzGAQg",
            "AygLMiAuWWRiLk1vbml0b3JpbmcuVGhyZWFkUG9vbFN0YXR1cxIvCgRsb2Fk",
            "GAUgASgLMiEuWWRiLk1vbml0b3JpbmcuTG9hZEF2ZXJhZ2VTdGF0dXMiqwEK",
            "DUNvbXB1dGVTdGF0dXMSMgoHb3ZlcmFsbBgBIAEoDjIhLllkYi5Nb25pdG9y",
            "aW5nLlN0YXR1c0ZsYWcuU3RhdHVzEjAKBW5vZGVzGAIgAygLMiEuWWRiLk1v",
            "bml0b3JpbmcuQ29tcHV0ZU5vZGVTdGF0dXMSNAoHdGFibGV0cxgDIAMoCzIj",
            "LllkYi5Nb25pdG9yaW5nLkNvbXB1dGVUYWJsZXRTdGF0dXMiNgoMTG9jYXRp",
            "b25Ob2RlEgoKAmlkGAEgASgNEgwKBGhvc3QYAiABKAkSDAoEcG9ydBgDIAEo",
            "DSIwChRMb2NhdGlvblN0b3JhZ2VQRGlzaxIKCgJpZBgBIAEoCRIMCgRwYXRo",
            "GAIgASgJIlcKFExvY2F0aW9uU3RvcmFnZVZEaXNrEgoKAmlkGAEgASgJEjMK",
            "BXBkaXNrGAIgASgLMiQuWWRiLk1vbml0b3JpbmcuTG9jYXRpb25TdG9yYWdl",
            "UERpc2siVwoUTG9jYXRpb25TdG9yYWdlR3JvdXASCgoCaWQYASABKAkSMwoF",
            "dmRpc2sYAiABKAsyJC5ZZGIuTW9uaXRvcmluZy5Mb2NhdGlvblN0b3JhZ2VW",
            "RGlzayJYChNMb2NhdGlvblN0b3JhZ2VQb29sEgwKBG5hbWUYASABKAkSMwoF",
            "Z3JvdXAYAiABKAsyJC5ZZGIuTW9uaXRvcmluZy5Mb2NhdGlvblN0b3JhZ2VH",
            "cm91cCJwCg9Mb2NhdGlvblN0b3JhZ2USKgoEbm9kZRgBIAEoCzIcLllkYi5N",
            "b25pdG9yaW5nLkxvY2F0aW9uTm9kZRIxCgRwb29sGAIgASgLMiMuWWRiLk1v",
            "bml0b3JpbmcuTG9jYXRpb25TdG9yYWdlUG9vbCIjChNMb2NhdGlvbkNvbXB1",
            "dGVQb29sEgwKBG5hbWUYASABKAkiQAoVTG9jYXRpb25Db21wdXRlVGFibGV0",
            "EgwKBHR5cGUYASABKAkSCgoCaWQYAiADKAkSDQoFY291bnQYAyABKA0ipwEK",
            "D0xvY2F0aW9uQ29tcHV0ZRIqCgRub2RlGAEgASgLMhwuWWRiLk1vbml0b3Jp",
            "bmcuTG9jYXRpb25Ob2RlEjEKBHBvb2wYAiABKAsyIy5ZZGIuTW9uaXRvcmlu",
            "Zy5Mb2NhdGlvbkNvbXB1dGVQb29sEjUKBnRhYmxldBgDIAEoCzIlLllkYi5N",
            "b25pdG9yaW5nLkxvY2F0aW9uQ29tcHV0ZVRhYmxldCIgChBMb2NhdGlvbkRh",
            "dGFiYXNlEgwKBG5hbWUYASABKAkiogEKCExvY2F0aW9uEjAKB3N0b3JhZ2UY",
            "ASABKAsyHy5ZZGIuTW9uaXRvcmluZy5Mb2NhdGlvblN0b3JhZ2USMAoHY29t",
            "cHV0ZRgCIAEoCzIfLllkYi5Nb25pdG9yaW5nLkxvY2F0aW9uQ29tcHV0ZRIy",
            "CghkYXRhYmFzZRgDIAEoCzIgLllkYi5Nb25pdG9yaW5nLkxvY2F0aW9uRGF0",
            "YWJhc2UiswEKCElzc3VlTG9nEgoKAmlkGAEgASgJEjEKBnN0YXR1cxgCIAEo",
            "DjIhLllkYi5Nb25pdG9yaW5nLlN0YXR1c0ZsYWcuU3RhdHVzEg8KB21lc3Nh",
            "Z2UYAyABKAkSKgoIbG9jYXRpb24YBCABKAsyGC5ZZGIuTW9uaXRvcmluZy5M",
            "b2NhdGlvbhIOCgZyZWFzb24YBSADKAkSDAoEdHlwZRgGIAEoCRINCgVsZXZl",
            "bBgHIAEoDSKyAQoORGF0YWJhc2VTdGF0dXMSDAoEbmFtZRgBIAEoCRIyCgdv",
            "dmVyYWxsGAIgASgOMiEuWWRiLk1vbml0b3JpbmcuU3RhdHVzRmxhZy5TdGF0",
            "dXMSLgoHc3RvcmFnZRgDIAEoCzIdLllkYi5Nb25pdG9yaW5nLlN0b3JhZ2VT",
            "dGF0dXMSLgoHY29tcHV0ZRgEIAEoCzIdLllkYi5Nb25pdG9yaW5nLkNvbXB1",
            "dGVTdGF0dXMitAEKD1NlbGZDaGVja1Jlc3VsdBI7ChFzZWxmX2NoZWNrX3Jl",
            "c3VsdBgBIAEoDjIgLllkYi5Nb25pdG9yaW5nLlNlbGZDaGVjay5SZXN1bHQS",
            "KwoJaXNzdWVfbG9nGAIgAygLMhguWWRiLk1vbml0b3JpbmcuSXNzdWVMb2cS",
            "NwoPZGF0YWJhc2Vfc3RhdHVzGAMgAygLMh4uWWRiLk1vbml0b3JpbmcuRGF0",
            "YWJhc2VTdGF0dXNCMAoZY29tLnlhbmRleC55ZGIubW9uaXRvcmluZ0IQTW9u",
            "aXRvcmluZ1Byb3Rvc/gBAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Ydb.Operations.YdbOperationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.StatusFlag), global::Ydb.Monitoring.StatusFlag.Parser, null, null, new[]{ typeof(global::Ydb.Monitoring.StatusFlag.Types.Status) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.SelfCheckRequest), global::Ydb.Monitoring.SelfCheckRequest.Parser, new[]{ "OperationParams", "ReturnVerboseStatus", "MinimumStatus", "MaximumLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.SelfCheckResponse), global::Ydb.Monitoring.SelfCheckResponse.Parser, new[]{ "Operation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.SelfCheck), global::Ydb.Monitoring.SelfCheck.Parser, null, null, new[]{ typeof(global::Ydb.Monitoring.SelfCheck.Types.Result) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.StoragePDiskStatus), global::Ydb.Monitoring.StoragePDiskStatus.Parser, new[]{ "Id", "Overall" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.StorageVDiskStatus), global::Ydb.Monitoring.StorageVDiskStatus.Parser, new[]{ "Id", "Overall", "VdiskStatus", "Pdisk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.StorageGroupStatus), global::Ydb.Monitoring.StorageGroupStatus.Parser, new[]{ "Id", "Overall", "Vdisks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.StoragePoolStatus), global::Ydb.Monitoring.StoragePoolStatus.Parser, new[]{ "Id", "Overall", "Groups" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.StorageStatus), global::Ydb.Monitoring.StorageStatus.Parser, new[]{ "Overall", "Pools" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.ComputeTabletStatus), global::Ydb.Monitoring.ComputeTabletStatus.Parser, new[]{ "Overall", "Type", "State", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.ThreadPoolStatus), global::Ydb.Monitoring.ThreadPoolStatus.Parser, new[]{ "Overall", "Name", "Usage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.LoadAverageStatus), global::Ydb.Monitoring.LoadAverageStatus.Parser, new[]{ "Overall", "Load", "Cores" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.ComputeNodeStatus), global::Ydb.Monitoring.ComputeNodeStatus.Parser, new[]{ "Id", "Overall", "Tablets", "Pools", "Load" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.ComputeStatus), global::Ydb.Monitoring.ComputeStatus.Parser, new[]{ "Overall", "Nodes", "Tablets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.LocationNode), global::Ydb.Monitoring.LocationNode.Parser, new[]{ "Id", "Host", "Port" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.LocationStoragePDisk), global::Ydb.Monitoring.LocationStoragePDisk.Parser, new[]{ "Id", "Path" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.LocationStorageVDisk), global::Ydb.Monitoring.LocationStorageVDisk.Parser, new[]{ "Id", "Pdisk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.LocationStorageGroup), global::Ydb.Monitoring.LocationStorageGroup.Parser, new[]{ "Id", "Vdisk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.LocationStoragePool), global::Ydb.Monitoring.LocationStoragePool.Parser, new[]{ "Name", "Group" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.LocationStorage), global::Ydb.Monitoring.LocationStorage.Parser, new[]{ "Node", "Pool" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.LocationComputePool), global::Ydb.Monitoring.LocationComputePool.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.LocationComputeTablet), global::Ydb.Monitoring.LocationComputeTablet.Parser, new[]{ "Type", "Id", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.LocationCompute), global::Ydb.Monitoring.LocationCompute.Parser, new[]{ "Node", "Pool", "Tablet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.LocationDatabase), global::Ydb.Monitoring.LocationDatabase.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.Location), global::Ydb.Monitoring.Location.Parser, new[]{ "Storage", "Compute", "Database" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.IssueLog), global::Ydb.Monitoring.IssueLog.Parser, new[]{ "Id", "Status", "Message", "Location", "Reason", "Type", "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.DatabaseStatus), global::Ydb.Monitoring.DatabaseStatus.Parser, new[]{ "Name", "Overall", "Storage", "Compute" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Monitoring.SelfCheckResult), global::Ydb.Monitoring.SelfCheckResult.Parser, new[]{ "SelfCheckResult_", "IssueLog", "DatabaseStatus" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class StatusFlag : pb::IMessage<StatusFlag>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StatusFlag> _parser = new pb::MessageParser<StatusFlag>(() => new StatusFlag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatusFlag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusFlag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusFlag(StatusFlag other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusFlag Clone() {
      return new StatusFlag(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatusFlag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatusFlag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatusFlag other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the StatusFlag message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Describes the general state of a component.
      /// From GREEN to RED, where GREEN is good, and RED is bad.
      /// GREY means that the corresponding status is unknown.
      /// </summary>
      public enum Status {
        [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("GREY")] Grey = 1,
        [pbr::OriginalName("GREEN")] Green = 2,
        [pbr::OriginalName("BLUE")] Blue = 3,
        [pbr::OriginalName("YELLOW")] Yellow = 4,
        [pbr::OriginalName("ORANGE")] Orange = 5,
        [pbr::OriginalName("RED")] Red = 6,
      }

    }
    #endregion

  }

  public sealed partial class SelfCheckRequest : pb::IMessage<SelfCheckRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SelfCheckRequest> _parser = new pb::MessageParser<SelfCheckRequest>(() => new SelfCheckRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SelfCheckRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfCheckRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfCheckRequest(SelfCheckRequest other) : this() {
      operationParams_ = other.operationParams_ != null ? other.operationParams_.Clone() : null;
      returnVerboseStatus_ = other.returnVerboseStatus_;
      minimumStatus_ = other.minimumStatus_;
      maximumLevel_ = other.maximumLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfCheckRequest Clone() {
      return new SelfCheckRequest(this);
    }

    /// <summary>Field number for the "operation_params" field.</summary>
    public const int OperationParamsFieldNumber = 1;
    private global::Ydb.Operations.OperationParams operationParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.OperationParams OperationParams {
      get { return operationParams_; }
      set {
        operationParams_ = value;
      }
    }

    /// <summary>Field number for the "return_verbose_status" field.</summary>
    public const int ReturnVerboseStatusFieldNumber = 2;
    private bool returnVerboseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReturnVerboseStatus {
      get { return returnVerboseStatus_; }
      set {
        returnVerboseStatus_ = value;
      }
    }

    /// <summary>Field number for the "minimum_status" field.</summary>
    public const int MinimumStatusFieldNumber = 3;
    private global::Ydb.Monitoring.StatusFlag.Types.Status minimumStatus_ = global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.StatusFlag.Types.Status MinimumStatus {
      get { return minimumStatus_; }
      set {
        minimumStatus_ = value;
      }
    }

    /// <summary>Field number for the "maximum_level" field.</summary>
    public const int MaximumLevelFieldNumber = 4;
    private uint maximumLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaximumLevel {
      get { return maximumLevel_; }
      set {
        maximumLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SelfCheckRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SelfCheckRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OperationParams, other.OperationParams)) return false;
      if (ReturnVerboseStatus != other.ReturnVerboseStatus) return false;
      if (MinimumStatus != other.MinimumStatus) return false;
      if (MaximumLevel != other.MaximumLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operationParams_ != null) hash ^= OperationParams.GetHashCode();
      if (ReturnVerboseStatus != false) hash ^= ReturnVerboseStatus.GetHashCode();
      if (MinimumStatus != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) hash ^= MinimumStatus.GetHashCode();
      if (MaximumLevel != 0) hash ^= MaximumLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operationParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OperationParams);
      }
      if (ReturnVerboseStatus != false) {
        output.WriteRawTag(16);
        output.WriteBool(ReturnVerboseStatus);
      }
      if (MinimumStatus != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MinimumStatus);
      }
      if (MaximumLevel != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(MaximumLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operationParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OperationParams);
      }
      if (ReturnVerboseStatus != false) {
        output.WriteRawTag(16);
        output.WriteBool(ReturnVerboseStatus);
      }
      if (MinimumStatus != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MinimumStatus);
      }
      if (MaximumLevel != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(MaximumLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operationParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperationParams);
      }
      if (ReturnVerboseStatus != false) {
        size += 1 + 1;
      }
      if (MinimumStatus != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MinimumStatus);
      }
      if (MaximumLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaximumLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SelfCheckRequest other) {
      if (other == null) {
        return;
      }
      if (other.operationParams_ != null) {
        if (operationParams_ == null) {
          OperationParams = new global::Ydb.Operations.OperationParams();
        }
        OperationParams.MergeFrom(other.OperationParams);
      }
      if (other.ReturnVerboseStatus != false) {
        ReturnVerboseStatus = other.ReturnVerboseStatus;
      }
      if (other.MinimumStatus != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        MinimumStatus = other.MinimumStatus;
      }
      if (other.MaximumLevel != 0) {
        MaximumLevel = other.MaximumLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
          case 16: {
            ReturnVerboseStatus = input.ReadBool();
            break;
          }
          case 24: {
            MinimumStatus = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 32: {
            MaximumLevel = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
          case 16: {
            ReturnVerboseStatus = input.ReadBool();
            break;
          }
          case 24: {
            MinimumStatus = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 32: {
            MaximumLevel = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SelfCheckResponse : pb::IMessage<SelfCheckResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SelfCheckResponse> _parser = new pb::MessageParser<SelfCheckResponse>(() => new SelfCheckResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SelfCheckResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfCheckResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfCheckResponse(SelfCheckResponse other) : this() {
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfCheckResponse Clone() {
      return new SelfCheckResponse(this);
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 1;
    private global::Ydb.Operations.Operation operation_;
    /// <summary>
    /// After successfull completion must contain SelfCheckResult.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.Operation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SelfCheckResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SelfCheckResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Operation, other.Operation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SelfCheckResponse other) {
      if (other == null) {
        return;
      }
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::Ydb.Operations.Operation();
        }
        Operation.MergeFrom(other.Operation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SelfCheck : pb::IMessage<SelfCheck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SelfCheck> _parser = new pb::MessageParser<SelfCheck>(() => new SelfCheck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SelfCheck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfCheck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfCheck(SelfCheck other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfCheck Clone() {
      return new SelfCheck(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SelfCheck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SelfCheck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SelfCheck other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SelfCheck message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Describes the result of self-check performed.
      /// </summary>
      public enum Result {
        [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("GOOD")] Good = 1,
        [pbr::OriginalName("DEGRADED")] Degraded = 2,
        [pbr::OriginalName("MAINTENANCE_REQUIRED")] MaintenanceRequired = 3,
        [pbr::OriginalName("EMERGENCY")] Emergency = 4,
      }

    }
    #endregion

  }

  public sealed partial class StoragePDiskStatus : pb::IMessage<StoragePDiskStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StoragePDiskStatus> _parser = new pb::MessageParser<StoragePDiskStatus>(() => new StoragePDiskStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StoragePDiskStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoragePDiskStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoragePDiskStatus(StoragePDiskStatus other) : this() {
      id_ = other.id_;
      overall_ = other.overall_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoragePDiskStatus Clone() {
      return new StoragePDiskStatus(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "overall" field.</summary>
    public const int OverallFieldNumber = 2;
    private global::Ydb.Monitoring.StatusFlag.Types.Status overall_ = global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.StatusFlag.Types.Status Overall {
      get { return overall_; }
      set {
        overall_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StoragePDiskStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StoragePDiskStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Overall != other.Overall) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) hash ^= Overall.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Overall);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Overall);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Overall);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StoragePDiskStatus other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        Overall = other.Overall;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StorageVDiskStatus : pb::IMessage<StorageVDiskStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StorageVDiskStatus> _parser = new pb::MessageParser<StorageVDiskStatus>(() => new StorageVDiskStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StorageVDiskStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageVDiskStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageVDiskStatus(StorageVDiskStatus other) : this() {
      id_ = other.id_;
      overall_ = other.overall_;
      vdiskStatus_ = other.vdiskStatus_;
      pdisk_ = other.pdisk_ != null ? other.pdisk_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageVDiskStatus Clone() {
      return new StorageVDiskStatus(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "overall" field.</summary>
    public const int OverallFieldNumber = 2;
    private global::Ydb.Monitoring.StatusFlag.Types.Status overall_ = global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.StatusFlag.Types.Status Overall {
      get { return overall_; }
      set {
        overall_ = value;
      }
    }

    /// <summary>Field number for the "vdisk_status" field.</summary>
    public const int VdiskStatusFieldNumber = 3;
    private global::Ydb.Monitoring.StatusFlag.Types.Status vdiskStatus_ = global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.StatusFlag.Types.Status VdiskStatus {
      get { return vdiskStatus_; }
      set {
        vdiskStatus_ = value;
      }
    }

    /// <summary>Field number for the "pdisk" field.</summary>
    public const int PdiskFieldNumber = 4;
    private global::Ydb.Monitoring.StoragePDiskStatus pdisk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.StoragePDiskStatus Pdisk {
      get { return pdisk_; }
      set {
        pdisk_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StorageVDiskStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StorageVDiskStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Overall != other.Overall) return false;
      if (VdiskStatus != other.VdiskStatus) return false;
      if (!object.Equals(Pdisk, other.Pdisk)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) hash ^= Overall.GetHashCode();
      if (VdiskStatus != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) hash ^= VdiskStatus.GetHashCode();
      if (pdisk_ != null) hash ^= Pdisk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Overall);
      }
      if (VdiskStatus != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) VdiskStatus);
      }
      if (pdisk_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Pdisk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Overall);
      }
      if (VdiskStatus != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) VdiskStatus);
      }
      if (pdisk_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Pdisk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Overall);
      }
      if (VdiskStatus != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VdiskStatus);
      }
      if (pdisk_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pdisk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StorageVDiskStatus other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        Overall = other.Overall;
      }
      if (other.VdiskStatus != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        VdiskStatus = other.VdiskStatus;
      }
      if (other.pdisk_ != null) {
        if (pdisk_ == null) {
          Pdisk = new global::Ydb.Monitoring.StoragePDiskStatus();
        }
        Pdisk.MergeFrom(other.Pdisk);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 24: {
            VdiskStatus = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 34: {
            if (pdisk_ == null) {
              Pdisk = new global::Ydb.Monitoring.StoragePDiskStatus();
            }
            input.ReadMessage(Pdisk);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 24: {
            VdiskStatus = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 34: {
            if (pdisk_ == null) {
              Pdisk = new global::Ydb.Monitoring.StoragePDiskStatus();
            }
            input.ReadMessage(Pdisk);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StorageGroupStatus : pb::IMessage<StorageGroupStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StorageGroupStatus> _parser = new pb::MessageParser<StorageGroupStatus>(() => new StorageGroupStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StorageGroupStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageGroupStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageGroupStatus(StorageGroupStatus other) : this() {
      id_ = other.id_;
      overall_ = other.overall_;
      vdisks_ = other.vdisks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageGroupStatus Clone() {
      return new StorageGroupStatus(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "overall" field.</summary>
    public const int OverallFieldNumber = 2;
    private global::Ydb.Monitoring.StatusFlag.Types.Status overall_ = global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.StatusFlag.Types.Status Overall {
      get { return overall_; }
      set {
        overall_ = value;
      }
    }

    /// <summary>Field number for the "vdisks" field.</summary>
    public const int VdisksFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Ydb.Monitoring.StorageVDiskStatus> _repeated_vdisks_codec
        = pb::FieldCodec.ForMessage(26, global::Ydb.Monitoring.StorageVDiskStatus.Parser);
    private readonly pbc::RepeatedField<global::Ydb.Monitoring.StorageVDiskStatus> vdisks_ = new pbc::RepeatedField<global::Ydb.Monitoring.StorageVDiskStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.Monitoring.StorageVDiskStatus> Vdisks {
      get { return vdisks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StorageGroupStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StorageGroupStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Overall != other.Overall) return false;
      if(!vdisks_.Equals(other.vdisks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) hash ^= Overall.GetHashCode();
      hash ^= vdisks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Overall);
      }
      vdisks_.WriteTo(output, _repeated_vdisks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Overall);
      }
      vdisks_.WriteTo(ref output, _repeated_vdisks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Overall);
      }
      size += vdisks_.CalculateSize(_repeated_vdisks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StorageGroupStatus other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        Overall = other.Overall;
      }
      vdisks_.Add(other.vdisks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 26: {
            vdisks_.AddEntriesFrom(input, _repeated_vdisks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 26: {
            vdisks_.AddEntriesFrom(ref input, _repeated_vdisks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StoragePoolStatus : pb::IMessage<StoragePoolStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StoragePoolStatus> _parser = new pb::MessageParser<StoragePoolStatus>(() => new StoragePoolStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StoragePoolStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoragePoolStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoragePoolStatus(StoragePoolStatus other) : this() {
      id_ = other.id_;
      overall_ = other.overall_;
      groups_ = other.groups_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoragePoolStatus Clone() {
      return new StoragePoolStatus(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "overall" field.</summary>
    public const int OverallFieldNumber = 2;
    private global::Ydb.Monitoring.StatusFlag.Types.Status overall_ = global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.StatusFlag.Types.Status Overall {
      get { return overall_; }
      set {
        overall_ = value;
      }
    }

    /// <summary>Field number for the "groups" field.</summary>
    public const int GroupsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Ydb.Monitoring.StorageGroupStatus> _repeated_groups_codec
        = pb::FieldCodec.ForMessage(26, global::Ydb.Monitoring.StorageGroupStatus.Parser);
    private readonly pbc::RepeatedField<global::Ydb.Monitoring.StorageGroupStatus> groups_ = new pbc::RepeatedField<global::Ydb.Monitoring.StorageGroupStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.Monitoring.StorageGroupStatus> Groups {
      get { return groups_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StoragePoolStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StoragePoolStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Overall != other.Overall) return false;
      if(!groups_.Equals(other.groups_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) hash ^= Overall.GetHashCode();
      hash ^= groups_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Overall);
      }
      groups_.WriteTo(output, _repeated_groups_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Overall);
      }
      groups_.WriteTo(ref output, _repeated_groups_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Overall);
      }
      size += groups_.CalculateSize(_repeated_groups_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StoragePoolStatus other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        Overall = other.Overall;
      }
      groups_.Add(other.groups_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 26: {
            groups_.AddEntriesFrom(input, _repeated_groups_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 26: {
            groups_.AddEntriesFrom(ref input, _repeated_groups_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StorageStatus : pb::IMessage<StorageStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StorageStatus> _parser = new pb::MessageParser<StorageStatus>(() => new StorageStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StorageStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageStatus(StorageStatus other) : this() {
      overall_ = other.overall_;
      pools_ = other.pools_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageStatus Clone() {
      return new StorageStatus(this);
    }

    /// <summary>Field number for the "overall" field.</summary>
    public const int OverallFieldNumber = 1;
    private global::Ydb.Monitoring.StatusFlag.Types.Status overall_ = global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.StatusFlag.Types.Status Overall {
      get { return overall_; }
      set {
        overall_ = value;
      }
    }

    /// <summary>Field number for the "pools" field.</summary>
    public const int PoolsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Ydb.Monitoring.StoragePoolStatus> _repeated_pools_codec
        = pb::FieldCodec.ForMessage(18, global::Ydb.Monitoring.StoragePoolStatus.Parser);
    private readonly pbc::RepeatedField<global::Ydb.Monitoring.StoragePoolStatus> pools_ = new pbc::RepeatedField<global::Ydb.Monitoring.StoragePoolStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.Monitoring.StoragePoolStatus> Pools {
      get { return pools_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StorageStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StorageStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Overall != other.Overall) return false;
      if(!pools_.Equals(other.pools_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) hash ^= Overall.GetHashCode();
      hash ^= pools_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Overall);
      }
      pools_.WriteTo(output, _repeated_pools_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Overall);
      }
      pools_.WriteTo(ref output, _repeated_pools_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Overall);
      }
      size += pools_.CalculateSize(_repeated_pools_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StorageStatus other) {
      if (other == null) {
        return;
      }
      if (other.Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        Overall = other.Overall;
      }
      pools_.Add(other.pools_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 18: {
            pools_.AddEntriesFrom(input, _repeated_pools_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 18: {
            pools_.AddEntriesFrom(ref input, _repeated_pools_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Describes the state of a tablet group.
  /// </summary>
  public sealed partial class ComputeTabletStatus : pb::IMessage<ComputeTabletStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComputeTabletStatus> _parser = new pb::MessageParser<ComputeTabletStatus>(() => new ComputeTabletStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComputeTabletStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeTabletStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeTabletStatus(ComputeTabletStatus other) : this() {
      overall_ = other.overall_;
      type_ = other.type_;
      state_ = other.state_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeTabletStatus Clone() {
      return new ComputeTabletStatus(this);
    }

    /// <summary>Field number for the "overall" field.</summary>
    public const int OverallFieldNumber = 1;
    private global::Ydb.Monitoring.StatusFlag.Types.Status overall_ = global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.StatusFlag.Types.Status Overall {
      get { return overall_; }
      set {
        overall_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private string state_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string State {
      get { return state_; }
      set {
        state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 4;
    private uint count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComputeTabletStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComputeTabletStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Overall != other.Overall) return false;
      if (Type != other.Type) return false;
      if (State != other.State) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) hash ^= Overall.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (State.Length != 0) hash ^= State.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Overall);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (State.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(State);
      }
      if (Count != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Overall);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (State.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(State);
      }
      if (Count != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Overall);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (State.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComputeTabletStatus other) {
      if (other == null) {
        return;
      }
      if (other.Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        Overall = other.Overall;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.State.Length != 0) {
        State = other.State;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26: {
            State = input.ReadString();
            break;
          }
          case 32: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26: {
            State = input.ReadString();
            break;
          }
          case 32: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ThreadPoolStatus : pb::IMessage<ThreadPoolStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ThreadPoolStatus> _parser = new pb::MessageParser<ThreadPoolStatus>(() => new ThreadPoolStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ThreadPoolStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThreadPoolStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThreadPoolStatus(ThreadPoolStatus other) : this() {
      overall_ = other.overall_;
      name_ = other.name_;
      usage_ = other.usage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThreadPoolStatus Clone() {
      return new ThreadPoolStatus(this);
    }

    /// <summary>Field number for the "overall" field.</summary>
    public const int OverallFieldNumber = 1;
    private global::Ydb.Monitoring.StatusFlag.Types.Status overall_ = global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.StatusFlag.Types.Status Overall {
      get { return overall_; }
      set {
        overall_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "usage" field.</summary>
    public const int UsageFieldNumber = 3;
    private float usage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Usage {
      get { return usage_; }
      set {
        usage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ThreadPoolStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ThreadPoolStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Overall != other.Overall) return false;
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Usage, other.Usage)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) hash ^= Overall.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Usage != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Usage);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Overall);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Usage != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Usage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Overall);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Usage != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Usage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Overall);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Usage != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ThreadPoolStatus other) {
      if (other == null) {
        return;
      }
      if (other.Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        Overall = other.Overall;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Usage != 0F) {
        Usage = other.Usage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 29: {
            Usage = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 29: {
            Usage = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoadAverageStatus : pb::IMessage<LoadAverageStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadAverageStatus> _parser = new pb::MessageParser<LoadAverageStatus>(() => new LoadAverageStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadAverageStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadAverageStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadAverageStatus(LoadAverageStatus other) : this() {
      overall_ = other.overall_;
      load_ = other.load_;
      cores_ = other.cores_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadAverageStatus Clone() {
      return new LoadAverageStatus(this);
    }

    /// <summary>Field number for the "overall" field.</summary>
    public const int OverallFieldNumber = 1;
    private global::Ydb.Monitoring.StatusFlag.Types.Status overall_ = global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.StatusFlag.Types.Status Overall {
      get { return overall_; }
      set {
        overall_ = value;
      }
    }

    /// <summary>Field number for the "load" field.</summary>
    public const int LoadFieldNumber = 2;
    private float load_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Load {
      get { return load_; }
      set {
        load_ = value;
      }
    }

    /// <summary>Field number for the "cores" field.</summary>
    public const int CoresFieldNumber = 3;
    private uint cores_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Cores {
      get { return cores_; }
      set {
        cores_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadAverageStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadAverageStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Overall != other.Overall) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Load, other.Load)) return false;
      if (Cores != other.Cores) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) hash ^= Overall.GetHashCode();
      if (Load != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Load);
      if (Cores != 0) hash ^= Cores.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Overall);
      }
      if (Load != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Load);
      }
      if (Cores != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Cores);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Overall);
      }
      if (Load != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Load);
      }
      if (Cores != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Cores);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Overall);
      }
      if (Load != 0F) {
        size += 1 + 4;
      }
      if (Cores != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Cores);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadAverageStatus other) {
      if (other == null) {
        return;
      }
      if (other.Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        Overall = other.Overall;
      }
      if (other.Load != 0F) {
        Load = other.Load;
      }
      if (other.Cores != 0) {
        Cores = other.Cores;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 21: {
            Load = input.ReadFloat();
            break;
          }
          case 24: {
            Cores = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 21: {
            Load = input.ReadFloat();
            break;
          }
          case 24: {
            Cores = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComputeNodeStatus : pb::IMessage<ComputeNodeStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComputeNodeStatus> _parser = new pb::MessageParser<ComputeNodeStatus>(() => new ComputeNodeStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComputeNodeStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeNodeStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeNodeStatus(ComputeNodeStatus other) : this() {
      id_ = other.id_;
      overall_ = other.overall_;
      tablets_ = other.tablets_.Clone();
      pools_ = other.pools_.Clone();
      load_ = other.load_ != null ? other.load_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeNodeStatus Clone() {
      return new ComputeNodeStatus(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "overall" field.</summary>
    public const int OverallFieldNumber = 2;
    private global::Ydb.Monitoring.StatusFlag.Types.Status overall_ = global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.StatusFlag.Types.Status Overall {
      get { return overall_; }
      set {
        overall_ = value;
      }
    }

    /// <summary>Field number for the "tablets" field.</summary>
    public const int TabletsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Ydb.Monitoring.ComputeTabletStatus> _repeated_tablets_codec
        = pb::FieldCodec.ForMessage(26, global::Ydb.Monitoring.ComputeTabletStatus.Parser);
    private readonly pbc::RepeatedField<global::Ydb.Monitoring.ComputeTabletStatus> tablets_ = new pbc::RepeatedField<global::Ydb.Monitoring.ComputeTabletStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.Monitoring.ComputeTabletStatus> Tablets {
      get { return tablets_; }
    }

    /// <summary>Field number for the "pools" field.</summary>
    public const int PoolsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Ydb.Monitoring.ThreadPoolStatus> _repeated_pools_codec
        = pb::FieldCodec.ForMessage(34, global::Ydb.Monitoring.ThreadPoolStatus.Parser);
    private readonly pbc::RepeatedField<global::Ydb.Monitoring.ThreadPoolStatus> pools_ = new pbc::RepeatedField<global::Ydb.Monitoring.ThreadPoolStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.Monitoring.ThreadPoolStatus> Pools {
      get { return pools_; }
    }

    /// <summary>Field number for the "load" field.</summary>
    public const int LoadFieldNumber = 5;
    private global::Ydb.Monitoring.LoadAverageStatus load_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.LoadAverageStatus Load {
      get { return load_; }
      set {
        load_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComputeNodeStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComputeNodeStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Overall != other.Overall) return false;
      if(!tablets_.Equals(other.tablets_)) return false;
      if(!pools_.Equals(other.pools_)) return false;
      if (!object.Equals(Load, other.Load)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) hash ^= Overall.GetHashCode();
      hash ^= tablets_.GetHashCode();
      hash ^= pools_.GetHashCode();
      if (load_ != null) hash ^= Load.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Overall);
      }
      tablets_.WriteTo(output, _repeated_tablets_codec);
      pools_.WriteTo(output, _repeated_pools_codec);
      if (load_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Load);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Overall);
      }
      tablets_.WriteTo(ref output, _repeated_tablets_codec);
      pools_.WriteTo(ref output, _repeated_pools_codec);
      if (load_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Load);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Overall);
      }
      size += tablets_.CalculateSize(_repeated_tablets_codec);
      size += pools_.CalculateSize(_repeated_pools_codec);
      if (load_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Load);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComputeNodeStatus other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        Overall = other.Overall;
      }
      tablets_.Add(other.tablets_);
      pools_.Add(other.pools_);
      if (other.load_ != null) {
        if (load_ == null) {
          Load = new global::Ydb.Monitoring.LoadAverageStatus();
        }
        Load.MergeFrom(other.Load);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 26: {
            tablets_.AddEntriesFrom(input, _repeated_tablets_codec);
            break;
          }
          case 34: {
            pools_.AddEntriesFrom(input, _repeated_pools_codec);
            break;
          }
          case 42: {
            if (load_ == null) {
              Load = new global::Ydb.Monitoring.LoadAverageStatus();
            }
            input.ReadMessage(Load);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 26: {
            tablets_.AddEntriesFrom(ref input, _repeated_tablets_codec);
            break;
          }
          case 34: {
            pools_.AddEntriesFrom(ref input, _repeated_pools_codec);
            break;
          }
          case 42: {
            if (load_ == null) {
              Load = new global::Ydb.Monitoring.LoadAverageStatus();
            }
            input.ReadMessage(Load);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComputeStatus : pb::IMessage<ComputeStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComputeStatus> _parser = new pb::MessageParser<ComputeStatus>(() => new ComputeStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComputeStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeStatus(ComputeStatus other) : this() {
      overall_ = other.overall_;
      nodes_ = other.nodes_.Clone();
      tablets_ = other.tablets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeStatus Clone() {
      return new ComputeStatus(this);
    }

    /// <summary>Field number for the "overall" field.</summary>
    public const int OverallFieldNumber = 1;
    private global::Ydb.Monitoring.StatusFlag.Types.Status overall_ = global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.StatusFlag.Types.Status Overall {
      get { return overall_; }
      set {
        overall_ = value;
      }
    }

    /// <summary>Field number for the "nodes" field.</summary>
    public const int NodesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Ydb.Monitoring.ComputeNodeStatus> _repeated_nodes_codec
        = pb::FieldCodec.ForMessage(18, global::Ydb.Monitoring.ComputeNodeStatus.Parser);
    private readonly pbc::RepeatedField<global::Ydb.Monitoring.ComputeNodeStatus> nodes_ = new pbc::RepeatedField<global::Ydb.Monitoring.ComputeNodeStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.Monitoring.ComputeNodeStatus> Nodes {
      get { return nodes_; }
    }

    /// <summary>Field number for the "tablets" field.</summary>
    public const int TabletsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Ydb.Monitoring.ComputeTabletStatus> _repeated_tablets_codec
        = pb::FieldCodec.ForMessage(26, global::Ydb.Monitoring.ComputeTabletStatus.Parser);
    private readonly pbc::RepeatedField<global::Ydb.Monitoring.ComputeTabletStatus> tablets_ = new pbc::RepeatedField<global::Ydb.Monitoring.ComputeTabletStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.Monitoring.ComputeTabletStatus> Tablets {
      get { return tablets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComputeStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComputeStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Overall != other.Overall) return false;
      if(!nodes_.Equals(other.nodes_)) return false;
      if(!tablets_.Equals(other.tablets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) hash ^= Overall.GetHashCode();
      hash ^= nodes_.GetHashCode();
      hash ^= tablets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Overall);
      }
      nodes_.WriteTo(output, _repeated_nodes_codec);
      tablets_.WriteTo(output, _repeated_tablets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Overall);
      }
      nodes_.WriteTo(ref output, _repeated_nodes_codec);
      tablets_.WriteTo(ref output, _repeated_tablets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Overall);
      }
      size += nodes_.CalculateSize(_repeated_nodes_codec);
      size += tablets_.CalculateSize(_repeated_tablets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComputeStatus other) {
      if (other == null) {
        return;
      }
      if (other.Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        Overall = other.Overall;
      }
      nodes_.Add(other.nodes_);
      tablets_.Add(other.tablets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 18: {
            nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
            break;
          }
          case 26: {
            tablets_.AddEntriesFrom(input, _repeated_tablets_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 18: {
            nodes_.AddEntriesFrom(ref input, _repeated_nodes_codec);
            break;
          }
          case 26: {
            tablets_.AddEntriesFrom(ref input, _repeated_tablets_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LocationNode : pb::IMessage<LocationNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocationNode> _parser = new pb::MessageParser<LocationNode>(() => new LocationNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationNode(LocationNode other) : this() {
      id_ = other.id_;
      host_ = other.host_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationNode Clone() {
      return new LocationNode(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 2;
    private string host_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 3;
    private uint port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Host.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Host);
      }
      if (Port != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Host.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Host);
      }
      if (Port != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationNode other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Host = input.ReadString();
            break;
          }
          case 24: {
            Port = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Host = input.ReadString();
            break;
          }
          case 24: {
            Port = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LocationStoragePDisk : pb::IMessage<LocationStoragePDisk>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocationStoragePDisk> _parser = new pb::MessageParser<LocationStoragePDisk>(() => new LocationStoragePDisk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationStoragePDisk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationStoragePDisk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationStoragePDisk(LocationStoragePDisk other) : this() {
      id_ = other.id_;
      path_ = other.path_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationStoragePDisk Clone() {
      return new LocationStoragePDisk(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationStoragePDisk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationStoragePDisk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Path != other.Path) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationStoragePDisk other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LocationStorageVDisk : pb::IMessage<LocationStorageVDisk>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocationStorageVDisk> _parser = new pb::MessageParser<LocationStorageVDisk>(() => new LocationStorageVDisk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationStorageVDisk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationStorageVDisk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationStorageVDisk(LocationStorageVDisk other) : this() {
      id_ = other.id_;
      pdisk_ = other.pdisk_ != null ? other.pdisk_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationStorageVDisk Clone() {
      return new LocationStorageVDisk(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pdisk" field.</summary>
    public const int PdiskFieldNumber = 2;
    private global::Ydb.Monitoring.LocationStoragePDisk pdisk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.LocationStoragePDisk Pdisk {
      get { return pdisk_; }
      set {
        pdisk_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationStorageVDisk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationStorageVDisk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Pdisk, other.Pdisk)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (pdisk_ != null) hash ^= Pdisk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (pdisk_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pdisk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (pdisk_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pdisk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (pdisk_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pdisk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationStorageVDisk other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.pdisk_ != null) {
        if (pdisk_ == null) {
          Pdisk = new global::Ydb.Monitoring.LocationStoragePDisk();
        }
        Pdisk.MergeFrom(other.Pdisk);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (pdisk_ == null) {
              Pdisk = new global::Ydb.Monitoring.LocationStoragePDisk();
            }
            input.ReadMessage(Pdisk);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (pdisk_ == null) {
              Pdisk = new global::Ydb.Monitoring.LocationStoragePDisk();
            }
            input.ReadMessage(Pdisk);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LocationStorageGroup : pb::IMessage<LocationStorageGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocationStorageGroup> _parser = new pb::MessageParser<LocationStorageGroup>(() => new LocationStorageGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationStorageGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationStorageGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationStorageGroup(LocationStorageGroup other) : this() {
      id_ = other.id_;
      vdisk_ = other.vdisk_ != null ? other.vdisk_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationStorageGroup Clone() {
      return new LocationStorageGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vdisk" field.</summary>
    public const int VdiskFieldNumber = 2;
    private global::Ydb.Monitoring.LocationStorageVDisk vdisk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.LocationStorageVDisk Vdisk {
      get { return vdisk_; }
      set {
        vdisk_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationStorageGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationStorageGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Vdisk, other.Vdisk)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (vdisk_ != null) hash ^= Vdisk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (vdisk_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Vdisk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (vdisk_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Vdisk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (vdisk_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Vdisk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationStorageGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.vdisk_ != null) {
        if (vdisk_ == null) {
          Vdisk = new global::Ydb.Monitoring.LocationStorageVDisk();
        }
        Vdisk.MergeFrom(other.Vdisk);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (vdisk_ == null) {
              Vdisk = new global::Ydb.Monitoring.LocationStorageVDisk();
            }
            input.ReadMessage(Vdisk);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (vdisk_ == null) {
              Vdisk = new global::Ydb.Monitoring.LocationStorageVDisk();
            }
            input.ReadMessage(Vdisk);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LocationStoragePool : pb::IMessage<LocationStoragePool>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocationStoragePool> _parser = new pb::MessageParser<LocationStoragePool>(() => new LocationStoragePool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationStoragePool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationStoragePool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationStoragePool(LocationStoragePool other) : this() {
      name_ = other.name_;
      group_ = other.group_ != null ? other.group_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationStoragePool Clone() {
      return new LocationStoragePool(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "group" field.</summary>
    public const int GroupFieldNumber = 2;
    private global::Ydb.Monitoring.LocationStorageGroup group_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.LocationStorageGroup Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationStoragePool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationStoragePool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Group, other.Group)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (group_ != null) hash ^= Group.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (group_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Group);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (group_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Group);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (group_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Group);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationStoragePool other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.group_ != null) {
        if (group_ == null) {
          Group = new global::Ydb.Monitoring.LocationStorageGroup();
        }
        Group.MergeFrom(other.Group);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (group_ == null) {
              Group = new global::Ydb.Monitoring.LocationStorageGroup();
            }
            input.ReadMessage(Group);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (group_ == null) {
              Group = new global::Ydb.Monitoring.LocationStorageGroup();
            }
            input.ReadMessage(Group);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LocationStorage : pb::IMessage<LocationStorage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocationStorage> _parser = new pb::MessageParser<LocationStorage>(() => new LocationStorage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationStorage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationStorage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationStorage(LocationStorage other) : this() {
      node_ = other.node_ != null ? other.node_.Clone() : null;
      pool_ = other.pool_ != null ? other.pool_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationStorage Clone() {
      return new LocationStorage(this);
    }

    /// <summary>Field number for the "node" field.</summary>
    public const int NodeFieldNumber = 1;
    private global::Ydb.Monitoring.LocationNode node_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.LocationNode Node {
      get { return node_; }
      set {
        node_ = value;
      }
    }

    /// <summary>Field number for the "pool" field.</summary>
    public const int PoolFieldNumber = 2;
    private global::Ydb.Monitoring.LocationStoragePool pool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.LocationStoragePool Pool {
      get { return pool_; }
      set {
        pool_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationStorage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationStorage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Node, other.Node)) return false;
      if (!object.Equals(Pool, other.Pool)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (node_ != null) hash ^= Node.GetHashCode();
      if (pool_ != null) hash ^= Pool.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (node_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Node);
      }
      if (pool_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (node_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Node);
      }
      if (pool_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (node_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Node);
      }
      if (pool_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pool);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationStorage other) {
      if (other == null) {
        return;
      }
      if (other.node_ != null) {
        if (node_ == null) {
          Node = new global::Ydb.Monitoring.LocationNode();
        }
        Node.MergeFrom(other.Node);
      }
      if (other.pool_ != null) {
        if (pool_ == null) {
          Pool = new global::Ydb.Monitoring.LocationStoragePool();
        }
        Pool.MergeFrom(other.Pool);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (node_ == null) {
              Node = new global::Ydb.Monitoring.LocationNode();
            }
            input.ReadMessage(Node);
            break;
          }
          case 18: {
            if (pool_ == null) {
              Pool = new global::Ydb.Monitoring.LocationStoragePool();
            }
            input.ReadMessage(Pool);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (node_ == null) {
              Node = new global::Ydb.Monitoring.LocationNode();
            }
            input.ReadMessage(Node);
            break;
          }
          case 18: {
            if (pool_ == null) {
              Pool = new global::Ydb.Monitoring.LocationStoragePool();
            }
            input.ReadMessage(Pool);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LocationComputePool : pb::IMessage<LocationComputePool>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocationComputePool> _parser = new pb::MessageParser<LocationComputePool>(() => new LocationComputePool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationComputePool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationComputePool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationComputePool(LocationComputePool other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationComputePool Clone() {
      return new LocationComputePool(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationComputePool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationComputePool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationComputePool other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LocationComputeTablet : pb::IMessage<LocationComputeTablet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocationComputeTablet> _parser = new pb::MessageParser<LocationComputeTablet>(() => new LocationComputeTablet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationComputeTablet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationComputeTablet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationComputeTablet(LocationComputeTablet other) : this() {
      type_ = other.type_;
      id_ = other.id_.Clone();
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationComputeTablet Clone() {
      return new LocationComputeTablet(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_id_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> id_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Id {
      get { return id_; }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 3;
    private uint count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationComputeTablet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationComputeTablet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!id_.Equals(other.id_)) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      hash ^= id_.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      id_.WriteTo(output, _repeated_id_codec);
      if (Count != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      id_.WriteTo(ref output, _repeated_id_codec);
      if (Count != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      size += id_.CalculateSize(_repeated_id_codec);
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationComputeTablet other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      id_.Add(other.id_);
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            id_.AddEntriesFrom(input, _repeated_id_codec);
            break;
          }
          case 24: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            id_.AddEntriesFrom(ref input, _repeated_id_codec);
            break;
          }
          case 24: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LocationCompute : pb::IMessage<LocationCompute>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocationCompute> _parser = new pb::MessageParser<LocationCompute>(() => new LocationCompute());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationCompute> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationCompute() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationCompute(LocationCompute other) : this() {
      node_ = other.node_ != null ? other.node_.Clone() : null;
      pool_ = other.pool_ != null ? other.pool_.Clone() : null;
      tablet_ = other.tablet_ != null ? other.tablet_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationCompute Clone() {
      return new LocationCompute(this);
    }

    /// <summary>Field number for the "node" field.</summary>
    public const int NodeFieldNumber = 1;
    private global::Ydb.Monitoring.LocationNode node_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.LocationNode Node {
      get { return node_; }
      set {
        node_ = value;
      }
    }

    /// <summary>Field number for the "pool" field.</summary>
    public const int PoolFieldNumber = 2;
    private global::Ydb.Monitoring.LocationComputePool pool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.LocationComputePool Pool {
      get { return pool_; }
      set {
        pool_ = value;
      }
    }

    /// <summary>Field number for the "tablet" field.</summary>
    public const int TabletFieldNumber = 3;
    private global::Ydb.Monitoring.LocationComputeTablet tablet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.LocationComputeTablet Tablet {
      get { return tablet_; }
      set {
        tablet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationCompute);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationCompute other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Node, other.Node)) return false;
      if (!object.Equals(Pool, other.Pool)) return false;
      if (!object.Equals(Tablet, other.Tablet)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (node_ != null) hash ^= Node.GetHashCode();
      if (pool_ != null) hash ^= Pool.GetHashCode();
      if (tablet_ != null) hash ^= Tablet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (node_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Node);
      }
      if (pool_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pool);
      }
      if (tablet_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Tablet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (node_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Node);
      }
      if (pool_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pool);
      }
      if (tablet_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Tablet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (node_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Node);
      }
      if (pool_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pool);
      }
      if (tablet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tablet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationCompute other) {
      if (other == null) {
        return;
      }
      if (other.node_ != null) {
        if (node_ == null) {
          Node = new global::Ydb.Monitoring.LocationNode();
        }
        Node.MergeFrom(other.Node);
      }
      if (other.pool_ != null) {
        if (pool_ == null) {
          Pool = new global::Ydb.Monitoring.LocationComputePool();
        }
        Pool.MergeFrom(other.Pool);
      }
      if (other.tablet_ != null) {
        if (tablet_ == null) {
          Tablet = new global::Ydb.Monitoring.LocationComputeTablet();
        }
        Tablet.MergeFrom(other.Tablet);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (node_ == null) {
              Node = new global::Ydb.Monitoring.LocationNode();
            }
            input.ReadMessage(Node);
            break;
          }
          case 18: {
            if (pool_ == null) {
              Pool = new global::Ydb.Monitoring.LocationComputePool();
            }
            input.ReadMessage(Pool);
            break;
          }
          case 26: {
            if (tablet_ == null) {
              Tablet = new global::Ydb.Monitoring.LocationComputeTablet();
            }
            input.ReadMessage(Tablet);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (node_ == null) {
              Node = new global::Ydb.Monitoring.LocationNode();
            }
            input.ReadMessage(Node);
            break;
          }
          case 18: {
            if (pool_ == null) {
              Pool = new global::Ydb.Monitoring.LocationComputePool();
            }
            input.ReadMessage(Pool);
            break;
          }
          case 26: {
            if (tablet_ == null) {
              Tablet = new global::Ydb.Monitoring.LocationComputeTablet();
            }
            input.ReadMessage(Tablet);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LocationDatabase : pb::IMessage<LocationDatabase>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocationDatabase> _parser = new pb::MessageParser<LocationDatabase>(() => new LocationDatabase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationDatabase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationDatabase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationDatabase(LocationDatabase other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationDatabase Clone() {
      return new LocationDatabase(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationDatabase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationDatabase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationDatabase other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Location : pb::IMessage<Location>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Location> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location(Location other) : this() {
      storage_ = other.storage_ != null ? other.storage_.Clone() : null;
      compute_ = other.compute_ != null ? other.compute_.Clone() : null;
      database_ = other.database_ != null ? other.database_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location Clone() {
      return new Location(this);
    }

    /// <summary>Field number for the "storage" field.</summary>
    public const int StorageFieldNumber = 1;
    private global::Ydb.Monitoring.LocationStorage storage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.LocationStorage Storage {
      get { return storage_; }
      set {
        storage_ = value;
      }
    }

    /// <summary>Field number for the "compute" field.</summary>
    public const int ComputeFieldNumber = 2;
    private global::Ydb.Monitoring.LocationCompute compute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.LocationCompute Compute {
      get { return compute_; }
      set {
        compute_ = value;
      }
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 3;
    private global::Ydb.Monitoring.LocationDatabase database_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.LocationDatabase Database {
      get { return database_; }
      set {
        database_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Location);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Location other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Storage, other.Storage)) return false;
      if (!object.Equals(Compute, other.Compute)) return false;
      if (!object.Equals(Database, other.Database)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (storage_ != null) hash ^= Storage.GetHashCode();
      if (compute_ != null) hash ^= Compute.GetHashCode();
      if (database_ != null) hash ^= Database.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (storage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Storage);
      }
      if (compute_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Compute);
      }
      if (database_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Database);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (storage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Storage);
      }
      if (compute_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Compute);
      }
      if (database_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Database);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (storage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Storage);
      }
      if (compute_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Compute);
      }
      if (database_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Database);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Location other) {
      if (other == null) {
        return;
      }
      if (other.storage_ != null) {
        if (storage_ == null) {
          Storage = new global::Ydb.Monitoring.LocationStorage();
        }
        Storage.MergeFrom(other.Storage);
      }
      if (other.compute_ != null) {
        if (compute_ == null) {
          Compute = new global::Ydb.Monitoring.LocationCompute();
        }
        Compute.MergeFrom(other.Compute);
      }
      if (other.database_ != null) {
        if (database_ == null) {
          Database = new global::Ydb.Monitoring.LocationDatabase();
        }
        Database.MergeFrom(other.Database);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (storage_ == null) {
              Storage = new global::Ydb.Monitoring.LocationStorage();
            }
            input.ReadMessage(Storage);
            break;
          }
          case 18: {
            if (compute_ == null) {
              Compute = new global::Ydb.Monitoring.LocationCompute();
            }
            input.ReadMessage(Compute);
            break;
          }
          case 26: {
            if (database_ == null) {
              Database = new global::Ydb.Monitoring.LocationDatabase();
            }
            input.ReadMessage(Database);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (storage_ == null) {
              Storage = new global::Ydb.Monitoring.LocationStorage();
            }
            input.ReadMessage(Storage);
            break;
          }
          case 18: {
            if (compute_ == null) {
              Compute = new global::Ydb.Monitoring.LocationCompute();
            }
            input.ReadMessage(Compute);
            break;
          }
          case 26: {
            if (database_ == null) {
              Database = new global::Ydb.Monitoring.LocationDatabase();
            }
            input.ReadMessage(Database);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IssueLog : pb::IMessage<IssueLog>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IssueLog> _parser = new pb::MessageParser<IssueLog>(() => new IssueLog());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IssueLog> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IssueLog() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IssueLog(IssueLog other) : this() {
      id_ = other.id_;
      status_ = other.status_;
      message_ = other.message_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      reason_ = other.reason_.Clone();
      type_ = other.type_;
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IssueLog Clone() {
      return new IssueLog(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Ydb.Monitoring.StatusFlag.Types.Status status_ = global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.StatusFlag.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 4;
    private global::Ydb.Monitoring.Location location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.Location Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_reason_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> reason_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Reason {
      get { return reason_; }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 6;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 7;
    private uint level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IssueLog);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IssueLog other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if(!reason_.Equals(other.reason_)) return false;
      if (Type != other.Type) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Status != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      hash ^= reason_.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Status != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (location_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Location);
      }
      reason_.WriteTo(output, _repeated_reason_codec);
      if (Type.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Type);
      }
      if (Level != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Status != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (location_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Location);
      }
      reason_.WriteTo(ref output, _repeated_reason_codec);
      if (Type.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Type);
      }
      if (Level != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Status != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      size += reason_.CalculateSize(_repeated_reason_codec);
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IssueLog other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Status != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::Ydb.Monitoring.Location();
        }
        Location.MergeFrom(other.Location);
      }
      reason_.Add(other.reason_);
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Status = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 34: {
            if (location_ == null) {
              Location = new global::Ydb.Monitoring.Location();
            }
            input.ReadMessage(Location);
            break;
          }
          case 42: {
            reason_.AddEntriesFrom(input, _repeated_reason_codec);
            break;
          }
          case 50: {
            Type = input.ReadString();
            break;
          }
          case 56: {
            Level = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Status = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 34: {
            if (location_ == null) {
              Location = new global::Ydb.Monitoring.Location();
            }
            input.ReadMessage(Location);
            break;
          }
          case 42: {
            reason_.AddEntriesFrom(ref input, _repeated_reason_codec);
            break;
          }
          case 50: {
            Type = input.ReadString();
            break;
          }
          case 56: {
            Level = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DatabaseStatus : pb::IMessage<DatabaseStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DatabaseStatus> _parser = new pb::MessageParser<DatabaseStatus>(() => new DatabaseStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatabaseStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabaseStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabaseStatus(DatabaseStatus other) : this() {
      name_ = other.name_;
      overall_ = other.overall_;
      storage_ = other.storage_ != null ? other.storage_.Clone() : null;
      compute_ = other.compute_ != null ? other.compute_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabaseStatus Clone() {
      return new DatabaseStatus(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "overall" field.</summary>
    public const int OverallFieldNumber = 2;
    private global::Ydb.Monitoring.StatusFlag.Types.Status overall_ = global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.StatusFlag.Types.Status Overall {
      get { return overall_; }
      set {
        overall_ = value;
      }
    }

    /// <summary>Field number for the "storage" field.</summary>
    public const int StorageFieldNumber = 3;
    private global::Ydb.Monitoring.StorageStatus storage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.StorageStatus Storage {
      get { return storage_; }
      set {
        storage_ = value;
      }
    }

    /// <summary>Field number for the "compute" field.</summary>
    public const int ComputeFieldNumber = 4;
    private global::Ydb.Monitoring.ComputeStatus compute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.ComputeStatus Compute {
      get { return compute_; }
      set {
        compute_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatabaseStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatabaseStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Overall != other.Overall) return false;
      if (!object.Equals(Storage, other.Storage)) return false;
      if (!object.Equals(Compute, other.Compute)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) hash ^= Overall.GetHashCode();
      if (storage_ != null) hash ^= Storage.GetHashCode();
      if (compute_ != null) hash ^= Compute.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Overall);
      }
      if (storage_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Storage);
      }
      if (compute_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Compute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Overall);
      }
      if (storage_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Storage);
      }
      if (compute_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Compute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Overall);
      }
      if (storage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Storage);
      }
      if (compute_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Compute);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatabaseStatus other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Overall != global::Ydb.Monitoring.StatusFlag.Types.Status.Unspecified) {
        Overall = other.Overall;
      }
      if (other.storage_ != null) {
        if (storage_ == null) {
          Storage = new global::Ydb.Monitoring.StorageStatus();
        }
        Storage.MergeFrom(other.Storage);
      }
      if (other.compute_ != null) {
        if (compute_ == null) {
          Compute = new global::Ydb.Monitoring.ComputeStatus();
        }
        Compute.MergeFrom(other.Compute);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 26: {
            if (storage_ == null) {
              Storage = new global::Ydb.Monitoring.StorageStatus();
            }
            input.ReadMessage(Storage);
            break;
          }
          case 34: {
            if (compute_ == null) {
              Compute = new global::Ydb.Monitoring.ComputeStatus();
            }
            input.ReadMessage(Compute);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Overall = (global::Ydb.Monitoring.StatusFlag.Types.Status) input.ReadEnum();
            break;
          }
          case 26: {
            if (storage_ == null) {
              Storage = new global::Ydb.Monitoring.StorageStatus();
            }
            input.ReadMessage(Storage);
            break;
          }
          case 34: {
            if (compute_ == null) {
              Compute = new global::Ydb.Monitoring.ComputeStatus();
            }
            input.ReadMessage(Compute);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SelfCheckResult : pb::IMessage<SelfCheckResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SelfCheckResult> _parser = new pb::MessageParser<SelfCheckResult>(() => new SelfCheckResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SelfCheckResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.Monitoring.YdbMonitoringReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfCheckResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfCheckResult(SelfCheckResult other) : this() {
      selfCheckResult_ = other.selfCheckResult_;
      issueLog_ = other.issueLog_.Clone();
      databaseStatus_ = other.databaseStatus_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelfCheckResult Clone() {
      return new SelfCheckResult(this);
    }

    /// <summary>Field number for the "self_check_result" field.</summary>
    public const int SelfCheckResult_FieldNumber = 1;
    private global::Ydb.Monitoring.SelfCheck.Types.Result selfCheckResult_ = global::Ydb.Monitoring.SelfCheck.Types.Result.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Monitoring.SelfCheck.Types.Result SelfCheckResult_ {
      get { return selfCheckResult_; }
      set {
        selfCheckResult_ = value;
      }
    }

    /// <summary>Field number for the "issue_log" field.</summary>
    public const int IssueLogFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Ydb.Monitoring.IssueLog> _repeated_issueLog_codec
        = pb::FieldCodec.ForMessage(18, global::Ydb.Monitoring.IssueLog.Parser);
    private readonly pbc::RepeatedField<global::Ydb.Monitoring.IssueLog> issueLog_ = new pbc::RepeatedField<global::Ydb.Monitoring.IssueLog>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.Monitoring.IssueLog> IssueLog {
      get { return issueLog_; }
    }

    /// <summary>Field number for the "database_status" field.</summary>
    public const int DatabaseStatusFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Ydb.Monitoring.DatabaseStatus> _repeated_databaseStatus_codec
        = pb::FieldCodec.ForMessage(26, global::Ydb.Monitoring.DatabaseStatus.Parser);
    private readonly pbc::RepeatedField<global::Ydb.Monitoring.DatabaseStatus> databaseStatus_ = new pbc::RepeatedField<global::Ydb.Monitoring.DatabaseStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.Monitoring.DatabaseStatus> DatabaseStatus {
      get { return databaseStatus_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SelfCheckResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SelfCheckResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SelfCheckResult_ != other.SelfCheckResult_) return false;
      if(!issueLog_.Equals(other.issueLog_)) return false;
      if(!databaseStatus_.Equals(other.databaseStatus_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SelfCheckResult_ != global::Ydb.Monitoring.SelfCheck.Types.Result.Unspecified) hash ^= SelfCheckResult_.GetHashCode();
      hash ^= issueLog_.GetHashCode();
      hash ^= databaseStatus_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SelfCheckResult_ != global::Ydb.Monitoring.SelfCheck.Types.Result.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SelfCheckResult_);
      }
      issueLog_.WriteTo(output, _repeated_issueLog_codec);
      databaseStatus_.WriteTo(output, _repeated_databaseStatus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SelfCheckResult_ != global::Ydb.Monitoring.SelfCheck.Types.Result.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SelfCheckResult_);
      }
      issueLog_.WriteTo(ref output, _repeated_issueLog_codec);
      databaseStatus_.WriteTo(ref output, _repeated_databaseStatus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SelfCheckResult_ != global::Ydb.Monitoring.SelfCheck.Types.Result.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SelfCheckResult_);
      }
      size += issueLog_.CalculateSize(_repeated_issueLog_codec);
      size += databaseStatus_.CalculateSize(_repeated_databaseStatus_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SelfCheckResult other) {
      if (other == null) {
        return;
      }
      if (other.SelfCheckResult_ != global::Ydb.Monitoring.SelfCheck.Types.Result.Unspecified) {
        SelfCheckResult_ = other.SelfCheckResult_;
      }
      issueLog_.Add(other.issueLog_);
      databaseStatus_.Add(other.databaseStatus_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SelfCheckResult_ = (global::Ydb.Monitoring.SelfCheck.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            issueLog_.AddEntriesFrom(input, _repeated_issueLog_codec);
            break;
          }
          case 26: {
            databaseStatus_.AddEntriesFrom(input, _repeated_databaseStatus_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SelfCheckResult_ = (global::Ydb.Monitoring.SelfCheck.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            issueLog_.AddEntriesFrom(ref input, _repeated_issueLog_codec);
            break;
          }
          case 26: {
            databaseStatus_.AddEntriesFrom(ref input, _repeated_databaseStatus_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
