// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Ydb/Scheme/V1/ydb_scheme_v1.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Ydb.Scheme.V1 {
  public static partial class SchemeService
  {
    static readonly string __ServiceName = "Ydb.Scheme.V1.SchemeService";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Ydb.Scheme.MakeDirectoryRequest> __Marshaller_Ydb_Scheme_MakeDirectoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ydb.Scheme.MakeDirectoryRequest.Parser));
    static readonly grpc::Marshaller<global::Ydb.Scheme.MakeDirectoryResponse> __Marshaller_Ydb_Scheme_MakeDirectoryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ydb.Scheme.MakeDirectoryResponse.Parser));
    static readonly grpc::Marshaller<global::Ydb.Scheme.RemoveDirectoryRequest> __Marshaller_Ydb_Scheme_RemoveDirectoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ydb.Scheme.RemoveDirectoryRequest.Parser));
    static readonly grpc::Marshaller<global::Ydb.Scheme.RemoveDirectoryResponse> __Marshaller_Ydb_Scheme_RemoveDirectoryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ydb.Scheme.RemoveDirectoryResponse.Parser));
    static readonly grpc::Marshaller<global::Ydb.Scheme.ListDirectoryRequest> __Marshaller_Ydb_Scheme_ListDirectoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ydb.Scheme.ListDirectoryRequest.Parser));
    static readonly grpc::Marshaller<global::Ydb.Scheme.ListDirectoryResponse> __Marshaller_Ydb_Scheme_ListDirectoryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ydb.Scheme.ListDirectoryResponse.Parser));
    static readonly grpc::Marshaller<global::Ydb.Scheme.DescribePathRequest> __Marshaller_Ydb_Scheme_DescribePathRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ydb.Scheme.DescribePathRequest.Parser));
    static readonly grpc::Marshaller<global::Ydb.Scheme.DescribePathResponse> __Marshaller_Ydb_Scheme_DescribePathResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ydb.Scheme.DescribePathResponse.Parser));
    static readonly grpc::Marshaller<global::Ydb.Scheme.ModifyPermissionsRequest> __Marshaller_Ydb_Scheme_ModifyPermissionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ydb.Scheme.ModifyPermissionsRequest.Parser));
    static readonly grpc::Marshaller<global::Ydb.Scheme.ModifyPermissionsResponse> __Marshaller_Ydb_Scheme_ModifyPermissionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ydb.Scheme.ModifyPermissionsResponse.Parser));

    static readonly grpc::Method<global::Ydb.Scheme.MakeDirectoryRequest, global::Ydb.Scheme.MakeDirectoryResponse> __Method_MakeDirectory = new grpc::Method<global::Ydb.Scheme.MakeDirectoryRequest, global::Ydb.Scheme.MakeDirectoryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MakeDirectory",
        __Marshaller_Ydb_Scheme_MakeDirectoryRequest,
        __Marshaller_Ydb_Scheme_MakeDirectoryResponse);

    static readonly grpc::Method<global::Ydb.Scheme.RemoveDirectoryRequest, global::Ydb.Scheme.RemoveDirectoryResponse> __Method_RemoveDirectory = new grpc::Method<global::Ydb.Scheme.RemoveDirectoryRequest, global::Ydb.Scheme.RemoveDirectoryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveDirectory",
        __Marshaller_Ydb_Scheme_RemoveDirectoryRequest,
        __Marshaller_Ydb_Scheme_RemoveDirectoryResponse);

    static readonly grpc::Method<global::Ydb.Scheme.ListDirectoryRequest, global::Ydb.Scheme.ListDirectoryResponse> __Method_ListDirectory = new grpc::Method<global::Ydb.Scheme.ListDirectoryRequest, global::Ydb.Scheme.ListDirectoryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDirectory",
        __Marshaller_Ydb_Scheme_ListDirectoryRequest,
        __Marshaller_Ydb_Scheme_ListDirectoryResponse);

    static readonly grpc::Method<global::Ydb.Scheme.DescribePathRequest, global::Ydb.Scheme.DescribePathResponse> __Method_DescribePath = new grpc::Method<global::Ydb.Scheme.DescribePathRequest, global::Ydb.Scheme.DescribePathResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DescribePath",
        __Marshaller_Ydb_Scheme_DescribePathRequest,
        __Marshaller_Ydb_Scheme_DescribePathResponse);

    static readonly grpc::Method<global::Ydb.Scheme.ModifyPermissionsRequest, global::Ydb.Scheme.ModifyPermissionsResponse> __Method_ModifyPermissions = new grpc::Method<global::Ydb.Scheme.ModifyPermissionsRequest, global::Ydb.Scheme.ModifyPermissionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ModifyPermissions",
        __Marshaller_Ydb_Scheme_ModifyPermissionsRequest,
        __Marshaller_Ydb_Scheme_ModifyPermissionsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Ydb.Scheme.V1.YdbSchemeV1Reflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for SchemeService</summary>
    public partial class SchemeServiceClient : grpc::ClientBase<SchemeServiceClient>
    {
      /// <summary>Creates a new client for SchemeService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public SchemeServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SchemeService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public SchemeServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected SchemeServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected SchemeServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Make Directory.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Ydb.Scheme.MakeDirectoryResponse MakeDirectory(global::Ydb.Scheme.MakeDirectoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MakeDirectory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Make Directory.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Ydb.Scheme.MakeDirectoryResponse MakeDirectory(global::Ydb.Scheme.MakeDirectoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MakeDirectory, null, options, request);
      }
      /// <summary>
      /// Make Directory.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Ydb.Scheme.MakeDirectoryResponse> MakeDirectoryAsync(global::Ydb.Scheme.MakeDirectoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MakeDirectoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Make Directory.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Ydb.Scheme.MakeDirectoryResponse> MakeDirectoryAsync(global::Ydb.Scheme.MakeDirectoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MakeDirectory, null, options, request);
      }
      /// <summary>
      /// Remove Directory.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Ydb.Scheme.RemoveDirectoryResponse RemoveDirectory(global::Ydb.Scheme.RemoveDirectoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveDirectory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Directory.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Ydb.Scheme.RemoveDirectoryResponse RemoveDirectory(global::Ydb.Scheme.RemoveDirectoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveDirectory, null, options, request);
      }
      /// <summary>
      /// Remove Directory.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Ydb.Scheme.RemoveDirectoryResponse> RemoveDirectoryAsync(global::Ydb.Scheme.RemoveDirectoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveDirectoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Directory.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Ydb.Scheme.RemoveDirectoryResponse> RemoveDirectoryAsync(global::Ydb.Scheme.RemoveDirectoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveDirectory, null, options, request);
      }
      /// <summary>
      /// Returns information about given directory and objects inside it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Ydb.Scheme.ListDirectoryResponse ListDirectory(global::Ydb.Scheme.ListDirectoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDirectory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about given directory and objects inside it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Ydb.Scheme.ListDirectoryResponse ListDirectory(global::Ydb.Scheme.ListDirectoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDirectory, null, options, request);
      }
      /// <summary>
      /// Returns information about given directory and objects inside it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Ydb.Scheme.ListDirectoryResponse> ListDirectoryAsync(global::Ydb.Scheme.ListDirectoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDirectoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about given directory and objects inside it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Ydb.Scheme.ListDirectoryResponse> ListDirectoryAsync(global::Ydb.Scheme.ListDirectoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDirectory, null, options, request);
      }
      /// <summary>
      /// Returns information about object with given path.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Ydb.Scheme.DescribePathResponse DescribePath(global::Ydb.Scheme.DescribePathRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DescribePath(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about object with given path.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Ydb.Scheme.DescribePathResponse DescribePath(global::Ydb.Scheme.DescribePathRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DescribePath, null, options, request);
      }
      /// <summary>
      /// Returns information about object with given path.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Ydb.Scheme.DescribePathResponse> DescribePathAsync(global::Ydb.Scheme.DescribePathRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DescribePathAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about object with given path.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Ydb.Scheme.DescribePathResponse> DescribePathAsync(global::Ydb.Scheme.DescribePathRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DescribePath, null, options, request);
      }
      /// <summary>
      /// Modify permissions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Ydb.Scheme.ModifyPermissionsResponse ModifyPermissions(global::Ydb.Scheme.ModifyPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModifyPermissions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Modify permissions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Ydb.Scheme.ModifyPermissionsResponse ModifyPermissions(global::Ydb.Scheme.ModifyPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ModifyPermissions, null, options, request);
      }
      /// <summary>
      /// Modify permissions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Ydb.Scheme.ModifyPermissionsResponse> ModifyPermissionsAsync(global::Ydb.Scheme.ModifyPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModifyPermissionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Modify permissions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Ydb.Scheme.ModifyPermissionsResponse> ModifyPermissionsAsync(global::Ydb.Scheme.ModifyPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ModifyPermissions, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override SchemeServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SchemeServiceClient(configuration);
      }
    }

  }
}
#endregion
