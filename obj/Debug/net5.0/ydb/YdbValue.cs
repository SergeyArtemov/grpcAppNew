// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Ydb/ydb_value.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ydb {

  /// <summary>Holder for reflection information generated from Ydb/ydb_value.proto</summary>
  public static partial class YdbValueReflection {

    #region Descriptor
    /// <summary>File descriptor for Ydb/ydb_value.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static YdbValueReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNZZGIveWRiX3ZhbHVlLnByb3RvEgNZZGIaHGdvb2dsZS9wcm90b2J1Zi9z",
            "dHJ1Y3QucHJvdG8iLwoLRGVjaW1hbFR5cGUSEQoJcHJlY2lzaW9uGAEgASgN",
            "Eg0KBXNjYWxlGAIgASgNIicKDE9wdGlvbmFsVHlwZRIXCgRpdGVtGAEgASgL",
            "MgkuWWRiLlR5cGUiIwoITGlzdFR5cGUSFwoEaXRlbRgBIAEoCzIJLllkYi5U",
            "eXBlImUKC1ZhcmlhbnRUeXBlEiUKC3R1cGxlX2l0ZW1zGAEgASgLMg4uWWRi",
            "LlR1cGxlVHlwZUgAEicKDHN0cnVjdF9pdGVtcxgCIAEoCzIPLllkYi5TdHJ1",
            "Y3RUeXBlSABCBgoEdHlwZSIoCglUdXBsZVR5cGUSGwoIZWxlbWVudHMYASAD",
            "KAsyCS5ZZGIuVHlwZSI1CgxTdHJ1Y3RNZW1iZXISDAoEbmFtZRgBIAEoCRIX",
            "CgR0eXBlGAIgASgLMgkuWWRiLlR5cGUiMAoKU3RydWN0VHlwZRIiCgdtZW1i",
            "ZXJzGAEgAygLMhEuWWRiLlN0cnVjdE1lbWJlciI+CghEaWN0VHlwZRIWCgNr",
            "ZXkYASABKAsyCS5ZZGIuVHlwZRIaCgdwYXlsb2FkGAIgASgLMgkuWWRiLlR5",
            "cGUi9wUKBFR5cGUSLAoHdHlwZV9pZBgBIAEoDjIZLllkYi5UeXBlLlByaW1p",
            "dGl2ZVR5cGVJZEgAEigKDGRlY2ltYWxfdHlwZRgCIAEoCzIQLllkYi5EZWNp",
            "bWFsVHlwZUgAEioKDW9wdGlvbmFsX3R5cGUYZSABKAsyES5ZZGIuT3B0aW9u",
            "YWxUeXBlSAASIgoJbGlzdF90eXBlGGYgASgLMg0uWWRiLkxpc3RUeXBlSAAS",
            "JAoKdHVwbGVfdHlwZRhnIAEoCzIOLllkYi5UdXBsZVR5cGVIABImCgtzdHJ1",
            "Y3RfdHlwZRhoIAEoCzIPLllkYi5TdHJ1Y3RUeXBlSAASIgoJZGljdF90eXBl",
            "GGkgASgLMg0uWWRiLkRpY3RUeXBlSAASKAoMdmFyaWFudF90eXBlGGogASgL",
            "MhAuWWRiLlZhcmlhbnRUeXBlSAASMAoJdm9pZF90eXBlGMkBIAEoDjIaLmdv",
            "b2dsZS5wcm90b2J1Zi5OdWxsVmFsdWVIACLwAgoPUHJpbWl0aXZlVHlwZUlk",
            "EiEKHVBSSU1JVElWRV9UWVBFX0lEX1VOU1BFQ0lGSUVEEAASCAoEQk9PTBAG",
            "EggKBElOVDgQBxIJCgVVSU5UOBAFEgkKBUlOVDE2EAgSCgoGVUlOVDE2EAkS",
            "CQoFSU5UMzIQARIKCgZVSU5UMzIQAhIJCgVJTlQ2NBADEgoKBlVJTlQ2NBAE",
            "EgkKBUZMT0FUECESCgoGRE9VQkxFECASCAoEREFURRAwEgwKCERBVEVUSU1F",
            "EDESDQoJVElNRVNUQU1QEDISDAoISU5URVJWQUwQMxILCgdUWl9EQVRFEDQS",
            "DwoLVFpfREFURVRJTUUQNRIQCgxUWl9USU1FU1RBTVAQNhILCgZTVFJJTkcQ",
            "gSASCQoEVVRGOBCAJBIJCgRZU09OEIEkEgkKBEpTT04QgiQSCQoEVVVJRBCD",
            "JBISCg1KU09OX0RPQ1VNRU5UEIQkEg0KCERZTlVNQkVSEIImQgYKBHR5cGUi",
            "QQoJVmFsdWVQYWlyEhcKA2tleRgBIAEoCzIKLllkYi5WYWx1ZRIbCgdwYXls",
            "b2FkGAIgASgLMgouWWRiLlZhbHVlIrEDCgVWYWx1ZRIUCgpib29sX3ZhbHVl",
            "GAEgASgISAASFQoLaW50MzJfdmFsdWUYAiABKA9IABIWCgx1aW50MzJfdmFs",
            "dWUYAyABKAdIABIVCgtpbnQ2NF92YWx1ZRgEIAEoEEgAEhYKDHVpbnQ2NF92",
            "YWx1ZRgFIAEoBkgAEhUKC2Zsb2F0X3ZhbHVlGAYgASgCSAASFgoMZG91Ymxl",
            "X3ZhbHVlGAcgASgBSAASFQoLYnl0ZXNfdmFsdWUYCCABKAxIABIUCgp0ZXh0",
            "X3ZhbHVlGAkgASgJSAASNQoPbnVsbF9mbGFnX3ZhbHVlGAogASgOMhouZ29v",
            "Z2xlLnByb3RvYnVmLk51bGxWYWx1ZUgAEiIKDG5lc3RlZF92YWx1ZRgLIAEo",
            "CzIKLllkYi5WYWx1ZUgAEhEKB2xvd18xMjgYDyABKAZIABIZCgVpdGVtcxgM",
            "IAMoCzIKLllkYi5WYWx1ZRIdCgVwYWlycxgNIAMoCzIOLllkYi5WYWx1ZVBh",
            "aXISFQoNdmFyaWFudF9pbmRleBgOIAEoDRIQCghoaWdoXzEyOBgQIAEoBkIH",
            "CgV2YWx1ZSJACgpUeXBlZFZhbHVlEhcKBHR5cGUYASABKAsyCS5ZZGIuVHlw",
            "ZRIZCgV2YWx1ZRgCIAEoCzIKLllkYi5WYWx1ZSIvCgZDb2x1bW4SDAoEbmFt",
            "ZRgBIAEoCRIXCgR0eXBlGAIgASgLMgkuWWRiLlR5cGUiVgoJUmVzdWx0U2V0",
            "EhwKB2NvbHVtbnMYASADKAsyCy5ZZGIuQ29sdW1uEhgKBHJvd3MYAiADKAsy",
            "Ci5ZZGIuVmFsdWUSEQoJdHJ1bmNhdGVkGAMgASgIQiAKDmNvbS55YW5kZXgu",
            "eWRiQgtWYWx1ZVByb3Rvc/gBAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.DecimalType), global::Ydb.DecimalType.Parser, new[]{ "Precision", "Scale" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.OptionalType), global::Ydb.OptionalType.Parser, new[]{ "Item" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.ListType), global::Ydb.ListType.Parser, new[]{ "Item" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.VariantType), global::Ydb.VariantType.Parser, new[]{ "TupleItems", "StructItems" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.TupleType), global::Ydb.TupleType.Parser, new[]{ "Elements" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.StructMember), global::Ydb.StructMember.Parser, new[]{ "Name", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.StructType), global::Ydb.StructType.Parser, new[]{ "Members" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.DictType), global::Ydb.DictType.Parser, new[]{ "Key", "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Type), global::Ydb.Type.Parser, new[]{ "TypeId", "DecimalType", "OptionalType", "ListType", "TupleType", "StructType", "DictType", "VariantType", "VoidType" }, new[]{ "Type" }, new[]{ typeof(global::Ydb.Type.Types.PrimitiveTypeId) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.ValuePair), global::Ydb.ValuePair.Parser, new[]{ "Key", "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Value), global::Ydb.Value.Parser, new[]{ "BoolValue", "Int32Value", "Uint32Value", "Int64Value", "Uint64Value", "FloatValue", "DoubleValue", "BytesValue", "TextValue", "NullFlagValue", "NestedValue", "Low128", "Items", "Pairs", "VariantIndex", "High128" }, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.TypedValue), global::Ydb.TypedValue.Parser, new[]{ "Type", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.Column), global::Ydb.Column.Parser, new[]{ "Name", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.ResultSet), global::Ydb.ResultSet.Parser, new[]{ "Columns", "Rows", "Truncated" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DecimalType : pb::IMessage<DecimalType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DecimalType> _parser = new pb::MessageParser<DecimalType>(() => new DecimalType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DecimalType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.YdbValueReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecimalType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecimalType(DecimalType other) : this() {
      precision_ = other.precision_;
      scale_ = other.scale_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecimalType Clone() {
      return new DecimalType(this);
    }

    /// <summary>Field number for the "precision" field.</summary>
    public const int PrecisionFieldNumber = 1;
    private uint precision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Precision {
      get { return precision_; }
      set {
        precision_ = value;
      }
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 2;
    private uint scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DecimalType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DecimalType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Precision != other.Precision) return false;
      if (Scale != other.Scale) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Precision != 0) hash ^= Precision.GetHashCode();
      if (Scale != 0) hash ^= Scale.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Precision != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Precision);
      }
      if (Scale != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Scale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Precision != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Precision);
      }
      if (Scale != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Scale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Precision != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Precision);
      }
      if (Scale != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Scale);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DecimalType other) {
      if (other == null) {
        return;
      }
      if (other.Precision != 0) {
        Precision = other.Precision;
      }
      if (other.Scale != 0) {
        Scale = other.Scale;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Precision = input.ReadUInt32();
            break;
          }
          case 16: {
            Scale = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Precision = input.ReadUInt32();
            break;
          }
          case 16: {
            Scale = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OptionalType : pb::IMessage<OptionalType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OptionalType> _parser = new pb::MessageParser<OptionalType>(() => new OptionalType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OptionalType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.YdbValueReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OptionalType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OptionalType(OptionalType other) : this() {
      item_ = other.item_ != null ? other.item_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OptionalType Clone() {
      return new OptionalType(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private global::Ydb.Type item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Type Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OptionalType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OptionalType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Item, other.Item)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (item_ != null) hash ^= Item.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OptionalType other) {
      if (other == null) {
        return;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::Ydb.Type();
        }
        Item.MergeFrom(other.Item);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::Ydb.Type();
            }
            input.ReadMessage(Item);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::Ydb.Type();
            }
            input.ReadMessage(Item);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListType : pb::IMessage<ListType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListType> _parser = new pb::MessageParser<ListType>(() => new ListType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.YdbValueReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListType(ListType other) : this() {
      item_ = other.item_ != null ? other.item_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListType Clone() {
      return new ListType(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private global::Ydb.Type item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Type Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Item, other.Item)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (item_ != null) hash ^= Item.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListType other) {
      if (other == null) {
        return;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::Ydb.Type();
        }
        Item.MergeFrom(other.Item);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::Ydb.Type();
            }
            input.ReadMessage(Item);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::Ydb.Type();
            }
            input.ReadMessage(Item);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VariantType : pb::IMessage<VariantType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VariantType> _parser = new pb::MessageParser<VariantType>(() => new VariantType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VariantType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.YdbValueReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VariantType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VariantType(VariantType other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.TupleItems:
          TupleItems = other.TupleItems.Clone();
          break;
        case TypeOneofCase.StructItems:
          StructItems = other.StructItems.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VariantType Clone() {
      return new VariantType(this);
    }

    /// <summary>Field number for the "tuple_items" field.</summary>
    public const int TupleItemsFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.TupleType TupleItems {
      get { return typeCase_ == TypeOneofCase.TupleItems ? (global::Ydb.TupleType) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.TupleItems;
      }
    }

    /// <summary>Field number for the "struct_items" field.</summary>
    public const int StructItemsFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.StructType StructItems {
      get { return typeCase_ == TypeOneofCase.StructItems ? (global::Ydb.StructType) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.StructItems;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      TupleItems = 1,
      StructItems = 2,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VariantType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VariantType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TupleItems, other.TupleItems)) return false;
      if (!object.Equals(StructItems, other.StructItems)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.TupleItems) hash ^= TupleItems.GetHashCode();
      if (typeCase_ == TypeOneofCase.StructItems) hash ^= StructItems.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (typeCase_ == TypeOneofCase.TupleItems) {
        output.WriteRawTag(10);
        output.WriteMessage(TupleItems);
      }
      if (typeCase_ == TypeOneofCase.StructItems) {
        output.WriteRawTag(18);
        output.WriteMessage(StructItems);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (typeCase_ == TypeOneofCase.TupleItems) {
        output.WriteRawTag(10);
        output.WriteMessage(TupleItems);
      }
      if (typeCase_ == TypeOneofCase.StructItems) {
        output.WriteRawTag(18);
        output.WriteMessage(StructItems);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.TupleItems) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TupleItems);
      }
      if (typeCase_ == TypeOneofCase.StructItems) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StructItems);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VariantType other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.TupleItems:
          if (TupleItems == null) {
            TupleItems = new global::Ydb.TupleType();
          }
          TupleItems.MergeFrom(other.TupleItems);
          break;
        case TypeOneofCase.StructItems:
          if (StructItems == null) {
            StructItems = new global::Ydb.StructType();
          }
          StructItems.MergeFrom(other.StructItems);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Ydb.TupleType subBuilder = new global::Ydb.TupleType();
            if (typeCase_ == TypeOneofCase.TupleItems) {
              subBuilder.MergeFrom(TupleItems);
            }
            input.ReadMessage(subBuilder);
            TupleItems = subBuilder;
            break;
          }
          case 18: {
            global::Ydb.StructType subBuilder = new global::Ydb.StructType();
            if (typeCase_ == TypeOneofCase.StructItems) {
              subBuilder.MergeFrom(StructItems);
            }
            input.ReadMessage(subBuilder);
            StructItems = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Ydb.TupleType subBuilder = new global::Ydb.TupleType();
            if (typeCase_ == TypeOneofCase.TupleItems) {
              subBuilder.MergeFrom(TupleItems);
            }
            input.ReadMessage(subBuilder);
            TupleItems = subBuilder;
            break;
          }
          case 18: {
            global::Ydb.StructType subBuilder = new global::Ydb.StructType();
            if (typeCase_ == TypeOneofCase.StructItems) {
              subBuilder.MergeFrom(StructItems);
            }
            input.ReadMessage(subBuilder);
            StructItems = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TupleType : pb::IMessage<TupleType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TupleType> _parser = new pb::MessageParser<TupleType>(() => new TupleType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TupleType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.YdbValueReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TupleType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TupleType(TupleType other) : this() {
      elements_ = other.elements_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TupleType Clone() {
      return new TupleType(this);
    }

    /// <summary>Field number for the "elements" field.</summary>
    public const int ElementsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Ydb.Type> _repeated_elements_codec
        = pb::FieldCodec.ForMessage(10, global::Ydb.Type.Parser);
    private readonly pbc::RepeatedField<global::Ydb.Type> elements_ = new pbc::RepeatedField<global::Ydb.Type>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.Type> Elements {
      get { return elements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TupleType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TupleType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!elements_.Equals(other.elements_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= elements_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      elements_.WriteTo(output, _repeated_elements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      elements_.WriteTo(ref output, _repeated_elements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += elements_.CalculateSize(_repeated_elements_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TupleType other) {
      if (other == null) {
        return;
      }
      elements_.Add(other.elements_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            elements_.AddEntriesFrom(input, _repeated_elements_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            elements_.AddEntriesFrom(ref input, _repeated_elements_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StructMember : pb::IMessage<StructMember>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StructMember> _parser = new pb::MessageParser<StructMember>(() => new StructMember());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StructMember> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.YdbValueReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StructMember() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StructMember(StructMember other) : this() {
      name_ = other.name_;
      type_ = other.type_ != null ? other.type_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StructMember Clone() {
      return new StructMember(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Ydb.Type type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StructMember);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StructMember other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Type, other.Type)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (type_ != null) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (type_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (type_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (type_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StructMember other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.type_ != null) {
        if (type_ == null) {
          Type = new global::Ydb.Type();
        }
        Type.MergeFrom(other.Type);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (type_ == null) {
              Type = new global::Ydb.Type();
            }
            input.ReadMessage(Type);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (type_ == null) {
              Type = new global::Ydb.Type();
            }
            input.ReadMessage(Type);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StructType : pb::IMessage<StructType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StructType> _parser = new pb::MessageParser<StructType>(() => new StructType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StructType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.YdbValueReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StructType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StructType(StructType other) : this() {
      members_ = other.members_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StructType Clone() {
      return new StructType(this);
    }

    /// <summary>Field number for the "members" field.</summary>
    public const int MembersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Ydb.StructMember> _repeated_members_codec
        = pb::FieldCodec.ForMessage(10, global::Ydb.StructMember.Parser);
    private readonly pbc::RepeatedField<global::Ydb.StructMember> members_ = new pbc::RepeatedField<global::Ydb.StructMember>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.StructMember> Members {
      get { return members_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StructType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StructType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!members_.Equals(other.members_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= members_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      members_.WriteTo(output, _repeated_members_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      members_.WriteTo(ref output, _repeated_members_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += members_.CalculateSize(_repeated_members_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StructType other) {
      if (other == null) {
        return;
      }
      members_.Add(other.members_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            members_.AddEntriesFrom(input, _repeated_members_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            members_.AddEntriesFrom(ref input, _repeated_members_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DictType : pb::IMessage<DictType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DictType> _parser = new pb::MessageParser<DictType>(() => new DictType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DictType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.YdbValueReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DictType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DictType(DictType other) : this() {
      key_ = other.key_ != null ? other.key_.Clone() : null;
      payload_ = other.payload_ != null ? other.payload_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DictType Clone() {
      return new DictType(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::Ydb.Type key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Type Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 2;
    private global::Ydb.Type payload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Type Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DictType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DictType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (!object.Equals(Payload, other.Payload)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (payload_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (payload_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (payload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DictType other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::Ydb.Type();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.payload_ != null) {
        if (payload_ == null) {
          Payload = new global::Ydb.Type();
        }
        Payload.MergeFrom(other.Payload);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Ydb.Type();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            if (payload_ == null) {
              Payload = new global::Ydb.Type();
            }
            input.ReadMessage(Payload);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Ydb.Type();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            if (payload_ == null) {
              Payload = new global::Ydb.Type();
            }
            input.ReadMessage(Payload);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Type : pb::IMessage<Type>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Type> _parser = new pb::MessageParser<Type>(() => new Type());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Type> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.YdbValueReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Type() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Type(Type other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.TypeId:
          TypeId = other.TypeId;
          break;
        case TypeOneofCase.DecimalType:
          DecimalType = other.DecimalType.Clone();
          break;
        case TypeOneofCase.OptionalType:
          OptionalType = other.OptionalType.Clone();
          break;
        case TypeOneofCase.ListType:
          ListType = other.ListType.Clone();
          break;
        case TypeOneofCase.TupleType:
          TupleType = other.TupleType.Clone();
          break;
        case TypeOneofCase.StructType:
          StructType = other.StructType.Clone();
          break;
        case TypeOneofCase.DictType:
          DictType = other.DictType.Clone();
          break;
        case TypeOneofCase.VariantType:
          VariantType = other.VariantType.Clone();
          break;
        case TypeOneofCase.VoidType:
          VoidType = other.VoidType;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Type Clone() {
      return new Type(this);
    }

    /// <summary>Field number for the "type_id" field.</summary>
    public const int TypeIdFieldNumber = 1;
    /// <summary>
    /// Data types 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Type.Types.PrimitiveTypeId TypeId {
      get { return typeCase_ == TypeOneofCase.TypeId ? (global::Ydb.Type.Types.PrimitiveTypeId) type_ : global::Ydb.Type.Types.PrimitiveTypeId.Unspecified; }
      set {
        type_ = value;
        typeCase_ = TypeOneofCase.TypeId;
      }
    }

    /// <summary>Field number for the "decimal_type" field.</summary>
    public const int DecimalTypeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.DecimalType DecimalType {
      get { return typeCase_ == TypeOneofCase.DecimalType ? (global::Ydb.DecimalType) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.DecimalType;
      }
    }

    /// <summary>Field number for the "optional_type" field.</summary>
    public const int OptionalTypeFieldNumber = 101;
    /// <summary>
    /// Container types 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.OptionalType OptionalType {
      get { return typeCase_ == TypeOneofCase.OptionalType ? (global::Ydb.OptionalType) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.OptionalType;
      }
    }

    /// <summary>Field number for the "list_type" field.</summary>
    public const int ListTypeFieldNumber = 102;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.ListType ListType {
      get { return typeCase_ == TypeOneofCase.ListType ? (global::Ydb.ListType) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.ListType;
      }
    }

    /// <summary>Field number for the "tuple_type" field.</summary>
    public const int TupleTypeFieldNumber = 103;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.TupleType TupleType {
      get { return typeCase_ == TypeOneofCase.TupleType ? (global::Ydb.TupleType) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.TupleType;
      }
    }

    /// <summary>Field number for the "struct_type" field.</summary>
    public const int StructTypeFieldNumber = 104;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.StructType StructType {
      get { return typeCase_ == TypeOneofCase.StructType ? (global::Ydb.StructType) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.StructType;
      }
    }

    /// <summary>Field number for the "dict_type" field.</summary>
    public const int DictTypeFieldNumber = 105;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.DictType DictType {
      get { return typeCase_ == TypeOneofCase.DictType ? (global::Ydb.DictType) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.DictType;
      }
    }

    /// <summary>Field number for the "variant_type" field.</summary>
    public const int VariantTypeFieldNumber = 106;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.VariantType VariantType {
      get { return typeCase_ == TypeOneofCase.VariantType ? (global::Ydb.VariantType) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.VariantType;
      }
    }

    /// <summary>Field number for the "void_type" field.</summary>
    public const int VoidTypeFieldNumber = 201;
    /// <summary>
    /// Special types 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.NullValue VoidType {
      get { return typeCase_ == TypeOneofCase.VoidType ? (global::Google.Protobuf.WellKnownTypes.NullValue) type_ : global::Google.Protobuf.WellKnownTypes.NullValue.NullValue; }
      set {
        type_ = value;
        typeCase_ = TypeOneofCase.VoidType;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      TypeId = 1,
      DecimalType = 2,
      OptionalType = 101,
      ListType = 102,
      TupleType = 103,
      StructType = 104,
      DictType = 105,
      VariantType = 106,
      VoidType = 201,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Type);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Type other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TypeId != other.TypeId) return false;
      if (!object.Equals(DecimalType, other.DecimalType)) return false;
      if (!object.Equals(OptionalType, other.OptionalType)) return false;
      if (!object.Equals(ListType, other.ListType)) return false;
      if (!object.Equals(TupleType, other.TupleType)) return false;
      if (!object.Equals(StructType, other.StructType)) return false;
      if (!object.Equals(DictType, other.DictType)) return false;
      if (!object.Equals(VariantType, other.VariantType)) return false;
      if (VoidType != other.VoidType) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.TypeId) hash ^= TypeId.GetHashCode();
      if (typeCase_ == TypeOneofCase.DecimalType) hash ^= DecimalType.GetHashCode();
      if (typeCase_ == TypeOneofCase.OptionalType) hash ^= OptionalType.GetHashCode();
      if (typeCase_ == TypeOneofCase.ListType) hash ^= ListType.GetHashCode();
      if (typeCase_ == TypeOneofCase.TupleType) hash ^= TupleType.GetHashCode();
      if (typeCase_ == TypeOneofCase.StructType) hash ^= StructType.GetHashCode();
      if (typeCase_ == TypeOneofCase.DictType) hash ^= DictType.GetHashCode();
      if (typeCase_ == TypeOneofCase.VariantType) hash ^= VariantType.GetHashCode();
      if (typeCase_ == TypeOneofCase.VoidType) hash ^= VoidType.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (typeCase_ == TypeOneofCase.TypeId) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TypeId);
      }
      if (typeCase_ == TypeOneofCase.DecimalType) {
        output.WriteRawTag(18);
        output.WriteMessage(DecimalType);
      }
      if (typeCase_ == TypeOneofCase.OptionalType) {
        output.WriteRawTag(170, 6);
        output.WriteMessage(OptionalType);
      }
      if (typeCase_ == TypeOneofCase.ListType) {
        output.WriteRawTag(178, 6);
        output.WriteMessage(ListType);
      }
      if (typeCase_ == TypeOneofCase.TupleType) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(TupleType);
      }
      if (typeCase_ == TypeOneofCase.StructType) {
        output.WriteRawTag(194, 6);
        output.WriteMessage(StructType);
      }
      if (typeCase_ == TypeOneofCase.DictType) {
        output.WriteRawTag(202, 6);
        output.WriteMessage(DictType);
      }
      if (typeCase_ == TypeOneofCase.VariantType) {
        output.WriteRawTag(210, 6);
        output.WriteMessage(VariantType);
      }
      if (typeCase_ == TypeOneofCase.VoidType) {
        output.WriteRawTag(200, 12);
        output.WriteEnum((int) VoidType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (typeCase_ == TypeOneofCase.TypeId) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TypeId);
      }
      if (typeCase_ == TypeOneofCase.DecimalType) {
        output.WriteRawTag(18);
        output.WriteMessage(DecimalType);
      }
      if (typeCase_ == TypeOneofCase.OptionalType) {
        output.WriteRawTag(170, 6);
        output.WriteMessage(OptionalType);
      }
      if (typeCase_ == TypeOneofCase.ListType) {
        output.WriteRawTag(178, 6);
        output.WriteMessage(ListType);
      }
      if (typeCase_ == TypeOneofCase.TupleType) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(TupleType);
      }
      if (typeCase_ == TypeOneofCase.StructType) {
        output.WriteRawTag(194, 6);
        output.WriteMessage(StructType);
      }
      if (typeCase_ == TypeOneofCase.DictType) {
        output.WriteRawTag(202, 6);
        output.WriteMessage(DictType);
      }
      if (typeCase_ == TypeOneofCase.VariantType) {
        output.WriteRawTag(210, 6);
        output.WriteMessage(VariantType);
      }
      if (typeCase_ == TypeOneofCase.VoidType) {
        output.WriteRawTag(200, 12);
        output.WriteEnum((int) VoidType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.TypeId) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TypeId);
      }
      if (typeCase_ == TypeOneofCase.DecimalType) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DecimalType);
      }
      if (typeCase_ == TypeOneofCase.OptionalType) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OptionalType);
      }
      if (typeCase_ == TypeOneofCase.ListType) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ListType);
      }
      if (typeCase_ == TypeOneofCase.TupleType) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TupleType);
      }
      if (typeCase_ == TypeOneofCase.StructType) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StructType);
      }
      if (typeCase_ == TypeOneofCase.DictType) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DictType);
      }
      if (typeCase_ == TypeOneofCase.VariantType) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VariantType);
      }
      if (typeCase_ == TypeOneofCase.VoidType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) VoidType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Type other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.TypeId:
          TypeId = other.TypeId;
          break;
        case TypeOneofCase.DecimalType:
          if (DecimalType == null) {
            DecimalType = new global::Ydb.DecimalType();
          }
          DecimalType.MergeFrom(other.DecimalType);
          break;
        case TypeOneofCase.OptionalType:
          if (OptionalType == null) {
            OptionalType = new global::Ydb.OptionalType();
          }
          OptionalType.MergeFrom(other.OptionalType);
          break;
        case TypeOneofCase.ListType:
          if (ListType == null) {
            ListType = new global::Ydb.ListType();
          }
          ListType.MergeFrom(other.ListType);
          break;
        case TypeOneofCase.TupleType:
          if (TupleType == null) {
            TupleType = new global::Ydb.TupleType();
          }
          TupleType.MergeFrom(other.TupleType);
          break;
        case TypeOneofCase.StructType:
          if (StructType == null) {
            StructType = new global::Ydb.StructType();
          }
          StructType.MergeFrom(other.StructType);
          break;
        case TypeOneofCase.DictType:
          if (DictType == null) {
            DictType = new global::Ydb.DictType();
          }
          DictType.MergeFrom(other.DictType);
          break;
        case TypeOneofCase.VariantType:
          if (VariantType == null) {
            VariantType = new global::Ydb.VariantType();
          }
          VariantType.MergeFrom(other.VariantType);
          break;
        case TypeOneofCase.VoidType:
          VoidType = other.VoidType;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = input.ReadEnum();
            typeCase_ = TypeOneofCase.TypeId;
            break;
          }
          case 18: {
            global::Ydb.DecimalType subBuilder = new global::Ydb.DecimalType();
            if (typeCase_ == TypeOneofCase.DecimalType) {
              subBuilder.MergeFrom(DecimalType);
            }
            input.ReadMessage(subBuilder);
            DecimalType = subBuilder;
            break;
          }
          case 810: {
            global::Ydb.OptionalType subBuilder = new global::Ydb.OptionalType();
            if (typeCase_ == TypeOneofCase.OptionalType) {
              subBuilder.MergeFrom(OptionalType);
            }
            input.ReadMessage(subBuilder);
            OptionalType = subBuilder;
            break;
          }
          case 818: {
            global::Ydb.ListType subBuilder = new global::Ydb.ListType();
            if (typeCase_ == TypeOneofCase.ListType) {
              subBuilder.MergeFrom(ListType);
            }
            input.ReadMessage(subBuilder);
            ListType = subBuilder;
            break;
          }
          case 826: {
            global::Ydb.TupleType subBuilder = new global::Ydb.TupleType();
            if (typeCase_ == TypeOneofCase.TupleType) {
              subBuilder.MergeFrom(TupleType);
            }
            input.ReadMessage(subBuilder);
            TupleType = subBuilder;
            break;
          }
          case 834: {
            global::Ydb.StructType subBuilder = new global::Ydb.StructType();
            if (typeCase_ == TypeOneofCase.StructType) {
              subBuilder.MergeFrom(StructType);
            }
            input.ReadMessage(subBuilder);
            StructType = subBuilder;
            break;
          }
          case 842: {
            global::Ydb.DictType subBuilder = new global::Ydb.DictType();
            if (typeCase_ == TypeOneofCase.DictType) {
              subBuilder.MergeFrom(DictType);
            }
            input.ReadMessage(subBuilder);
            DictType = subBuilder;
            break;
          }
          case 850: {
            global::Ydb.VariantType subBuilder = new global::Ydb.VariantType();
            if (typeCase_ == TypeOneofCase.VariantType) {
              subBuilder.MergeFrom(VariantType);
            }
            input.ReadMessage(subBuilder);
            VariantType = subBuilder;
            break;
          }
          case 1608: {
            type_ = input.ReadEnum();
            typeCase_ = TypeOneofCase.VoidType;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            type_ = input.ReadEnum();
            typeCase_ = TypeOneofCase.TypeId;
            break;
          }
          case 18: {
            global::Ydb.DecimalType subBuilder = new global::Ydb.DecimalType();
            if (typeCase_ == TypeOneofCase.DecimalType) {
              subBuilder.MergeFrom(DecimalType);
            }
            input.ReadMessage(subBuilder);
            DecimalType = subBuilder;
            break;
          }
          case 810: {
            global::Ydb.OptionalType subBuilder = new global::Ydb.OptionalType();
            if (typeCase_ == TypeOneofCase.OptionalType) {
              subBuilder.MergeFrom(OptionalType);
            }
            input.ReadMessage(subBuilder);
            OptionalType = subBuilder;
            break;
          }
          case 818: {
            global::Ydb.ListType subBuilder = new global::Ydb.ListType();
            if (typeCase_ == TypeOneofCase.ListType) {
              subBuilder.MergeFrom(ListType);
            }
            input.ReadMessage(subBuilder);
            ListType = subBuilder;
            break;
          }
          case 826: {
            global::Ydb.TupleType subBuilder = new global::Ydb.TupleType();
            if (typeCase_ == TypeOneofCase.TupleType) {
              subBuilder.MergeFrom(TupleType);
            }
            input.ReadMessage(subBuilder);
            TupleType = subBuilder;
            break;
          }
          case 834: {
            global::Ydb.StructType subBuilder = new global::Ydb.StructType();
            if (typeCase_ == TypeOneofCase.StructType) {
              subBuilder.MergeFrom(StructType);
            }
            input.ReadMessage(subBuilder);
            StructType = subBuilder;
            break;
          }
          case 842: {
            global::Ydb.DictType subBuilder = new global::Ydb.DictType();
            if (typeCase_ == TypeOneofCase.DictType) {
              subBuilder.MergeFrom(DictType);
            }
            input.ReadMessage(subBuilder);
            DictType = subBuilder;
            break;
          }
          case 850: {
            global::Ydb.VariantType subBuilder = new global::Ydb.VariantType();
            if (typeCase_ == TypeOneofCase.VariantType) {
              subBuilder.MergeFrom(VariantType);
            }
            input.ReadMessage(subBuilder);
            VariantType = subBuilder;
            break;
          }
          case 1608: {
            type_ = input.ReadEnum();
            typeCase_ = TypeOneofCase.VoidType;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Type message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum PrimitiveTypeId {
        [pbr::OriginalName("PRIMITIVE_TYPE_ID_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("BOOL")] Bool = 6,
        [pbr::OriginalName("INT8")] Int8 = 7,
        [pbr::OriginalName("UINT8")] Uint8 = 5,
        [pbr::OriginalName("INT16")] Int16 = 8,
        [pbr::OriginalName("UINT16")] Uint16 = 9,
        [pbr::OriginalName("INT32")] Int32 = 1,
        [pbr::OriginalName("UINT32")] Uint32 = 2,
        [pbr::OriginalName("INT64")] Int64 = 3,
        [pbr::OriginalName("UINT64")] Uint64 = 4,
        [pbr::OriginalName("FLOAT")] Float = 33,
        [pbr::OriginalName("DOUBLE")] Double = 32,
        [pbr::OriginalName("DATE")] Date = 48,
        [pbr::OriginalName("DATETIME")] Datetime = 49,
        [pbr::OriginalName("TIMESTAMP")] Timestamp = 50,
        [pbr::OriginalName("INTERVAL")] Interval = 51,
        [pbr::OriginalName("TZ_DATE")] TzDate = 52,
        [pbr::OriginalName("TZ_DATETIME")] TzDatetime = 53,
        [pbr::OriginalName("TZ_TIMESTAMP")] TzTimestamp = 54,
        [pbr::OriginalName("STRING")] String = 4097,
        [pbr::OriginalName("UTF8")] Utf8 = 4608,
        [pbr::OriginalName("YSON")] Yson = 4609,
        [pbr::OriginalName("JSON")] Json = 4610,
        [pbr::OriginalName("UUID")] Uuid = 4611,
        [pbr::OriginalName("JSON_DOCUMENT")] JsonDocument = 4612,
        [pbr::OriginalName("DYNUMBER")] Dynumber = 4866,
      }

    }
    #endregion

  }

  public sealed partial class ValuePair : pb::IMessage<ValuePair>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ValuePair> _parser = new pb::MessageParser<ValuePair>(() => new ValuePair());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ValuePair> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.YdbValueReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValuePair() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValuePair(ValuePair other) : this() {
      key_ = other.key_ != null ? other.key_.Clone() : null;
      payload_ = other.payload_ != null ? other.payload_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValuePair Clone() {
      return new ValuePair(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::Ydb.Value key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Value Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 2;
    private global::Ydb.Value payload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Value Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ValuePair);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ValuePair other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (!object.Equals(Payload, other.Payload)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (payload_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (payload_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (payload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ValuePair other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::Ydb.Value();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.payload_ != null) {
        if (payload_ == null) {
          Payload = new global::Ydb.Value();
        }
        Payload.MergeFrom(other.Payload);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Ydb.Value();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            if (payload_ == null) {
              Payload = new global::Ydb.Value();
            }
            input.ReadMessage(Payload);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Ydb.Value();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            if (payload_ == null) {
              Payload = new global::Ydb.Value();
            }
            input.ReadMessage(Payload);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Value : pb::IMessage<Value>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Value> _parser = new pb::MessageParser<Value>(() => new Value());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Value> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.YdbValueReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Value() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Value(Value other) : this() {
      items_ = other.items_.Clone();
      pairs_ = other.pairs_.Clone();
      variantIndex_ = other.variantIndex_;
      high128_ = other.high128_;
      switch (other.ValueCase) {
        case ValueOneofCase.BoolValue:
          BoolValue = other.BoolValue;
          break;
        case ValueOneofCase.Int32Value:
          Int32Value = other.Int32Value;
          break;
        case ValueOneofCase.Uint32Value:
          Uint32Value = other.Uint32Value;
          break;
        case ValueOneofCase.Int64Value:
          Int64Value = other.Int64Value;
          break;
        case ValueOneofCase.Uint64Value:
          Uint64Value = other.Uint64Value;
          break;
        case ValueOneofCase.FloatValue:
          FloatValue = other.FloatValue;
          break;
        case ValueOneofCase.DoubleValue:
          DoubleValue = other.DoubleValue;
          break;
        case ValueOneofCase.BytesValue:
          BytesValue = other.BytesValue;
          break;
        case ValueOneofCase.TextValue:
          TextValue = other.TextValue;
          break;
        case ValueOneofCase.NullFlagValue:
          NullFlagValue = other.NullFlagValue;
          break;
        case ValueOneofCase.NestedValue:
          NestedValue = other.NestedValue.Clone();
          break;
        case ValueOneofCase.Low128:
          Low128 = other.Low128;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Value Clone() {
      return new Value(this);
    }

    /// <summary>Field number for the "bool_value" field.</summary>
    public const int BoolValueFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BoolValue {
      get { return valueCase_ == ValueOneofCase.BoolValue ? (bool) value_ : false; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.BoolValue;
      }
    }

    /// <summary>Field number for the "int32_value" field.</summary>
    public const int Int32ValueFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Int32Value {
      get { return valueCase_ == ValueOneofCase.Int32Value ? (int) value_ : 0; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.Int32Value;
      }
    }

    /// <summary>Field number for the "uint32_value" field.</summary>
    public const int Uint32ValueFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Uint32Value {
      get { return valueCase_ == ValueOneofCase.Uint32Value ? (uint) value_ : 0; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.Uint32Value;
      }
    }

    /// <summary>Field number for the "int64_value" field.</summary>
    public const int Int64ValueFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Int64Value {
      get { return valueCase_ == ValueOneofCase.Int64Value ? (long) value_ : 0L; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.Int64Value;
      }
    }

    /// <summary>Field number for the "uint64_value" field.</summary>
    public const int Uint64ValueFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Uint64Value {
      get { return valueCase_ == ValueOneofCase.Uint64Value ? (ulong) value_ : 0UL; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.Uint64Value;
      }
    }

    /// <summary>Field number for the "float_value" field.</summary>
    public const int FloatValueFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float FloatValue {
      get { return valueCase_ == ValueOneofCase.FloatValue ? (float) value_ : 0F; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.FloatValue;
      }
    }

    /// <summary>Field number for the "double_value" field.</summary>
    public const int DoubleValueFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DoubleValue {
      get { return valueCase_ == ValueOneofCase.DoubleValue ? (double) value_ : 0D; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.DoubleValue;
      }
    }

    /// <summary>Field number for the "bytes_value" field.</summary>
    public const int BytesValueFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BytesValue {
      get { return valueCase_ == ValueOneofCase.BytesValue ? (pb::ByteString) value_ : pb::ByteString.Empty; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        valueCase_ = ValueOneofCase.BytesValue;
      }
    }

    /// <summary>Field number for the "text_value" field.</summary>
    public const int TextValueFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TextValue {
      get { return valueCase_ == ValueOneofCase.TextValue ? (string) value_ : ""; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        valueCase_ = ValueOneofCase.TextValue;
      }
    }

    /// <summary>Field number for the "null_flag_value" field.</summary>
    public const int NullFlagValueFieldNumber = 10;
    /// <summary>
    /// Set if current TValue is terminal Null
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.NullValue NullFlagValue {
      get { return valueCase_ == ValueOneofCase.NullFlagValue ? (global::Google.Protobuf.WellKnownTypes.NullValue) value_ : global::Google.Protobuf.WellKnownTypes.NullValue.NullValue; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.NullFlagValue;
      }
    }

    /// <summary>Field number for the "nested_value" field.</summary>
    public const int NestedValueFieldNumber = 11;
    /// <summary>
    /// Represents nested TValue for Optional&lt;Optional&lt;T>>(Null), or Variant&lt;T> types
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Value NestedValue {
      get { return valueCase_ == ValueOneofCase.NestedValue ? (global::Ydb.Value) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.NestedValue;
      }
    }

    /// <summary>Field number for the "low_128" field.</summary>
    public const int Low128FieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Low128 {
      get { return valueCase_ == ValueOneofCase.Low128 ? (ulong) value_ : 0UL; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.Low128;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Ydb.Value> _repeated_items_codec
        = pb::FieldCodec.ForMessage(98, global::Ydb.Value.Parser);
    private readonly pbc::RepeatedField<global::Ydb.Value> items_ = new pbc::RepeatedField<global::Ydb.Value>();
    /// <summary>
    /// Used for List, Tuple, Struct types
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.Value> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "pairs" field.</summary>
    public const int PairsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Ydb.ValuePair> _repeated_pairs_codec
        = pb::FieldCodec.ForMessage(106, global::Ydb.ValuePair.Parser);
    private readonly pbc::RepeatedField<global::Ydb.ValuePair> pairs_ = new pbc::RepeatedField<global::Ydb.ValuePair>();
    /// <summary>
    /// Used for Dict type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.ValuePair> Pairs {
      get { return pairs_; }
    }

    /// <summary>Field number for the "variant_index" field.</summary>
    public const int VariantIndexFieldNumber = 14;
    private uint variantIndex_;
    /// <summary>
    /// Used for Variant type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint VariantIndex {
      get { return variantIndex_; }
      set {
        variantIndex_ = value;
      }
    }

    /// <summary>Field number for the "high_128" field.</summary>
    public const int High128FieldNumber = 16;
    private ulong high128_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong High128 {
      get { return high128_; }
      set {
        high128_ = value;
      }
    }

    private object value_;
    /// <summary>Enum of possible cases for the "value" oneof.</summary>
    public enum ValueOneofCase {
      None = 0,
      BoolValue = 1,
      Int32Value = 2,
      Uint32Value = 3,
      Int64Value = 4,
      Uint64Value = 5,
      FloatValue = 6,
      DoubleValue = 7,
      BytesValue = 8,
      TextValue = 9,
      NullFlagValue = 10,
      NestedValue = 11,
      Low128 = 15,
    }
    private ValueOneofCase valueCase_ = ValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueOneofCase ValueCase {
      get { return valueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      valueCase_ = ValueOneofCase.None;
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Value);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Value other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BoolValue != other.BoolValue) return false;
      if (Int32Value != other.Int32Value) return false;
      if (Uint32Value != other.Uint32Value) return false;
      if (Int64Value != other.Int64Value) return false;
      if (Uint64Value != other.Uint64Value) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FloatValue, other.FloatValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DoubleValue, other.DoubleValue)) return false;
      if (BytesValue != other.BytesValue) return false;
      if (TextValue != other.TextValue) return false;
      if (NullFlagValue != other.NullFlagValue) return false;
      if (!object.Equals(NestedValue, other.NestedValue)) return false;
      if (Low128 != other.Low128) return false;
      if(!items_.Equals(other.items_)) return false;
      if(!pairs_.Equals(other.pairs_)) return false;
      if (VariantIndex != other.VariantIndex) return false;
      if (High128 != other.High128) return false;
      if (ValueCase != other.ValueCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (valueCase_ == ValueOneofCase.BoolValue) hash ^= BoolValue.GetHashCode();
      if (valueCase_ == ValueOneofCase.Int32Value) hash ^= Int32Value.GetHashCode();
      if (valueCase_ == ValueOneofCase.Uint32Value) hash ^= Uint32Value.GetHashCode();
      if (valueCase_ == ValueOneofCase.Int64Value) hash ^= Int64Value.GetHashCode();
      if (valueCase_ == ValueOneofCase.Uint64Value) hash ^= Uint64Value.GetHashCode();
      if (valueCase_ == ValueOneofCase.FloatValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FloatValue);
      if (valueCase_ == ValueOneofCase.DoubleValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DoubleValue);
      if (valueCase_ == ValueOneofCase.BytesValue) hash ^= BytesValue.GetHashCode();
      if (valueCase_ == ValueOneofCase.TextValue) hash ^= TextValue.GetHashCode();
      if (valueCase_ == ValueOneofCase.NullFlagValue) hash ^= NullFlagValue.GetHashCode();
      if (valueCase_ == ValueOneofCase.NestedValue) hash ^= NestedValue.GetHashCode();
      if (valueCase_ == ValueOneofCase.Low128) hash ^= Low128.GetHashCode();
      hash ^= items_.GetHashCode();
      hash ^= pairs_.GetHashCode();
      if (VariantIndex != 0) hash ^= VariantIndex.GetHashCode();
      if (High128 != 0UL) hash ^= High128.GetHashCode();
      hash ^= (int) valueCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (valueCase_ == ValueOneofCase.BoolValue) {
        output.WriteRawTag(8);
        output.WriteBool(BoolValue);
      }
      if (valueCase_ == ValueOneofCase.Int32Value) {
        output.WriteRawTag(21);
        output.WriteSFixed32(Int32Value);
      }
      if (valueCase_ == ValueOneofCase.Uint32Value) {
        output.WriteRawTag(29);
        output.WriteFixed32(Uint32Value);
      }
      if (valueCase_ == ValueOneofCase.Int64Value) {
        output.WriteRawTag(33);
        output.WriteSFixed64(Int64Value);
      }
      if (valueCase_ == ValueOneofCase.Uint64Value) {
        output.WriteRawTag(41);
        output.WriteFixed64(Uint64Value);
      }
      if (valueCase_ == ValueOneofCase.FloatValue) {
        output.WriteRawTag(53);
        output.WriteFloat(FloatValue);
      }
      if (valueCase_ == ValueOneofCase.DoubleValue) {
        output.WriteRawTag(57);
        output.WriteDouble(DoubleValue);
      }
      if (valueCase_ == ValueOneofCase.BytesValue) {
        output.WriteRawTag(66);
        output.WriteBytes(BytesValue);
      }
      if (valueCase_ == ValueOneofCase.TextValue) {
        output.WriteRawTag(74);
        output.WriteString(TextValue);
      }
      if (valueCase_ == ValueOneofCase.NullFlagValue) {
        output.WriteRawTag(80);
        output.WriteEnum((int) NullFlagValue);
      }
      if (valueCase_ == ValueOneofCase.NestedValue) {
        output.WriteRawTag(90);
        output.WriteMessage(NestedValue);
      }
      items_.WriteTo(output, _repeated_items_codec);
      pairs_.WriteTo(output, _repeated_pairs_codec);
      if (VariantIndex != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(VariantIndex);
      }
      if (valueCase_ == ValueOneofCase.Low128) {
        output.WriteRawTag(121);
        output.WriteFixed64(Low128);
      }
      if (High128 != 0UL) {
        output.WriteRawTag(129, 1);
        output.WriteFixed64(High128);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (valueCase_ == ValueOneofCase.BoolValue) {
        output.WriteRawTag(8);
        output.WriteBool(BoolValue);
      }
      if (valueCase_ == ValueOneofCase.Int32Value) {
        output.WriteRawTag(21);
        output.WriteSFixed32(Int32Value);
      }
      if (valueCase_ == ValueOneofCase.Uint32Value) {
        output.WriteRawTag(29);
        output.WriteFixed32(Uint32Value);
      }
      if (valueCase_ == ValueOneofCase.Int64Value) {
        output.WriteRawTag(33);
        output.WriteSFixed64(Int64Value);
      }
      if (valueCase_ == ValueOneofCase.Uint64Value) {
        output.WriteRawTag(41);
        output.WriteFixed64(Uint64Value);
      }
      if (valueCase_ == ValueOneofCase.FloatValue) {
        output.WriteRawTag(53);
        output.WriteFloat(FloatValue);
      }
      if (valueCase_ == ValueOneofCase.DoubleValue) {
        output.WriteRawTag(57);
        output.WriteDouble(DoubleValue);
      }
      if (valueCase_ == ValueOneofCase.BytesValue) {
        output.WriteRawTag(66);
        output.WriteBytes(BytesValue);
      }
      if (valueCase_ == ValueOneofCase.TextValue) {
        output.WriteRawTag(74);
        output.WriteString(TextValue);
      }
      if (valueCase_ == ValueOneofCase.NullFlagValue) {
        output.WriteRawTag(80);
        output.WriteEnum((int) NullFlagValue);
      }
      if (valueCase_ == ValueOneofCase.NestedValue) {
        output.WriteRawTag(90);
        output.WriteMessage(NestedValue);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      pairs_.WriteTo(ref output, _repeated_pairs_codec);
      if (VariantIndex != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(VariantIndex);
      }
      if (valueCase_ == ValueOneofCase.Low128) {
        output.WriteRawTag(121);
        output.WriteFixed64(Low128);
      }
      if (High128 != 0UL) {
        output.WriteRawTag(129, 1);
        output.WriteFixed64(High128);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (valueCase_ == ValueOneofCase.BoolValue) {
        size += 1 + 1;
      }
      if (valueCase_ == ValueOneofCase.Int32Value) {
        size += 1 + 4;
      }
      if (valueCase_ == ValueOneofCase.Uint32Value) {
        size += 1 + 4;
      }
      if (valueCase_ == ValueOneofCase.Int64Value) {
        size += 1 + 8;
      }
      if (valueCase_ == ValueOneofCase.Uint64Value) {
        size += 1 + 8;
      }
      if (valueCase_ == ValueOneofCase.FloatValue) {
        size += 1 + 4;
      }
      if (valueCase_ == ValueOneofCase.DoubleValue) {
        size += 1 + 8;
      }
      if (valueCase_ == ValueOneofCase.BytesValue) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BytesValue);
      }
      if (valueCase_ == ValueOneofCase.TextValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextValue);
      }
      if (valueCase_ == ValueOneofCase.NullFlagValue) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NullFlagValue);
      }
      if (valueCase_ == ValueOneofCase.NestedValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NestedValue);
      }
      if (valueCase_ == ValueOneofCase.Low128) {
        size += 1 + 8;
      }
      size += items_.CalculateSize(_repeated_items_codec);
      size += pairs_.CalculateSize(_repeated_pairs_codec);
      if (VariantIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VariantIndex);
      }
      if (High128 != 0UL) {
        size += 2 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Value other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      pairs_.Add(other.pairs_);
      if (other.VariantIndex != 0) {
        VariantIndex = other.VariantIndex;
      }
      if (other.High128 != 0UL) {
        High128 = other.High128;
      }
      switch (other.ValueCase) {
        case ValueOneofCase.BoolValue:
          BoolValue = other.BoolValue;
          break;
        case ValueOneofCase.Int32Value:
          Int32Value = other.Int32Value;
          break;
        case ValueOneofCase.Uint32Value:
          Uint32Value = other.Uint32Value;
          break;
        case ValueOneofCase.Int64Value:
          Int64Value = other.Int64Value;
          break;
        case ValueOneofCase.Uint64Value:
          Uint64Value = other.Uint64Value;
          break;
        case ValueOneofCase.FloatValue:
          FloatValue = other.FloatValue;
          break;
        case ValueOneofCase.DoubleValue:
          DoubleValue = other.DoubleValue;
          break;
        case ValueOneofCase.BytesValue:
          BytesValue = other.BytesValue;
          break;
        case ValueOneofCase.TextValue:
          TextValue = other.TextValue;
          break;
        case ValueOneofCase.NullFlagValue:
          NullFlagValue = other.NullFlagValue;
          break;
        case ValueOneofCase.NestedValue:
          if (NestedValue == null) {
            NestedValue = new global::Ydb.Value();
          }
          NestedValue.MergeFrom(other.NestedValue);
          break;
        case ValueOneofCase.Low128:
          Low128 = other.Low128;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BoolValue = input.ReadBool();
            break;
          }
          case 21: {
            Int32Value = input.ReadSFixed32();
            break;
          }
          case 29: {
            Uint32Value = input.ReadFixed32();
            break;
          }
          case 33: {
            Int64Value = input.ReadSFixed64();
            break;
          }
          case 41: {
            Uint64Value = input.ReadFixed64();
            break;
          }
          case 53: {
            FloatValue = input.ReadFloat();
            break;
          }
          case 57: {
            DoubleValue = input.ReadDouble();
            break;
          }
          case 66: {
            BytesValue = input.ReadBytes();
            break;
          }
          case 74: {
            TextValue = input.ReadString();
            break;
          }
          case 80: {
            value_ = input.ReadEnum();
            valueCase_ = ValueOneofCase.NullFlagValue;
            break;
          }
          case 90: {
            global::Ydb.Value subBuilder = new global::Ydb.Value();
            if (valueCase_ == ValueOneofCase.NestedValue) {
              subBuilder.MergeFrom(NestedValue);
            }
            input.ReadMessage(subBuilder);
            NestedValue = subBuilder;
            break;
          }
          case 98: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 106: {
            pairs_.AddEntriesFrom(input, _repeated_pairs_codec);
            break;
          }
          case 112: {
            VariantIndex = input.ReadUInt32();
            break;
          }
          case 121: {
            Low128 = input.ReadFixed64();
            break;
          }
          case 129: {
            High128 = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BoolValue = input.ReadBool();
            break;
          }
          case 21: {
            Int32Value = input.ReadSFixed32();
            break;
          }
          case 29: {
            Uint32Value = input.ReadFixed32();
            break;
          }
          case 33: {
            Int64Value = input.ReadSFixed64();
            break;
          }
          case 41: {
            Uint64Value = input.ReadFixed64();
            break;
          }
          case 53: {
            FloatValue = input.ReadFloat();
            break;
          }
          case 57: {
            DoubleValue = input.ReadDouble();
            break;
          }
          case 66: {
            BytesValue = input.ReadBytes();
            break;
          }
          case 74: {
            TextValue = input.ReadString();
            break;
          }
          case 80: {
            value_ = input.ReadEnum();
            valueCase_ = ValueOneofCase.NullFlagValue;
            break;
          }
          case 90: {
            global::Ydb.Value subBuilder = new global::Ydb.Value();
            if (valueCase_ == ValueOneofCase.NestedValue) {
              subBuilder.MergeFrom(NestedValue);
            }
            input.ReadMessage(subBuilder);
            NestedValue = subBuilder;
            break;
          }
          case 98: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
          case 106: {
            pairs_.AddEntriesFrom(ref input, _repeated_pairs_codec);
            break;
          }
          case 112: {
            VariantIndex = input.ReadUInt32();
            break;
          }
          case 121: {
            Low128 = input.ReadFixed64();
            break;
          }
          case 129: {
            High128 = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TypedValue : pb::IMessage<TypedValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TypedValue> _parser = new pb::MessageParser<TypedValue>(() => new TypedValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TypedValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.YdbValueReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypedValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypedValue(TypedValue other) : this() {
      type_ = other.type_ != null ? other.type_.Clone() : null;
      value_ = other.value_ != null ? other.value_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypedValue Clone() {
      return new TypedValue(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Ydb.Type type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private global::Ydb.Value value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Value Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TypedValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TypedValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Type, other.Type)) return false;
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (type_ != null) hash ^= Type.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (type_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Type);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (type_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Type);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (type_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TypedValue other) {
      if (other == null) {
        return;
      }
      if (other.type_ != null) {
        if (type_ == null) {
          Type = new global::Ydb.Type();
        }
        Type.MergeFrom(other.Type);
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::Ydb.Value();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (type_ == null) {
              Type = new global::Ydb.Type();
            }
            input.ReadMessage(Type);
            break;
          }
          case 18: {
            if (value_ == null) {
              Value = new global::Ydb.Value();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (type_ == null) {
              Type = new global::Ydb.Type();
            }
            input.ReadMessage(Type);
            break;
          }
          case 18: {
            if (value_ == null) {
              Value = new global::Ydb.Value();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Column : pb::IMessage<Column>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Column> _parser = new pb::MessageParser<Column>(() => new Column());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Column> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.YdbValueReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Column() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Column(Column other) : this() {
      name_ = other.name_;
      type_ = other.type_ != null ? other.type_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Column Clone() {
      return new Column(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of column
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Ydb.Type type_;
    /// <summary>
    /// Type of column
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Column);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Column other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Type, other.Type)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (type_ != null) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (type_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (type_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (type_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Column other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.type_ != null) {
        if (type_ == null) {
          Type = new global::Ydb.Type();
        }
        Type.MergeFrom(other.Type);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (type_ == null) {
              Type = new global::Ydb.Type();
            }
            input.ReadMessage(Type);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (type_ == null) {
              Type = new global::Ydb.Type();
            }
            input.ReadMessage(Type);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents table-like structure with ordered set of rows and columns
  /// </summary>
  public sealed partial class ResultSet : pb::IMessage<ResultSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResultSet> _parser = new pb::MessageParser<ResultSet>(() => new ResultSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResultSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.YdbValueReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultSet(ResultSet other) : this() {
      columns_ = other.columns_.Clone();
      rows_ = other.rows_.Clone();
      truncated_ = other.truncated_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultSet Clone() {
      return new ResultSet(this);
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Ydb.Column> _repeated_columns_codec
        = pb::FieldCodec.ForMessage(10, global::Ydb.Column.Parser);
    private readonly pbc::RepeatedField<global::Ydb.Column> columns_ = new pbc::RepeatedField<global::Ydb.Column>();
    /// <summary>
    /// Metadata of columns
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.Column> Columns {
      get { return columns_; }
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Ydb.Value> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(18, global::Ydb.Value.Parser);
    private readonly pbc::RepeatedField<global::Ydb.Value> rows_ = new pbc::RepeatedField<global::Ydb.Value>();
    /// <summary>
    /// Rows of table
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.Value> Rows {
      get { return rows_; }
    }

    /// <summary>Field number for the "truncated" field.</summary>
    public const int TruncatedFieldNumber = 3;
    private bool truncated_;
    /// <summary>
    /// Flag indicates the result was truncated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Truncated {
      get { return truncated_; }
      set {
        truncated_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResultSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResultSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!columns_.Equals(other.columns_)) return false;
      if(!rows_.Equals(other.rows_)) return false;
      if (Truncated != other.Truncated) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= columns_.GetHashCode();
      hash ^= rows_.GetHashCode();
      if (Truncated != false) hash ^= Truncated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      columns_.WriteTo(output, _repeated_columns_codec);
      rows_.WriteTo(output, _repeated_rows_codec);
      if (Truncated != false) {
        output.WriteRawTag(24);
        output.WriteBool(Truncated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      columns_.WriteTo(ref output, _repeated_columns_codec);
      rows_.WriteTo(ref output, _repeated_rows_codec);
      if (Truncated != false) {
        output.WriteRawTag(24);
        output.WriteBool(Truncated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += columns_.CalculateSize(_repeated_columns_codec);
      size += rows_.CalculateSize(_repeated_rows_codec);
      if (Truncated != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResultSet other) {
      if (other == null) {
        return;
      }
      columns_.Add(other.columns_);
      rows_.Add(other.rows_);
      if (other.Truncated != false) {
        Truncated = other.Truncated;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            columns_.AddEntriesFrom(input, _repeated_columns_codec);
            break;
          }
          case 18: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
          case 24: {
            Truncated = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            columns_.AddEntriesFrom(ref input, _repeated_columns_codec);
            break;
          }
          case 18: {
            rows_.AddEntriesFrom(ref input, _repeated_rows_codec);
            break;
          }
          case 24: {
            Truncated = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
