// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Ydb/PersQueue/V1/ydb_persqueue_v1.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ydb.PersQueue.V1 {

  /// <summary>Holder for reflection information generated from Ydb/PersQueue/V1/ydb_persqueue_v1.proto</summary>
  public static partial class YdbPersqueueV1Reflection {

    #region Descriptor
    /// <summary>File descriptor for Ydb/PersQueue/V1/ydb_persqueue_v1.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static YdbPersqueueV1Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CidZZGIvUGVyc1F1ZXVlL1YxL3lkYl9wZXJzcXVldWVfdjEucHJvdG8SEFlk",
            "Yi5QZXJzUXVldWUuVjEaIllkYi9PcGVyYXRpb25zL3lkYl9vcGVyYXRpb24u",
            "cHJvdG8aG1lkYi9TY2hlbWUveWRiX3NjaGVtZS5wcm90bxoaWWRiL3lkYl9z",
            "dGF0dXNfY29kZXMucHJvdG8aIVlkYi9Jc3N1ZS95ZGJfaXNzdWVfbWVzc2Fn",
            "ZS5wcm90bxoUWWRiL3ZhbGlkYXRpb24ucHJvdG8ifgoQU2Vzc2lvbk1ldGFW",
            "YWx1ZRI8CgV2YWx1ZRgBIAMoCzItLllkYi5QZXJzUXVldWUuVjEuU2Vzc2lv",
            "bk1ldGFWYWx1ZS5WYWx1ZUVudHJ5GiwKClZhbHVlRW50cnkSCwoDa2V5GAEg",
            "ASgJEg0KBXZhbHVlGAIgASgJOgI4ASI4CgxPZmZzZXRzUmFuZ2USFAoMc3Rh",
            "cnRfb2Zmc2V0GAEgASgDEhIKCmVuZF9vZmZzZXQYAiABKAMihAgKG1N0cmVh",
            "bWluZ1dyaXRlQ2xpZW50TWVzc2FnZRJRCgxpbml0X3JlcXVlc3QYASABKAsy",
            "OS5ZZGIuUGVyc1F1ZXVlLlYxLlN0cmVhbWluZ1dyaXRlQ2xpZW50TWVzc2Fn",
            "ZS5Jbml0UmVxdWVzdEgAElMKDXdyaXRlX3JlcXVlc3QYAiABKAsyOi5ZZGIu",
            "UGVyc1F1ZXVlLlYxLlN0cmVhbWluZ1dyaXRlQ2xpZW50TWVzc2FnZS5Xcml0",
            "ZVJlcXVlc3RIABJgChR1cGRhdGVfdG9rZW5fcmVxdWVzdBgDIAEoCzJALllk",
            "Yi5QZXJzUXVldWUuVjEuU3RyZWFtaW5nV3JpdGVDbGllbnRNZXNzYWdlLlVw",
            "ZGF0ZVRva2VuUmVxdWVzdEgAGpIDCgtJbml0UmVxdWVzdBINCgV0b3BpYxgB",
            "IAEoCRIYChBtZXNzYWdlX2dyb3VwX2lkGAIgASgJEmAKDHNlc3Npb25fbWV0",
            "YRgDIAMoCzJKLllkYi5QZXJzUXVldWUuVjEuU3RyZWFtaW5nV3JpdGVDbGll",
            "bnRNZXNzYWdlLkluaXRSZXF1ZXN0LlNlc3Npb25NZXRhRW50cnkSGgoScGFy",
            "dGl0aW9uX2dyb3VwX2lkGAQgASgDEioKIm1heF9zdXBwb3J0ZWRfYmxvY2tf",
            "Zm9ybWF0X3ZlcnNpb24YBSABKAMSEgoKc2Vzc2lvbl9pZBhkIAEoCRIaChJj",
            "b25uZWN0aW9uX2F0dGVtcHQYZSABKAMSFwoPY29ubmVjdGlvbl9tZXRhGGYg",
            "ASgMEhkKEXByZWZlcnJlZF9jbHVzdGVyGGcgASgJEhgKD2lkbGVfdGltZW91",
            "dF9tcxjIASABKAMaMgoQU2Vzc2lvbk1ldGFFbnRyeRILCgNrZXkYASABKAkS",
            "DQoFdmFsdWUYAiABKAk6AjgBGo4CCgxXcml0ZVJlcXVlc3QSGAoQc2VxdWVu",
            "Y2VfbnVtYmVycxgCIAMoAxIVCg1jcmVhdGVkX2F0X21zGAMgAygDEhIKCnNl",
            "bnRfYXRfbXMYBCADKAMSFQoNbWVzc2FnZV9zaXplcxgFIAMoAxIWCg5ibG9j",
            "a3Nfb2Zmc2V0cxgGIAMoAxIbChNibG9ja3NfcGFydF9udW1iZXJzGAcgAygD",
            "Eh0KFWJsb2Nrc19tZXNzYWdlX2NvdW50cxgIIAMoAxIhChlibG9ja3NfdW5j",
            "b21wcmVzc2VkX3NpemVzGAkgAygDEhYKDmJsb2Nrc19oZWFkZXJzGAogAygM",
            "EhMKC2Jsb2Nrc19kYXRhGAsgAygMGiMKElVwZGF0ZVRva2VuUmVxdWVzdBIN",
            "CgV0b2tlbhgBIAEoCUIQCg5jbGllbnRfbWVzc2FnZSLHCAobU3RyZWFtaW5n",
            "V3JpdGVTZXJ2ZXJNZXNzYWdlElMKDWluaXRfcmVzcG9uc2UYAyABKAsyOi5Z",
            "ZGIuUGVyc1F1ZXVlLlYxLlN0cmVhbWluZ1dyaXRlU2VydmVyTWVzc2FnZS5J",
            "bml0UmVzcG9uc2VIABJgChRiYXRjaF93cml0ZV9yZXNwb25zZRgEIAEoCzJA",
            "LllkYi5QZXJzUXVldWUuVjEuU3RyZWFtaW5nV3JpdGVTZXJ2ZXJNZXNzYWdl",
            "LkJhdGNoV3JpdGVSZXNwb25zZUgAEmIKFXVwZGF0ZV90b2tlbl9yZXNwb25z",
            "ZRgFIAEoCzJBLllkYi5QZXJzUXVldWUuVjEuU3RyZWFtaW5nV3JpdGVTZXJ2",
            "ZXJNZXNzYWdlLlVwZGF0ZVRva2VuUmVzcG9uc2VIABIpCgZzdGF0dXMYASAB",
            "KA4yGS5ZZGIuU3RhdHVzSWRzLlN0YXR1c0NvZGUSJwoGaXNzdWVzGAIgAygL",
            "MhcuWWRiLklzc3VlLklzc3VlTWVzc2FnZRqXAgoMSW5pdFJlc3BvbnNlEhwK",
            "FGxhc3Rfc2VxdWVuY2VfbnVtYmVyGAEgASgDEhIKCnNlc3Npb25faWQYAiAB",
            "KAkSDQoFdG9waWMYAyABKAkSDwoHY2x1c3RlchgEIAEoCRIUCgxwYXJ0aXRp",
            "b25faWQYBSABKAMSHAoUYmxvY2tfZm9ybWF0X3ZlcnNpb24YBiABKAMSMQoQ",
            "c3VwcG9ydGVkX2NvZGVjcxgKIAMoDjIXLllkYi5QZXJzUXVldWUuVjEuQ29k",
            "ZWMSHQoVbWF4X2ZsdXNoX3dpbmRvd19zaXplGAcgASgDEhYKDm1heF9ibG9j",
            "a19zaXplGAggASgDEhcKD2Nvbm5lY3Rpb25fbWV0YRgJIAEoDBrHAQoSQmF0",
            "Y2hXcml0ZVJlc3BvbnNlEhgKEHNlcXVlbmNlX251bWJlcnMYASADKAMSDwoH",
            "b2Zmc2V0cxgCIAMoAxIXCg9hbHJlYWR5X3dyaXR0ZW4YAyADKAgSFAoMcGFy",
            "dGl0aW9uX2lkGAQgASgDElcKEHdyaXRlX3N0YXRpc3RpY3MYBSABKAsyPS5Z",
            "ZGIuUGVyc1F1ZXVlLlYxLlN0cmVhbWluZ1dyaXRlU2VydmVyTWVzc2FnZS5X",
            "cml0ZVN0YXRpc3RpY3MaFQoTVXBkYXRlVG9rZW5SZXNwb25zZRqrAQoPV3Jp",
            "dGVTdGF0aXN0aWNzEhsKE3BlcnNpc3RfZHVyYXRpb25fbXMYASABKAMSJwof",
            "cXVldWVkX2luX3BhcnRpdGlvbl9kdXJhdGlvbl9tcxgCIAEoAxIqCiJ0aHJv",
            "dHRsZWRfb25fcGFydGl0aW9uX2R1cmF0aW9uX21zGAMgASgDEiYKHnRocm90",
            "dGxlZF9vbl90b3BpY19kdXJhdGlvbl9tcxgEIAEoA0IQCg5zZXJ2ZXJfbWVz",
            "c2FnZSIUCgRQYXRoEgwKBHBhdGgYASABKAkiJgoIS2V5VmFsdWUSCwoDa2V5",
            "GAEgASgJEg0KBXZhbHVlGAIgASgJIkQKClJlYWRQYXJhbXMSHwoXbWF4X3Jl",
            "YWRfbWVzc2FnZXNfY291bnQYASABKA0SFQoNbWF4X3JlYWRfc2l6ZRgCIAEo",
            "DSI7CgxDb21taXRDb29raWUSEQoJYXNzaWduX2lkGAEgASgEEhgKEHBhcnRp",
            "dGlvbl9jb29raWUYAiABKAQiUAoRQ29tbWl0T2Zmc2V0UmFuZ2USEQoJYXNz",
            "aWduX2lkGAEgASgEEhQKDHN0YXJ0X29mZnNldBgCIAEoBBISCgplbmRfb2Zm",
            "c2V0GAMgASgEIu4WCh1TdHJlYW1pbmdSZWFkQ2xpZW50TWVzc2FnZU5ldxJT",
            "Cgxpbml0X3JlcXVlc3QYASABKAsyOy5ZZGIuUGVyc1F1ZXVlLlYxLlN0cmVh",
            "bWluZ1JlYWRDbGllbnRNZXNzYWdlTmV3LkluaXRSZXF1ZXN0SAASUwoMcmVh",
            "ZF9yZXF1ZXN0GAIgASgLMjsuWWRiLlBlcnNRdWV1ZS5WMS5TdHJlYW1pbmdS",
            "ZWFkQ2xpZW50TWVzc2FnZU5ldy5SZWFkUmVxdWVzdEgAEnkKIGNyZWF0ZV9w",
            "YXJ0aXRpb25fc3RyZWFtX3Jlc3BvbnNlGAMgASgLMk0uWWRiLlBlcnNRdWV1",
            "ZS5WMS5TdHJlYW1pbmdSZWFkQ2xpZW50TWVzc2FnZU5ldy5DcmVhdGVQYXJ0",
            "aXRpb25TdHJlYW1SZXNwb25zZUgAElcKDmNvbW1pdF9yZXF1ZXN0GAQgASgL",
            "Mj0uWWRiLlBlcnNRdWV1ZS5WMS5TdHJlYW1pbmdSZWFkQ2xpZW50TWVzc2Fn",
            "ZU5ldy5Db21taXRSZXF1ZXN0SAASewohZGVzdHJveV9wYXJ0aXRpb25fc3Ry",
            "ZWFtX3Jlc3BvbnNlGAUgASgLMk4uWWRiLlBlcnNRdWV1ZS5WMS5TdHJlYW1p",
            "bmdSZWFkQ2xpZW50TWVzc2FnZU5ldy5EZXN0cm95UGFydGl0aW9uU3RyZWFt",
            "UmVzcG9uc2VIABJcChFzdG9wX3JlYWRfcmVxdWVzdBgGIAEoCzI/LllkYi5Q",
            "ZXJzUXVldWUuVjEuU3RyZWFtaW5nUmVhZENsaWVudE1lc3NhZ2VOZXcuU3Rv",
            "cFJlYWRSZXF1ZXN0SAASYAoTcmVzdW1lX3JlYWRfcmVxdWVzdBgHIAEoCzJB",
            "LllkYi5QZXJzUXVldWUuVjEuU3RyZWFtaW5nUmVhZENsaWVudE1lc3NhZ2VO",
            "ZXcuUmVzdW1lUmVhZFJlcXVlc3RIABJ3Ch9wYXJ0aXRpb25fc3RyZWFtX3N0",
            "YXR1c19yZXF1ZXN0GAggASgLMkwuWWRiLlBlcnNRdWV1ZS5WMS5TdHJlYW1p",
            "bmdSZWFkQ2xpZW50TWVzc2FnZU5ldy5QYXJ0aXRpb25TdHJlYW1TdGF0dXNS",
            "ZXF1ZXN0SAASXAoRYWRkX3RvcGljX3JlcXVlc3QYCSABKAsyPy5ZZGIuUGVy",
            "c1F1ZXVlLlYxLlN0cmVhbWluZ1JlYWRDbGllbnRNZXNzYWdlTmV3LkFkZFRv",
            "cGljUmVxdWVzdEgAEmIKFHJlbW92ZV90b3BpY19yZXF1ZXN0GAogASgLMkIu",
            "WWRiLlBlcnNRdWV1ZS5WMS5TdHJlYW1pbmdSZWFkQ2xpZW50TWVzc2FnZU5l",
            "dy5SZW1vdmVUb3BpY1JlcXVlc3RIABINCgV0b2tlbhgUIAEoCRqvBwoLSW5p",
            "dFJlcXVlc3QSXwoUdG9waWNzX3JlYWRfc2V0dGluZ3MYASADKAsyQS5ZZGIu",
            "UGVyc1F1ZXVlLlYxLlN0cmVhbWluZ1JlYWRDbGllbnRNZXNzYWdlTmV3LlRv",
            "cGljUmVhZFNldHRpbmdzEhoKEnJlYWRfb25seV9vcmlnaW5hbBgCIAEoCBIQ",
            "Cghjb25zdW1lchgDIAEoCRIbChNtYXhfbGFnX2R1cmF0aW9uX21zGAQgASgD",
            "EiAKGHN0YXJ0X2Zyb21fd3JpdHRlbl9hdF9tcxgFIAEoAxIqCiJtYXhfc3Vw",
            "cG9ydGVkX2Jsb2NrX2Zvcm1hdF92ZXJzaW9uGAYgASgDEhsKE21heF9tZXRh",
            "X2NhY2hlX3NpemUYCiABKAMSEgoKc2Vzc2lvbl9pZBhkIAEoCRIaChJjb25u",
            "ZWN0aW9uX2F0dGVtcHQYZSABKAMSUAoFc3RhdGUYZiABKAsyQS5ZZGIuUGVy",
            "c1F1ZXVlLlYxLlN0cmVhbWluZ1JlYWRDbGllbnRNZXNzYWdlTmV3LkluaXRS",
            "ZXF1ZXN0LlN0YXRlEhgKD2lkbGVfdGltZW91dF9tcxjIASABKAMa7AMKBVN0",
            "YXRlEngKGHBhcnRpdGlvbl9zdHJlYW1zX3N0YXRlcxgBIAMoCzJWLllkYi5Q",
            "ZXJzUXVldWUuVjEuU3RyZWFtaW5nUmVhZENsaWVudE1lc3NhZ2VOZXcuSW5p",
            "dFJlcXVlc3QuU3RhdGUuUGFydGl0aW9uU3RyZWFtU3RhdGUa6AIKFFBhcnRp",
            "dGlvblN0cmVhbVN0YXRlEjsKEHBhcnRpdGlvbl9zdHJlYW0YASABKAsyIS5Z",
            "ZGIuUGVyc1F1ZXVlLlYxLlBhcnRpdGlvblN0cmVhbRITCgtyZWFkX29mZnNl",
            "dBgCIAEoAxI1Cg1vZmZzZXRfcmFuZ2VzGAMgAygLMh4uWWRiLlBlcnNRdWV1",
            "ZS5WMS5PZmZzZXRzUmFuZ2USbQoGc3RhdHVzGAQgASgOMl0uWWRiLlBlcnNR",
            "dWV1ZS5WMS5TdHJlYW1pbmdSZWFkQ2xpZW50TWVzc2FnZU5ldy5Jbml0UmVx",
            "dWVzdC5TdGF0ZS5QYXJ0aXRpb25TdHJlYW1TdGF0ZS5TdGF0dXMiWAoGU3Rh",
            "dHVzEhYKElNUQVRVU19VTlNQRUNJRklFRBAAEgwKCENSRUFUSU5HEAESDgoK",
            "REVTVFJPWUlORxACEgsKB1JFQURJTkcQAxILCgdTVE9QUEVEEAQaMAoLUmVh",
            "ZFJlcXVlc3QSIQoZcmVxdWVzdF91bmNvbXByZXNzZWRfc2l6ZRgBIAEoAxqE",
            "AQodQ3JlYXRlUGFydGl0aW9uU3RyZWFtUmVzcG9uc2USGwoTcGFydGl0aW9u",
            "X3N0cmVhbV9pZBgBIAEoAxITCgtyZWFkX29mZnNldBgCIAEoAxIVCg1jb21t",
            "aXRfb2Zmc2V0GAMgASgDEhoKEnZlcmlmeV9yZWFkX29mZnNldBgEIAEoCBo9",
            "Ch5EZXN0cm95UGFydGl0aW9uU3RyZWFtUmVzcG9uc2USGwoTcGFydGl0aW9u",
            "X3N0cmVhbV9pZBgBIAEoAxovCg9TdG9wUmVhZFJlcXVlc3QSHAoUcGFydGl0",
            "aW9uX3N0cmVhbV9pZHMYASADKAMaXwoRUmVzdW1lUmVhZFJlcXVlc3QSHAoU",
            "cGFydGl0aW9uX3N0cmVhbV9pZHMYASADKAMSFAoMcmVhZF9vZmZzZXRzGAIg",
            "AygDEhYKDnJlc3VtZV9jb29raWVzGAMgAygDGmEKDUNvbW1pdFJlcXVlc3QS",
            "UAoHY29tbWl0cxgBIAMoCzI/LllkYi5QZXJzUXVldWUuVjEuU3RyZWFtaW5n",
            "UmVhZENsaWVudE1lc3NhZ2VOZXcuUGFydGl0aW9uQ29tbWl0GjsKHFBhcnRp",
            "dGlvblN0cmVhbVN0YXR1c1JlcXVlc3QSGwoTcGFydGl0aW9uX3N0cmVhbV9p",
            "ZBgBIAEoAxpxCg9BZGRUb3BpY1JlcXVlc3QSXgoTdG9waWNfcmVhZF9zZXR0",
            "aW5ncxgBIAEoCzJBLllkYi5QZXJzUXVldWUuVjEuU3RyZWFtaW5nUmVhZENs",
            "aWVudE1lc3NhZ2VOZXcuVG9waWNSZWFkU2V0dGluZ3MaIwoSUmVtb3ZlVG9w",
            "aWNSZXF1ZXN0Eg0KBXRvcGljGAEgASgJGmEKEVRvcGljUmVhZFNldHRpbmdz",
            "Eg0KBXRvcGljGAEgASgJEhsKE3BhcnRpdGlvbl9ncm91cF9pZHMYAiADKAMS",
            "IAoYc3RhcnRfZnJvbV93cml0dGVuX2F0X21zGAMgASgDGl8KD1BhcnRpdGlv",
            "bkNvbW1pdBIbChNwYXJ0aXRpb25fc3RyZWFtX2lkGAEgASgDEi8KB29mZnNl",
            "dHMYAiADKAsyHi5ZZGIuUGVyc1F1ZXVlLlYxLk9mZnNldHNSYW5nZUIQCg5j",
            "bGllbnRfbWVzc2FnZSL4GQodU3RyZWFtaW5nUmVhZFNlcnZlck1lc3NhZ2VO",
            "ZXcSVQoNaW5pdF9yZXNwb25zZRgDIAEoCzI8LllkYi5QZXJzUXVldWUuVjEu",
            "U3RyZWFtaW5nUmVhZFNlcnZlck1lc3NhZ2VOZXcuSW5pdFJlc3BvbnNlSAAS",
            "YAoTYmF0Y2hfcmVhZF9yZXNwb25zZRgEIAEoCzJBLllkYi5QZXJzUXVldWUu",
            "VjEuU3RyZWFtaW5nUmVhZFNlcnZlck1lc3NhZ2VOZXcuQmF0Y2hSZWFkUmVz",
            "cG9uc2VIABJ3Ch9jcmVhdGVfcGFydGl0aW9uX3N0cmVhbV9yZXF1ZXN0GAUg",
            "ASgLMkwuWWRiLlBlcnNRdWV1ZS5WMS5TdHJlYW1pbmdSZWFkU2VydmVyTWVz",
            "c2FnZU5ldy5DcmVhdGVQYXJ0aXRpb25TdHJlYW1SZXF1ZXN0SAASeQogZGVz",
            "dHJveV9wYXJ0aXRpb25fc3RyZWFtX3JlcXVlc3QYBiABKAsyTS5ZZGIuUGVy",
            "c1F1ZXVlLlYxLlN0cmVhbWluZ1JlYWRTZXJ2ZXJNZXNzYWdlTmV3LkRlc3Ry",
            "b3lQYXJ0aXRpb25TdHJlYW1SZXF1ZXN0SAASWQoPY29tbWl0X3Jlc3BvbnNl",
            "GAcgASgLMj4uWWRiLlBlcnNRdWV1ZS5WMS5TdHJlYW1pbmdSZWFkU2VydmVy",
            "TWVzc2FnZU5ldy5Db21taXRSZXNwb25zZUgAEnkKIHBhcnRpdGlvbl9zdHJl",
            "YW1fc3RhdHVzX3Jlc3BvbnNlGAggASgLMk0uWWRiLlBlcnNRdWV1ZS5WMS5T",
            "dHJlYW1pbmdSZWFkU2VydmVyTWVzc2FnZU5ldy5QYXJ0aXRpb25TdHJlYW1T",
            "dGF0dXNSZXNwb25zZUgAEl4KEnN0b3BfcmVhZF9yZXNwb25zZRgJIAEoCzJA",
            "LllkYi5QZXJzUXVldWUuVjEuU3RyZWFtaW5nUmVhZFNlcnZlck1lc3NhZ2VO",
            "ZXcuU3RvcFJlYWRSZXNwb25zZUgAEmIKFHJlc3VtZV9yZWFkX3Jlc3BvbnNl",
            "GAogASgLMkIuWWRiLlBlcnNRdWV1ZS5WMS5TdHJlYW1pbmdSZWFkU2VydmVy",
            "TWVzc2FnZU5ldy5SZXN1bWVSZWFkUmVzcG9uc2VIABJeChJhZGRfdG9waWNf",
            "cmVzcG9uc2UYCyABKAsyQC5ZZGIuUGVyc1F1ZXVlLlYxLlN0cmVhbWluZ1Jl",
            "YWRTZXJ2ZXJNZXNzYWdlTmV3LkFkZFRvcGljUmVzcG9uc2VIABJkChVyZW1v",
            "dmVfdG9waWNfcmVzcG9uc2UYDCABKAsyQy5ZZGIuUGVyc1F1ZXVlLlYxLlN0",
            "cmVhbWluZ1JlYWRTZXJ2ZXJNZXNzYWdlTmV3LlJlbW92ZVRvcGljUmVzcG9u",
            "c2VIABIpCgZzdGF0dXMYASABKA4yGS5ZZGIuU3RhdHVzSWRzLlN0YXR1c0Nv",
            "ZGUSJwoGaXNzdWVzGAIgAygLMhcuWWRiLklzc3VlLklzc3VlTWVzc2FnZRqG",
            "AgoMSW5pdFJlc3BvbnNlEhIKCnNlc3Npb25faWQYASABKAkSggEKHWJsb2Nr",
            "X2Zvcm1hdF92ZXJzaW9uX2J5X3RvcGljGAIgAygLMlsuWWRiLlBlcnNRdWV1",
            "ZS5WMS5TdHJlYW1pbmdSZWFkU2VydmVyTWVzc2FnZU5ldy5Jbml0UmVzcG9u",
            "c2UuQmxvY2tGb3JtYXRWZXJzaW9uQnlUb3BpY0VudHJ5EhsKE21heF9tZXRh",
            "X2NhY2hlX3NpemUYCiABKAMaQAoeQmxvY2tGb3JtYXRWZXJzaW9uQnlUb3Bp",
            "Y0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoAzoCOAEaiQEKHENy",
            "ZWF0ZVBhcnRpdGlvblN0cmVhbVJlcXVlc3QSOwoQcGFydGl0aW9uX3N0cmVh",
            "bRgBIAEoCzIhLllkYi5QZXJzUXVldWUuVjEuUGFydGl0aW9uU3RyZWFtEhgK",
            "EGNvbW1pdHRlZF9vZmZzZXQYAiABKAMSEgoKZW5kX29mZnNldBgDIAEoAxpo",
            "Ch1EZXN0cm95UGFydGl0aW9uU3RyZWFtUmVxdWVzdBIbChNwYXJ0aXRpb25f",
            "c3RyZWFtX2lkGAEgASgDEhAKCGdyYWNlZnVsGAIgASgIEhgKEGNvbW1pdHRl",
            "ZF9vZmZzZXQYAyABKAMa4gEKDkNvbW1pdFJlc3BvbnNlEn0KHHBhcnRpdGlv",
            "bnNfY29tbWl0dGVkX29mZnNldHMYASADKAsyVy5ZZGIuUGVyc1F1ZXVlLlYx",
            "LlN0cmVhbWluZ1JlYWRTZXJ2ZXJNZXNzYWdlTmV3LkNvbW1pdFJlc3BvbnNl",
            "LlBhcnRpdGlvbkNvbW1pdHRlZE9mZnNldBpRChhQYXJ0aXRpb25Db21taXR0",
            "ZWRPZmZzZXQSGwoTcGFydGl0aW9uX3N0cmVhbV9pZBgBIAEoAxIYChBjb21t",
            "aXR0ZWRfb2Zmc2V0GAIgASgDGv4IChFCYXRjaFJlYWRSZXNwb25zZRJfCgpz",
            "a2lwX3JhbmdlGAEgAygLMksuWWRiLlBlcnNRdWV1ZS5WMS5TdHJlYW1pbmdS",
            "ZWFkU2VydmVyTWVzc2FnZU5ldy5CYXRjaFJlYWRSZXNwb25zZS5Ta2lwUmFu",
            "Z2USYwoKcGFydGl0aW9ucxgCIAMoCzJPLllkYi5QZXJzUXVldWUuVjEuU3Ry",
            "ZWFtaW5nUmVhZFNlcnZlck1lc3NhZ2VOZXcuQmF0Y2hSZWFkUmVzcG9uc2Uu",
            "UGFydGl0aW9uRGF0YRrEBgoNUGFydGl0aW9uRGF0YRIbChNwYXJ0aXRpb25f",
            "c3RyZWFtX2lkGAEgASgDEg8KB29mZnNldHMYAiADKAMSGAoQc2VxdWVuY2Vf",
            "bnVtYmVycxgDIAMoAxIVCg1jcmVhdGVkX2F0X21zGAQgAygDEhUKDXdyaXR0",
            "ZW5fYXRfbXMYBSADKAMSGQoRbWVzc2FnZV9ncm91cF9pZHMYBiADKAkSIAoY",
            "bWVzc2FnZV9ncm91cF9pZF9pbmRleGVzGAcgAygSEgsKA2lwcxgIIAMoCRIS",
            "CgppcF9pbmRleGVzGAkgAygSEkAKFG1lc3NhZ2Vfc2Vzc2lvbl9tZXRhGAog",
            "AygLMiIuWWRiLlBlcnNRdWV1ZS5WMS5TZXNzaW9uTWV0YVZhbHVlEiQKHG1l",
            "c3NhZ2Vfc2Vzc2lvbl9tZXRhX2luZGV4ZXMYCyADKBISFQoNbWVzc2FnZV9z",
            "aXplcxgMIAMoAxIWCg5ibG9ja3Nfb2Zmc2V0cxgNIAMoAxIbChNibG9ja3Nf",
            "cGFydF9udW1iZXJzGA4gAygDEh0KFWJsb2Nrc19tZXNzYWdlX2NvdW50cxgP",
            "IAMoAxIhChlibG9ja3NfdW5jb21wcmVzc2VkX3NpemVzGBAgAygDEhYKDmJs",
            "b2Nrc19oZWFkZXJzGBEgAygMEhMKC2Jsb2Nrc19kYXRhGBIgAygMEhUKDXJl",
            "c3VtZV9jb29raWUYMiABKAMSdwoPcmVhZF9zdGF0aXN0aWNzGGQgASgLMl4u",
            "WWRiLlBlcnNRdWV1ZS5WMS5TdHJlYW1pbmdSZWFkU2VydmVyTWVzc2FnZU5l",
            "dy5CYXRjaFJlYWRSZXNwb25zZS5QYXJ0aXRpb25EYXRhLlJlYWRTdGF0aXN0",
            "aWNzGqsBCg5SZWFkU3RhdGlzdGljcxIYChBibG9ic19mcm9tX2NhY2hlGAEg",
            "ASgDEhcKD2Jsb2JzX2Zyb21fZGlzaxgCIAEoAxIXCg9ieXRlc19mcm9tX2hl",
            "YWQYAyABKAMSGAoQYnl0ZXNfZnJvbV9jYWNoZRgEIAEoAxIXCg9ieXRlc19m",
            "cm9tX2Rpc2sYBSABKAMSGgoScmVwYWNrX2R1cmF0aW9uX21zGAYgASgDGlwK",
            "CVNraXBSYW5nZRIbChNwYXJ0aXRpb25fc3RyZWFtX2lkGAEgASgDEjIKCnNr",
            "aXBfcmFuZ2UYAiABKAsyHi5ZZGIuUGVyc1F1ZXVlLlYxLk9mZnNldHNSYW5n",
            "ZRqLAQodUGFydGl0aW9uU3RyZWFtU3RhdHVzUmVzcG9uc2USGwoTcGFydGl0",
            "aW9uX3N0cmVhbV9pZBgBIAEoAxIYChBjb21taXR0ZWRfb2Zmc2V0GAIgASgD",
            "EhIKCmVuZF9vZmZzZXQYAyABKAMSHwoXd3JpdHRlbl9hdF93YXRlcm1hcmtf",
            "bXMYBCABKAMaEgoQU3RvcFJlYWRSZXNwb25zZRoUChJSZXN1bWVSZWFkUmVz",
            "cG9uc2UaMAoQQWRkVG9waWNSZXNwb25zZRIcChRibG9ja19mb3JtYXRfdmVy",
            "c2lvbhgBIAEoAxoVChNSZW1vdmVUb3BpY1Jlc3BvbnNlQhAKDnNlcnZlcl9t",
            "ZXNzYWdlIpkBCg9QYXJ0aXRpb25TdHJlYW0SDQoFdG9waWMYASABKAkSDwoH",
            "Y2x1c3RlchgCIAEoCRIUCgxwYXJ0aXRpb25faWQYAyABKAMSGgoScGFydGl0",
            "aW9uX2dyb3VwX2lkGAQgASgDEhsKE3BhcnRpdGlvbl9zdHJlYW1faWQYBiAB",
            "KAMSFwoPY29ubmVjdGlvbl9tZXRhGAcgASgMIqwRCiNNaWdyYXRpb25TdHJl",
            "YW1pbmdSZWFkQ2xpZW50TWVzc2FnZRJZCgxpbml0X3JlcXVlc3QYASABKAsy",
            "QS5ZZGIuUGVyc1F1ZXVlLlYxLk1pZ3JhdGlvblN0cmVhbWluZ1JlYWRDbGll",
            "bnRNZXNzYWdlLkluaXRSZXF1ZXN0SAASSgoEcmVhZBgCIAEoCzI6LllkYi5Q",
            "ZXJzUXVldWUuVjEuTWlncmF0aW9uU3RyZWFtaW5nUmVhZENsaWVudE1lc3Nh",
            "Z2UuUmVhZEgAElUKCnN0YXJ0X3JlYWQYAyABKAsyPy5ZZGIuUGVyc1F1ZXVl",
            "LlYxLk1pZ3JhdGlvblN0cmVhbWluZ1JlYWRDbGllbnRNZXNzYWdlLlN0YXJ0",
            "UmVhZEgAEk4KBmNvbW1pdBgEIAEoCzI8LllkYi5QZXJzUXVldWUuVjEuTWln",
            "cmF0aW9uU3RyZWFtaW5nUmVhZENsaWVudE1lc3NhZ2UuQ29tbWl0SAASUgoI",
            "cmVsZWFzZWQYBSABKAsyPi5ZZGIuUGVyc1F1ZXVlLlYxLk1pZ3JhdGlvblN0",
            "cmVhbWluZ1JlYWRDbGllbnRNZXNzYWdlLlJlbGVhc2VkSAASTgoGc3RhdHVz",
            "GAYgASgLMjwuWWRiLlBlcnNRdWV1ZS5WMS5NaWdyYXRpb25TdHJlYW1pbmdS",
            "ZWFkQ2xpZW50TWVzc2FnZS5TdGF0dXNIABINCgV0b2tlbhgUIAEoDBphChFU",
            "b3BpY1JlYWRTZXR0aW5ncxINCgV0b3BpYxgBIAEoCRIbChNwYXJ0aXRpb25f",
            "Z3JvdXBfaWRzGAIgAygDEiAKGHN0YXJ0X2Zyb21fd3JpdHRlbl9hdF9tcxgD",
            "IAEoAxqQCAoLSW5pdFJlcXVlc3QSZQoUdG9waWNzX3JlYWRfc2V0dGluZ3MY",
            "ASADKAsyRy5ZZGIuUGVyc1F1ZXVlLlYxLk1pZ3JhdGlvblN0cmVhbWluZ1Jl",
            "YWRDbGllbnRNZXNzYWdlLlRvcGljUmVhZFNldHRpbmdzEhoKEnJlYWRfb25s",
            "eV9vcmlnaW5hbBgCIAEoCBIQCghjb25zdW1lchgDIAEoCRIbChNtYXhfbGFn",
            "X2R1cmF0aW9uX21zGAQgASgDEiAKGHN0YXJ0X2Zyb21fd3JpdHRlbl9hdF9t",
            "cxgFIAEoAxIqCiJtYXhfc3VwcG9ydGVkX2Jsb2NrX2Zvcm1hdF92ZXJzaW9u",
            "GAYgASgDEhsKE21heF9tZXRhX2NhY2hlX3NpemUYCiABKAMSEgoKc2Vzc2lv",
            "bl9pZBhkIAEoCRIaChJjb25uZWN0aW9uX2F0dGVtcHQYZSABKAMSVgoFc3Rh",
            "dGUYZiABKAsyRy5ZZGIuUGVyc1F1ZXVlLlYxLk1pZ3JhdGlvblN0cmVhbWlu",
            "Z1JlYWRDbGllbnRNZXNzYWdlLkluaXRSZXF1ZXN0LlN0YXRlEhgKD2lkbGVf",
            "dGltZW91dF9tcxjIASABKAMSMQoLcmVhZF9wYXJhbXMYKiABKAsyHC5ZZGIu",
            "UGVyc1F1ZXVlLlYxLlJlYWRQYXJhbXMSFAoLcmFuZ2VzX21vZGUYugMgASgI",
            "GvgDCgVTdGF0ZRJ+ChhwYXJ0aXRpb25fc3RyZWFtc19zdGF0ZXMYASADKAsy",
            "XC5ZZGIuUGVyc1F1ZXVlLlYxLk1pZ3JhdGlvblN0cmVhbWluZ1JlYWRDbGll",
            "bnRNZXNzYWdlLkluaXRSZXF1ZXN0LlN0YXRlLlBhcnRpdGlvblN0cmVhbVN0",
            "YXRlGu4CChRQYXJ0aXRpb25TdHJlYW1TdGF0ZRI7ChBwYXJ0aXRpb25fc3Ry",
            "ZWFtGAEgASgLMiEuWWRiLlBlcnNRdWV1ZS5WMS5QYXJ0aXRpb25TdHJlYW0S",
            "EwoLcmVhZF9vZmZzZXQYAiABKAMSNQoNb2Zmc2V0X3JhbmdlcxgDIAMoCzIe",
            "LllkYi5QZXJzUXVldWUuVjEuT2Zmc2V0c1JhbmdlEnMKBnN0YXR1cxgEIAEo",
            "DjJjLllkYi5QZXJzUXVldWUuVjEuTWlncmF0aW9uU3RyZWFtaW5nUmVhZENs",
            "aWVudE1lc3NhZ2UuSW5pdFJlcXVlc3QuU3RhdGUuUGFydGl0aW9uU3RyZWFt",
            "U3RhdGUuU3RhdHVzIlgKBlN0YXR1cxIWChJTVEFUVVNfVU5TUEVDSUZJRUQQ",
            "ABIMCghDUkVBVElORxABEg4KCkRFU1RST1lJTkcQAhILCgdSRUFESU5HEAMS",
            "CwoHU1RPUFBFRBAEGgYKBFJlYWQasQEKCVN0YXJ0UmVhZBIlCgV0b3BpYxgB",
            "IAEoCzIWLllkYi5QZXJzUXVldWUuVjEuUGF0aBIPCgdjbHVzdGVyGAIgASgJ",
            "EhEKCXBhcnRpdGlvbhgDIAEoBBIRCglhc3NpZ25faWQYBSABKAQSEwoLcmVh",
            "ZF9vZmZzZXQYBiABKAQSFQoNY29tbWl0X29mZnNldBgHIAEoBBIaChJ2ZXJp",
            "ZnlfcmVhZF9vZmZzZXQYCCABKAgaaAoIUmVsZWFzZWQSJQoFdG9waWMYASAB",
            "KAsyFi5ZZGIuUGVyc1F1ZXVlLlYxLlBhdGgSDwoHY2x1c3RlchgCIAEoCRIR",
            "CglwYXJ0aXRpb24YAyABKAQSEQoJYXNzaWduX2lkGAUgASgEGnUKBkNvbW1p",
            "dBIvCgdjb29raWVzGAEgAygLMh4uWWRiLlBlcnNRdWV1ZS5WMS5Db21taXRD",
            "b29raWUSOgoNb2Zmc2V0X3JhbmdlcxgCIAMoCzIjLllkYi5QZXJzUXVldWUu",
            "VjEuQ29tbWl0T2Zmc2V0UmFuZ2UaZgoGU3RhdHVzEiUKBXRvcGljGAEgASgL",
            "MhYuWWRiLlBlcnNRdWV1ZS5WMS5QYXRoEg8KB2NsdXN0ZXIYAiABKAkSEQoJ",
            "cGFydGl0aW9uGAMgASgEEhEKCWFzc2lnbl9pZBgFIAEoBEIJCgdyZXF1ZXN0",
            "IqYSCiNNaWdyYXRpb25TdHJlYW1pbmdSZWFkU2VydmVyTWVzc2FnZRIpCgZz",
            "dGF0dXMYASABKA4yGS5ZZGIuU3RhdHVzSWRzLlN0YXR1c0NvZGUSJwoGaXNz",
            "dWVzGAIgAygLMhcuWWRiLklzc3VlLklzc3VlTWVzc2FnZRJbCg1pbml0X3Jl",
            "c3BvbnNlGAMgASgLMkIuWWRiLlBlcnNRdWV1ZS5WMS5NaWdyYXRpb25TdHJl",
            "YW1pbmdSZWFkU2VydmVyTWVzc2FnZS5Jbml0UmVzcG9uc2VIABJVCgpkYXRh",
            "X2JhdGNoGAQgASgLMj8uWWRiLlBlcnNRdWV1ZS5WMS5NaWdyYXRpb25TdHJl",
            "YW1pbmdSZWFkU2VydmVyTWVzc2FnZS5EYXRhQmF0Y2hIABJSCghhc3NpZ25l",
            "ZBgFIAEoCzI+LllkYi5QZXJzUXVldWUuVjEuTWlncmF0aW9uU3RyZWFtaW5n",
            "UmVhZFNlcnZlck1lc3NhZ2UuQXNzaWduZWRIABJQCgdyZWxlYXNlGAYgASgL",
            "Mj0uWWRiLlBlcnNRdWV1ZS5WMS5NaWdyYXRpb25TdHJlYW1pbmdSZWFkU2Vy",
            "dmVyTWVzc2FnZS5SZWxlYXNlSAASVAoJY29tbWl0dGVkGAcgASgLMj8uWWRi",
            "LlBlcnNRdWV1ZS5WMS5NaWdyYXRpb25TdHJlYW1pbmdSZWFkU2VydmVyTWVz",
            "c2FnZS5Db21taXR0ZWRIABJhChBwYXJ0aXRpb25fc3RhdHVzGAggASgLMkUu",
            "WWRiLlBlcnNRdWV1ZS5WMS5NaWdyYXRpb25TdHJlYW1pbmdSZWFkU2VydmVy",
            "TWVzc2FnZS5QYXJ0aXRpb25TdGF0dXNIABqMAgoMSW5pdFJlc3BvbnNlEhIK",
            "CnNlc3Npb25faWQYASABKAkSiAEKHWJsb2NrX2Zvcm1hdF92ZXJzaW9uX2J5",
            "X3RvcGljGAIgAygLMmEuWWRiLlBlcnNRdWV1ZS5WMS5NaWdyYXRpb25TdHJl",
            "YW1pbmdSZWFkU2VydmVyTWVzc2FnZS5Jbml0UmVzcG9uc2UuQmxvY2tGb3Jt",
            "YXRWZXJzaW9uQnlUb3BpY0VudHJ5EhsKE21heF9tZXRhX2NhY2hlX3NpemUY",
            "CiABKAMaQAoeQmxvY2tGb3JtYXRWZXJzaW9uQnlUb3BpY0VudHJ5EgsKA2tl",
            "eRgBIAEoCRINCgV2YWx1ZRgCIAEoAzoCOAEakQEKCEFzc2lnbmVkEiUKBXRv",
            "cGljGAEgASgLMhYuWWRiLlBlcnNRdWV1ZS5WMS5QYXRoEg8KB2NsdXN0ZXIY",
            "AiABKAkSEQoJcGFydGl0aW9uGAMgASgEEhEKCWFzc2lnbl9pZBgFIAEoBBIT",
            "CgtyZWFkX29mZnNldBgGIAEoBBISCgplbmRfb2Zmc2V0GAcgASgEGpgBCgdS",
            "ZWxlYXNlEiUKBXRvcGljGAEgASgLMhYuWWRiLlBlcnNRdWV1ZS5WMS5QYXRo",
            "Eg8KB2NsdXN0ZXIYAiABKAkSEQoJcGFydGl0aW9uGAMgASgEEhEKCWFzc2ln",
            "bl9pZBgFIAEoBBIYChBmb3JjZWZ1bF9yZWxlYXNlGAYgASgIEhUKDWNvbW1p",
            "dF9vZmZzZXQYByABKAQaeAoJQ29tbWl0dGVkEi8KB2Nvb2tpZXMYASADKAsy",
            "Hi5ZZGIuUGVyc1F1ZXVlLlYxLkNvbW1pdENvb2tpZRI6Cg1vZmZzZXRfcmFu",
            "Z2VzGAIgAygLMiMuWWRiLlBlcnNRdWV1ZS5WMS5Db21taXRPZmZzZXRSYW5n",
            "ZRqXBgoJRGF0YUJhdGNoEmUKDnBhcnRpdGlvbl9kYXRhGAEgAygLMk0uWWRi",
            "LlBlcnNRdWV1ZS5WMS5NaWdyYXRpb25TdHJlYW1pbmdSZWFkU2VydmVyTWVz",
            "c2FnZS5EYXRhQmF0Y2guUGFydGl0aW9uRGF0YRrJAQoLTWVzc2FnZURhdGES",
            "DgoGb2Zmc2V0GAEgASgEEg4KBnNlcV9ubxgCIAEoBBIbChNjcmVhdGVfdGlt",
            "ZXN0YW1wX21zGAMgASgEEiYKBWNvZGVjGAQgASgOMhcuWWRiLlBlcnNRdWV1",
            "ZS5WMS5Db2RlYxIMCgRkYXRhGAUgASgMEhkKEXVuY29tcHJlc3NlZF9zaXpl",
            "GAYgASgEEhUKDXBhcnRpdGlvbl9rZXkYByABKAkSFQoNZXhwbGljaXRfaGFz",
            "aBgIIAEoDBrXAQoFQmF0Y2gSEQoJc291cmNlX2lkGAIgASgMEjAKDGV4dHJh",
            "X2ZpZWxkcxgDIAMoCzIaLllkYi5QZXJzUXVldWUuVjEuS2V5VmFsdWUSGgoS",
            "d3JpdGVfdGltZXN0YW1wX21zGAQgASgEEgoKAmlwGAUgASgJEmEKDG1lc3Nh",
            "Z2VfZGF0YRgBIAMoCzJLLllkYi5QZXJzUXVldWUuVjEuTWlncmF0aW9uU3Ry",
            "ZWFtaW5nUmVhZFNlcnZlck1lc3NhZ2UuRGF0YUJhdGNoLk1lc3NhZ2VEYXRh",
            "GvwBCg1QYXJ0aXRpb25EYXRhEiUKBXRvcGljGAEgASgLMhYuWWRiLlBlcnNR",
            "dWV1ZS5WMS5QYXRoEg8KB2NsdXN0ZXIYAiABKAkSEQoJcGFydGl0aW9uGAMg",
            "ASgEElYKB2JhdGNoZXMYBCADKAsyRS5ZZGIuUGVyc1F1ZXVlLlYxLk1pZ3Jh",
            "dGlvblN0cmVhbWluZ1JlYWRTZXJ2ZXJNZXNzYWdlLkRhdGFCYXRjaC5CYXRj",
            "aBIuCgZjb29raWUYBSABKAsyHi5ZZGIuUGVyc1F1ZXVlLlYxLkNvbW1pdENv",
            "b2tpZRIYChBkZXByZWNhdGVkX3RvcGljGAogASgJGrkBCg9QYXJ0aXRpb25T",
            "dGF0dXMSJQoFdG9waWMYASABKAsyFi5ZZGIuUGVyc1F1ZXVlLlYxLlBhdGgS",
            "DwoHY2x1c3RlchgCIAEoCRIRCglwYXJ0aXRpb24YAyABKAQSEQoJYXNzaWdu",
            "X2lkGAUgASgEEhgKEGNvbW1pdHRlZF9vZmZzZXQYBiABKAQSEgoKZW5kX29m",
            "ZnNldBgHIAEoBBIaChJ3cml0ZV93YXRlcm1hcmtfbXMYCCABKARCCgoIcmVz",
            "cG9uc2UiuQEKD1JlYWRJbmZvUmVxdWVzdBI5ChBvcGVyYXRpb25fcGFyYW1z",
            "GAEgASgLMh8uWWRiLk9wZXJhdGlvbnMuT3BlcmF0aW9uUGFyYW1zEiYKBnRv",
            "cGljcxgCIAMoCzIWLllkYi5QZXJzUXVldWUuVjEuUGF0aBIZChFnZXRfb25s",
            "eV9vcmlnaW5hbBgDIAEoCBIoCghjb25zdW1lchgEIAEoCzIWLllkYi5QZXJz",
            "UXVldWUuVjEuUGF0aCJAChBSZWFkSW5mb1Jlc3BvbnNlEiwKCW9wZXJhdGlv",
            "bhgBIAEoCzIZLllkYi5PcGVyYXRpb25zLk9wZXJhdGlvbiKhBgoOUmVhZElu",
            "Zm9SZXN1bHQSOgoGdG9waWNzGAEgAygLMiouWWRiLlBlcnNRdWV1ZS5WMS5S",
            "ZWFkSW5mb1Jlc3VsdC5Ub3BpY0luZm8a0gUKCVRvcGljSW5mbxIlCgV0b3Bp",
            "YxgBIAEoCzIWLllkYi5QZXJzUXVldWUuVjEuUGF0aBIPCgdjbHVzdGVyGAIg",
            "ASgJEikKBnN0YXR1cxgDIAEoDjIZLllkYi5TdGF0dXNJZHMuU3RhdHVzQ29k",
            "ZRInCgZpc3N1ZXMYBCADKAsyFy5ZZGIuSXNzdWUuSXNzdWVNZXNzYWdlEkwK",
            "CnBhcnRpdGlvbnMYBSADKAsyOC5ZZGIuUGVyc1F1ZXVlLlYxLlJlYWRJbmZv",
            "UmVzdWx0LlRvcGljSW5mby5QYXJ0aXRpb25JbmZvGuoDCg1QYXJ0aXRpb25J",
            "bmZvEhEKCXBhcnRpdGlvbhgBIAEoBBIpCgZzdGF0dXMYAiABKA4yGS5ZZGIu",
            "U3RhdHVzSWRzLlN0YXR1c0NvZGUSJwoGaXNzdWVzGAMgAygLMhcuWWRiLklz",
            "c3VlLklzc3VlTWVzc2FnZRIUCgxzdGFydF9vZmZzZXQYBCABKAQSEgoKZW5k",
            "X29mZnNldBgFIAEoBBIVCg1jb21taXRfb2Zmc2V0GAYgASgEEhoKEmNvbW1p",
            "dF90aW1lX2xhZ19tcxgHIAEoBBITCgtyZWFkX29mZnNldBgIIAEoBBIYChBy",
            "ZWFkX3RpbWVfbGFnX21zGAkgASgEEhIKCnNlc3Npb25faWQYCiABKAkSEwoL",
            "Y2xpZW50X25vZGUYCyABKAkSEgoKcHJveHlfbm9kZRgMIAEoCRITCgt0YWJs",
            "ZXRfbm9kZRgNIAEoCRIRCglhc3NpZ25faWQYDiABKAQSGwoTYXNzaWduX3Rp",
            "bWVzdGFtcF9tcxgPIAEoBBIYChBsYXN0X3JlYWRfY29va2llGBAgASgEEh0K",
            "FWNvbW1pdHRlZF9yZWFkX2Nvb2tpZRgRIAEoBBIrCiNvdXRfb2Zfb3JkZXJf",
            "cmVhZF9jb29raWVzX3RvX2NvbW1pdBgSIAMoBCJbChBEcm9wVG9waWNSZXF1",
            "ZXN0EjkKEG9wZXJhdGlvbl9wYXJhbXMYASABKAsyHy5ZZGIuT3BlcmF0aW9u",
            "cy5PcGVyYXRpb25QYXJhbXMSDAoEcGF0aBgCIAEoCSJBChFEcm9wVG9waWNS",
            "ZXNwb25zZRIsCglvcGVyYXRpb24YASABKAsyGS5ZZGIuT3BlcmF0aW9ucy5P",
            "cGVyYXRpb24iEQoPRHJvcFRvcGljUmVzdWx0IrEBCgtDcmVkZW50aWFscxIV",
            "CgtvYXV0aF90b2tlbhgBIAEoCUgAEhQKCmp3dF9wYXJhbXMYAiABKAlIABIw",
            "CgNpYW0YAyABKAsyIS5ZZGIuUGVyc1F1ZXVlLlYxLkNyZWRlbnRpYWxzLklh",
            "bUgAGjQKA0lhbRIQCghlbmRwb2ludBgBIAEoCRIbChNzZXJ2aWNlX2FjY291",
            "bnRfa2V5GAIgASgJQg0KC2NyZWRlbnRpYWxzIoMKCg1Ub3BpY1NldHRpbmdz",
            "EiEKEHBhcnRpdGlvbnNfY291bnQYASABKAVCB7LmKgM+IDASJAoTcmV0ZW50",
            "aW9uX3BlcmlvZF9tcxgCIAEoA0IHsuYqAz4gMBI5CidtZXNzYWdlX2dyb3Vw",
            "X3NlcW5vX3JldGVudGlvbl9wZXJpb2RfbXMYDCABKANCCLLmKgQ+PSAwEjsK",
            "KW1heF9wYXJ0aXRpb25fbWVzc2FnZV9ncm91cHNfc2Vxbm9fc3RvcmVkGA0g",
            "ASgDQgiy5ioEPj0gMBJAChBzdXBwb3J0ZWRfZm9ybWF0GAMgASgOMiYuWWRi",
            "LlBlcnNRdWV1ZS5WMS5Ub3BpY1NldHRpbmdzLkZvcm1hdBI5ChBzdXBwb3J0",
            "ZWRfY29kZWNzGAQgAygOMhcuWWRiLlBlcnNRdWV1ZS5WMS5Db2RlY0IGmuYq",
            "AhhkEiwKGm1heF9wYXJ0aXRpb25fc3RvcmFnZV9zaXplGAUgASgDQgiy5ioE",
            "Pj0gMBIrChltYXhfcGFydGl0aW9uX3dyaXRlX3NwZWVkGAYgASgDQgiy5ioE",
            "Pj0gMBIrChltYXhfcGFydGl0aW9uX3dyaXRlX2J1cnN0GAcgASgDQgiy5ioE",
            "Pj0gMBIdChVjbGllbnRfd3JpdGVfZGlzYWJsZWQYCCABKAgSRQoKcmVhZF9y",
            "dWxlcxgJIAMoCzIoLllkYi5QZXJzUXVldWUuVjEuVG9waWNTZXR0aW5ncy5S",
            "ZWFkUnVsZUIHmuYqAxi4FxJDCgphdHRyaWJ1dGVzGAogAygLMi8uWWRiLlBl",
            "cnNRdWV1ZS5WMS5Ub3BpY1NldHRpbmdzLkF0dHJpYnV0ZXNFbnRyeRJMChJy",
            "ZW1vdGVfbWlycm9yX3J1bGUYCyABKAsyMC5ZZGIuUGVyc1F1ZXVlLlYxLlRv",
            "cGljU2V0dGluZ3MuUmVtb3RlTWlycm9yUnVsZRqDAgoIUmVhZFJ1bGUSGwoN",
            "Y29uc3VtZXJfbmFtZRgBIAEoCUIEkOYqARIRCglpbXBvcnRhbnQYAiABKAgS",
            "Lwodc3RhcnRpbmdfbWVzc2FnZV90aW1lc3RhbXBfbXMYAyABKANCCLLmKgQ+",
            "PSAwEkAKEHN1cHBvcnRlZF9mb3JtYXQYBCABKA4yJi5ZZGIuUGVyc1F1ZXVl",
            "LlYxLlRvcGljU2V0dGluZ3MuRm9ybWF0EjkKEHN1cHBvcnRlZF9jb2RlY3MY",
            "BSADKA4yFy5ZZGIuUGVyc1F1ZXVlLlYxLkNvZGVjQgaa5ioCGGQSGQoHdmVy",
            "c2lvbhgGIAEoA0IIsuYqBD49IDAaMQoPQXR0cmlidXRlc0VudHJ5EgsKA2tl",
            "eRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaxgEKEFJlbW90ZU1pcnJvclJ1",
            "bGUSEAoIZW5kcG9pbnQYASABKAkSEgoKdG9waWNfcGF0aBgCIAEoCRIVCg1j",
            "b25zdW1lcl9uYW1lGAMgASgJEjIKC2NyZWRlbnRpYWxzGAQgASgLMh0uWWRi",
            "LlBlcnNRdWV1ZS5WMS5DcmVkZW50aWFscxIvCh1zdGFydGluZ19tZXNzYWdl",
            "X3RpbWVzdGFtcF9tcxgFIAEoA0IIsuYqBD49IDASEAoIZGF0YWJhc2UYBiAB",
            "KAkiMQoGRm9ybWF0EhYKEkZPUk1BVF9VTlNQRUNJRklFRBAAEg8KC0ZPUk1B",
            "VF9CQVNFEAEilgEKEkNyZWF0ZVRvcGljUmVxdWVzdBI5ChBvcGVyYXRpb25f",
            "cGFyYW1zGAEgASgLMh8uWWRiLk9wZXJhdGlvbnMuT3BlcmF0aW9uUGFyYW1z",
            "EhIKBHBhdGgYAiABKAlCBJDmKgESMQoIc2V0dGluZ3MYBCABKAsyHy5ZZGIu",
            "UGVyc1F1ZXVlLlYxLlRvcGljU2V0dGluZ3MiQwoTQ3JlYXRlVG9waWNSZXNw",
            "b25zZRIsCglvcGVyYXRpb24YASABKAsyGS5ZZGIuT3BlcmF0aW9ucy5PcGVy",
            "YXRpb24iEwoRQ3JlYXRlVG9waWNSZXN1bHQilQEKEUFsdGVyVG9waWNSZXF1",
            "ZXN0EjkKEG9wZXJhdGlvbl9wYXJhbXMYASABKAsyHy5ZZGIuT3BlcmF0aW9u",
            "cy5PcGVyYXRpb25QYXJhbXMSEgoEcGF0aBgCIAEoCUIEkOYqARIxCghzZXR0",
            "aW5ncxgEIAEoCzIfLllkYi5QZXJzUXVldWUuVjEuVG9waWNTZXR0aW5ncyJC",
            "ChJBbHRlclRvcGljUmVzcG9uc2USLAoJb3BlcmF0aW9uGAEgASgLMhkuWWRi",
            "Lk9wZXJhdGlvbnMuT3BlcmF0aW9uIhIKEEFsdGVyVG9waWNSZXN1bHQioAEK",
            "EkFkZFJlYWRSdWxlUmVxdWVzdBI5ChBvcGVyYXRpb25fcGFyYW1zGAEgASgL",
            "Mh8uWWRiLk9wZXJhdGlvbnMuT3BlcmF0aW9uUGFyYW1zEhIKBHBhdGgYAiAB",
            "KAlCBJDmKgESOwoJcmVhZF9ydWxlGAMgASgLMiguWWRiLlBlcnNRdWV1ZS5W",
            "MS5Ub3BpY1NldHRpbmdzLlJlYWRSdWxlIkMKE0FkZFJlYWRSdWxlUmVzcG9u",
            "c2USLAoJb3BlcmF0aW9uGAEgASgLMhkuWWRiLk9wZXJhdGlvbnMuT3BlcmF0",
            "aW9uIhMKEUFkZFJlYWRSdWxlUmVzdWx0In0KFVJlbW92ZVJlYWRSdWxlUmVx",
            "dWVzdBI5ChBvcGVyYXRpb25fcGFyYW1zGAEgASgLMh8uWWRiLk9wZXJhdGlv",
            "bnMuT3BlcmF0aW9uUGFyYW1zEhIKBHBhdGgYAiABKAlCBJDmKgESFQoNY29u",
            "c3VtZXJfbmFtZRgDIAEoCSJGChZSZW1vdmVSZWFkUnVsZVJlc3BvbnNlEiwK",
            "CW9wZXJhdGlvbhgBIAEoCzIZLllkYi5PcGVyYXRpb25zLk9wZXJhdGlvbiIW",
            "ChRSZW1vdmVSZWFkUnVsZVJlc3VsdCJlChREZXNjcmliZVRvcGljUmVxdWVz",
            "dBI5ChBvcGVyYXRpb25fcGFyYW1zGAEgASgLMh8uWWRiLk9wZXJhdGlvbnMu",
            "T3BlcmF0aW9uUGFyYW1zEhIKBHBhdGgYAiABKAlCBJDmKgEiRQoVRGVzY3Jp",
            "YmVUb3BpY1Jlc3BvbnNlEiwKCW9wZXJhdGlvbhgBIAEoCzIZLllkYi5PcGVy",
            "YXRpb25zLk9wZXJhdGlvbiJpChNEZXNjcmliZVRvcGljUmVzdWx0Eh8KBHNl",
            "bGYYASABKAsyES5ZZGIuU2NoZW1lLkVudHJ5EjEKCHNldHRpbmdzGAIgASgL",
            "Mh8uWWRiLlBlcnNRdWV1ZS5WMS5Ub3BpY1NldHRpbmdzKl0KBUNvZGVjEhUK",
            "EUNPREVDX1VOU1BFQ0lGSUVEEAASDQoJQ09ERUNfUkFXEAESDgoKQ09ERUNf",
            "R1pJUBACEg4KCkNPREVDX0xaT1AQAxIOCgpDT0RFQ19aU1REEARCHQoYY29t",
            "LnlhbmRleC55ZGIucGVyc3F1ZXVl+AEBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Ydb.Operations.YdbOperationReflection.Descriptor, global::Ydb.Scheme.YdbSchemeReflection.Descriptor, global::Ydb.YdbStatusCodesReflection.Descriptor, global::Ydb.Issue.YdbIssueMessageReflection.Descriptor, global::Ydb.ValidationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Ydb.PersQueue.V1.Codec), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.SessionMetaValue), global::Ydb.PersQueue.V1.SessionMetaValue.Parser, new[]{ "Value" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.OffsetsRange), global::Ydb.PersQueue.V1.OffsetsRange.Parser, new[]{ "StartOffset", "EndOffset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingWriteClientMessage), global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Parser, new[]{ "InitRequest", "WriteRequest", "UpdateTokenRequest" }, new[]{ "ClientMessage" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.InitRequest), global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.InitRequest.Parser, new[]{ "Topic", "MessageGroupId", "SessionMeta", "PartitionGroupId", "MaxSupportedBlockFormatVersion", "SessionId", "ConnectionAttempt", "ConnectionMeta", "PreferredCluster", "IdleTimeoutMs" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.WriteRequest), global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.WriteRequest.Parser, new[]{ "SequenceNumbers", "CreatedAtMs", "SentAtMs", "MessageSizes", "BlocksOffsets", "BlocksPartNumbers", "BlocksMessageCounts", "BlocksUncompressedSizes", "BlocksHeaders", "BlocksData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.UpdateTokenRequest), global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.UpdateTokenRequest.Parser, new[]{ "Token" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingWriteServerMessage), global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Parser, new[]{ "InitResponse", "BatchWriteResponse", "UpdateTokenResponse", "Status", "Issues" }, new[]{ "ServerMessage" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.InitResponse), global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.InitResponse.Parser, new[]{ "LastSequenceNumber", "SessionId", "Topic", "Cluster", "PartitionId", "BlockFormatVersion", "SupportedCodecs", "MaxFlushWindowSize", "MaxBlockSize", "ConnectionMeta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.BatchWriteResponse), global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.BatchWriteResponse.Parser, new[]{ "SequenceNumbers", "Offsets", "AlreadyWritten", "PartitionId", "WriteStatistics" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.UpdateTokenResponse), global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.UpdateTokenResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.WriteStatistics), global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.WriteStatistics.Parser, new[]{ "PersistDurationMs", "QueuedInPartitionDurationMs", "ThrottledOnPartitionDurationMs", "ThrottledOnTopicDurationMs" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.Path), global::Ydb.PersQueue.V1.Path.Parser, new[]{ "Path_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.KeyValue), global::Ydb.PersQueue.V1.KeyValue.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.ReadParams), global::Ydb.PersQueue.V1.ReadParams.Parser, new[]{ "MaxReadMessagesCount", "MaxReadSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.CommitCookie), global::Ydb.PersQueue.V1.CommitCookie.Parser, new[]{ "AssignId", "PartitionCookie" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.CommitOffsetRange), global::Ydb.PersQueue.V1.CommitOffsetRange.Parser, new[]{ "AssignId", "StartOffset", "EndOffset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadClientMessageNew), global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Parser, new[]{ "InitRequest", "ReadRequest", "CreatePartitionStreamResponse", "CommitRequest", "DestroyPartitionStreamResponse", "StopReadRequest", "ResumeReadRequest", "PartitionStreamStatusRequest", "AddTopicRequest", "RemoveTopicRequest", "Token" }, new[]{ "ClientMessage" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest), global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Parser, new[]{ "TopicsReadSettings", "ReadOnlyOriginal", "Consumer", "MaxLagDurationMs", "StartFromWrittenAtMs", "MaxSupportedBlockFormatVersion", "MaxMetaCacheSize", "SessionId", "ConnectionAttempt", "State", "IdleTimeoutMs" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State), global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Parser, new[]{ "PartitionStreamsStates" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Types.PartitionStreamState), global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Types.PartitionStreamState.Parser, new[]{ "PartitionStream", "ReadOffset", "OffsetRanges", "Status" }, null, new[]{ typeof(global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status) }, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.ReadRequest), global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.ReadRequest.Parser, new[]{ "RequestUncompressedSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.CreatePartitionStreamResponse), global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.CreatePartitionStreamResponse.Parser, new[]{ "PartitionStreamId", "ReadOffset", "CommitOffset", "VerifyReadOffset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.DestroyPartitionStreamResponse), global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.DestroyPartitionStreamResponse.Parser, new[]{ "PartitionStreamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.StopReadRequest), global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.StopReadRequest.Parser, new[]{ "PartitionStreamIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.ResumeReadRequest), global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.ResumeReadRequest.Parser, new[]{ "PartitionStreamIds", "ReadOffsets", "ResumeCookies" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.CommitRequest), global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.CommitRequest.Parser, new[]{ "Commits" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.PartitionStreamStatusRequest), global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.PartitionStreamStatusRequest.Parser, new[]{ "PartitionStreamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.AddTopicRequest), global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.AddTopicRequest.Parser, new[]{ "TopicReadSettings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.RemoveTopicRequest), global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.RemoveTopicRequest.Parser, new[]{ "Topic" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.TopicReadSettings), global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.TopicReadSettings.Parser, new[]{ "Topic", "PartitionGroupIds", "StartFromWrittenAtMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.PartitionCommit), global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.PartitionCommit.Parser, new[]{ "PartitionStreamId", "Offsets" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadServerMessageNew), global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Parser, new[]{ "InitResponse", "BatchReadResponse", "CreatePartitionStreamRequest", "DestroyPartitionStreamRequest", "CommitResponse", "PartitionStreamStatusResponse", "StopReadResponse", "ResumeReadResponse", "AddTopicResponse", "RemoveTopicResponse", "Status", "Issues" }, new[]{ "ServerMessage" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.InitResponse), global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.InitResponse.Parser, new[]{ "SessionId", "BlockFormatVersionByTopic", "MaxMetaCacheSize" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CreatePartitionStreamRequest), global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CreatePartitionStreamRequest.Parser, new[]{ "PartitionStream", "CommittedOffset", "EndOffset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.DestroyPartitionStreamRequest), global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.DestroyPartitionStreamRequest.Parser, new[]{ "PartitionStreamId", "Graceful", "CommittedOffset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CommitResponse), global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CommitResponse.Parser, new[]{ "PartitionsCommittedOffsets" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CommitResponse.Types.PartitionCommittedOffset), global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CommitResponse.Types.PartitionCommittedOffset.Parser, new[]{ "PartitionStreamId", "CommittedOffset" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse), global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Parser, new[]{ "SkipRange", "Partitions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.PartitionData), global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.PartitionData.Parser, new[]{ "PartitionStreamId", "Offsets", "SequenceNumbers", "CreatedAtMs", "WrittenAtMs", "MessageGroupIds", "MessageGroupIdIndexes", "Ips", "IpIndexes", "MessageSessionMeta", "MessageSessionMetaIndexes", "MessageSizes", "BlocksOffsets", "BlocksPartNumbers", "BlocksMessageCounts", "BlocksUncompressedSizes", "BlocksHeaders", "BlocksData", "ResumeCookie", "ReadStatistics" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.PartitionData.Types.ReadStatistics), global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.PartitionData.Types.ReadStatistics.Parser, new[]{ "BlobsFromCache", "BlobsFromDisk", "BytesFromHead", "BytesFromCache", "BytesFromDisk", "RepackDurationMs" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.SkipRange), global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.SkipRange.Parser, new[]{ "PartitionStreamId", "SkipRange_" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.PartitionStreamStatusResponse), global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.PartitionStreamStatusResponse.Parser, new[]{ "PartitionStreamId", "CommittedOffset", "EndOffset", "WrittenAtWatermarkMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.StopReadResponse), global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.StopReadResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.ResumeReadResponse), global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.ResumeReadResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.AddTopicResponse), global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.AddTopicResponse.Parser, new[]{ "BlockFormatVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.RemoveTopicResponse), global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.RemoveTopicResponse.Parser, null, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.PartitionStream), global::Ydb.PersQueue.V1.PartitionStream.Parser, new[]{ "Topic", "Cluster", "PartitionId", "PartitionGroupId", "PartitionStreamId", "ConnectionMeta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage), global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Parser, new[]{ "InitRequest", "Read", "StartRead", "Commit", "Released", "Status", "Token" }, new[]{ "Request" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.TopicReadSettings), global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.TopicReadSettings.Parser, new[]{ "Topic", "PartitionGroupIds", "StartFromWrittenAtMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest), global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Parser, new[]{ "TopicsReadSettings", "ReadOnlyOriginal", "Consumer", "MaxLagDurationMs", "StartFromWrittenAtMs", "MaxSupportedBlockFormatVersion", "MaxMetaCacheSize", "SessionId", "ConnectionAttempt", "State", "IdleTimeoutMs", "ReadParams", "RangesMode" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State), global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Parser, new[]{ "PartitionStreamsStates" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Types.PartitionStreamState), global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Types.PartitionStreamState.Parser, new[]{ "PartitionStream", "ReadOffset", "OffsetRanges", "Status" }, null, new[]{ typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status) }, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Read), global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Read.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.StartRead), global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.StartRead.Parser, new[]{ "Topic", "Cluster", "Partition", "AssignId", "ReadOffset", "CommitOffset", "VerifyReadOffset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Released), global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Released.Parser, new[]{ "Topic", "Cluster", "Partition", "AssignId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Commit), global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Commit.Parser, new[]{ "Cookies", "OffsetRanges" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Status), global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Status.Parser, new[]{ "Topic", "Cluster", "Partition", "AssignId" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage), global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Parser, new[]{ "Status", "Issues", "InitResponse", "DataBatch", "Assigned", "Release", "Committed", "PartitionStatus" }, new[]{ "Response" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.InitResponse), global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.InitResponse.Parser, new[]{ "SessionId", "BlockFormatVersionByTopic", "MaxMetaCacheSize" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Assigned), global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Assigned.Parser, new[]{ "Topic", "Cluster", "Partition", "AssignId", "ReadOffset", "EndOffset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Release), global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Release.Parser, new[]{ "Topic", "Cluster", "Partition", "AssignId", "ForcefulRelease", "CommitOffset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Committed), global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Committed.Parser, new[]{ "Cookies", "OffsetRanges" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch), global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Parser, new[]{ "PartitionData" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.MessageData), global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.MessageData.Parser, new[]{ "Offset", "SeqNo", "CreateTimestampMs", "Codec", "Data", "UncompressedSize", "PartitionKey", "ExplicitHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.Batch), global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.Batch.Parser, new[]{ "SourceId", "ExtraFields", "WriteTimestampMs", "Ip", "MessageData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.PartitionData), global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.PartitionData.Parser, new[]{ "Topic", "Cluster", "Partition", "Batches", "Cookie", "DeprecatedTopic" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.PartitionStatus), global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.PartitionStatus.Parser, new[]{ "Topic", "Cluster", "Partition", "AssignId", "CommittedOffset", "EndOffset", "WriteWatermarkMs" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.ReadInfoRequest), global::Ydb.PersQueue.V1.ReadInfoRequest.Parser, new[]{ "OperationParams", "Topics", "GetOnlyOriginal", "Consumer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.ReadInfoResponse), global::Ydb.PersQueue.V1.ReadInfoResponse.Parser, new[]{ "Operation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.ReadInfoResult), global::Ydb.PersQueue.V1.ReadInfoResult.Parser, new[]{ "Topics" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.ReadInfoResult.Types.TopicInfo), global::Ydb.PersQueue.V1.ReadInfoResult.Types.TopicInfo.Parser, new[]{ "Topic", "Cluster", "Status", "Issues", "Partitions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.ReadInfoResult.Types.TopicInfo.Types.PartitionInfo), global::Ydb.PersQueue.V1.ReadInfoResult.Types.TopicInfo.Types.PartitionInfo.Parser, new[]{ "Partition", "Status", "Issues", "StartOffset", "EndOffset", "CommitOffset", "CommitTimeLagMs", "ReadOffset", "ReadTimeLagMs", "SessionId", "ClientNode", "ProxyNode", "TabletNode", "AssignId", "AssignTimestampMs", "LastReadCookie", "CommittedReadCookie", "OutOfOrderReadCookiesToCommit" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.DropTopicRequest), global::Ydb.PersQueue.V1.DropTopicRequest.Parser, new[]{ "OperationParams", "Path" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.DropTopicResponse), global::Ydb.PersQueue.V1.DropTopicResponse.Parser, new[]{ "Operation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.DropTopicResult), global::Ydb.PersQueue.V1.DropTopicResult.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.Credentials), global::Ydb.PersQueue.V1.Credentials.Parser, new[]{ "OauthToken", "JwtParams", "Iam" }, new[]{ "Credentials" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.Credentials.Types.Iam), global::Ydb.PersQueue.V1.Credentials.Types.Iam.Parser, new[]{ "Endpoint", "ServiceAccountKey" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.TopicSettings), global::Ydb.PersQueue.V1.TopicSettings.Parser, new[]{ "PartitionsCount", "RetentionPeriodMs", "MessageGroupSeqnoRetentionPeriodMs", "MaxPartitionMessageGroupsSeqnoStored", "SupportedFormat", "SupportedCodecs", "MaxPartitionStorageSize", "MaxPartitionWriteSpeed", "MaxPartitionWriteBurst", "ClientWriteDisabled", "ReadRules", "Attributes", "RemoteMirrorRule" }, null, new[]{ typeof(global::Ydb.PersQueue.V1.TopicSettings.Types.Format) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.TopicSettings.Types.ReadRule), global::Ydb.PersQueue.V1.TopicSettings.Types.ReadRule.Parser, new[]{ "ConsumerName", "Important", "StartingMessageTimestampMs", "SupportedFormat", "SupportedCodecs", "Version" }, null, null, null, null),
            null, new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.TopicSettings.Types.RemoteMirrorRule), global::Ydb.PersQueue.V1.TopicSettings.Types.RemoteMirrorRule.Parser, new[]{ "Endpoint", "TopicPath", "ConsumerName", "Credentials", "StartingMessageTimestampMs", "Database" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.CreateTopicRequest), global::Ydb.PersQueue.V1.CreateTopicRequest.Parser, new[]{ "OperationParams", "Path", "Settings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.CreateTopicResponse), global::Ydb.PersQueue.V1.CreateTopicResponse.Parser, new[]{ "Operation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.CreateTopicResult), global::Ydb.PersQueue.V1.CreateTopicResult.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.AlterTopicRequest), global::Ydb.PersQueue.V1.AlterTopicRequest.Parser, new[]{ "OperationParams", "Path", "Settings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.AlterTopicResponse), global::Ydb.PersQueue.V1.AlterTopicResponse.Parser, new[]{ "Operation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.AlterTopicResult), global::Ydb.PersQueue.V1.AlterTopicResult.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.AddReadRuleRequest), global::Ydb.PersQueue.V1.AddReadRuleRequest.Parser, new[]{ "OperationParams", "Path", "ReadRule" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.AddReadRuleResponse), global::Ydb.PersQueue.V1.AddReadRuleResponse.Parser, new[]{ "Operation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.AddReadRuleResult), global::Ydb.PersQueue.V1.AddReadRuleResult.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.RemoveReadRuleRequest), global::Ydb.PersQueue.V1.RemoveReadRuleRequest.Parser, new[]{ "OperationParams", "Path", "ConsumerName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.RemoveReadRuleResponse), global::Ydb.PersQueue.V1.RemoveReadRuleResponse.Parser, new[]{ "Operation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.RemoveReadRuleResult), global::Ydb.PersQueue.V1.RemoveReadRuleResult.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.DescribeTopicRequest), global::Ydb.PersQueue.V1.DescribeTopicRequest.Parser, new[]{ "OperationParams", "Path" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.DescribeTopicResponse), global::Ydb.PersQueue.V1.DescribeTopicResponse.Parser, new[]{ "Operation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ydb.PersQueue.V1.DescribeTopicResult), global::Ydb.PersQueue.V1.DescribeTopicResult.Parser, new[]{ "Self", "Settings" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Codec {
    [pbr::OriginalName("CODEC_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("CODEC_RAW")] Raw = 1,
    [pbr::OriginalName("CODEC_GZIP")] Gzip = 2,
    [pbr::OriginalName("CODEC_LZOP")] Lzop = 3,
    [pbr::OriginalName("CODEC_ZSTD")] Zstd = 4,
  }

  #endregion

  #region Messages
  public sealed partial class SessionMetaValue : pb::IMessage<SessionMetaValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SessionMetaValue> _parser = new pb::MessageParser<SessionMetaValue>(() => new SessionMetaValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SessionMetaValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionMetaValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionMetaValue(SessionMetaValue other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionMetaValue Clone() {
      return new SessionMetaValue(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_value_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 10);
    private readonly pbc::MapField<string, string> value_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SessionMetaValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SessionMetaValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Value.Equals(other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      value_.WriteTo(output, _map_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      value_.WriteTo(ref output, _map_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_map_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SessionMetaValue other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _map_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            value_.AddEntriesFrom(ref input, _map_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Represents range [start_offset, end_offset).
  /// </summary>
  public sealed partial class OffsetsRange : pb::IMessage<OffsetsRange>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OffsetsRange> _parser = new pb::MessageParser<OffsetsRange>(() => new OffsetsRange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OffsetsRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OffsetsRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OffsetsRange(OffsetsRange other) : this() {
      startOffset_ = other.startOffset_;
      endOffset_ = other.endOffset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OffsetsRange Clone() {
      return new OffsetsRange(this);
    }

    /// <summary>Field number for the "start_offset" field.</summary>
    public const int StartOffsetFieldNumber = 1;
    private long startOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartOffset {
      get { return startOffset_; }
      set {
        startOffset_ = value;
      }
    }

    /// <summary>Field number for the "end_offset" field.</summary>
    public const int EndOffsetFieldNumber = 2;
    private long endOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndOffset {
      get { return endOffset_; }
      set {
        endOffset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OffsetsRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OffsetsRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartOffset != other.StartOffset) return false;
      if (EndOffset != other.EndOffset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartOffset != 0L) hash ^= StartOffset.GetHashCode();
      if (EndOffset != 0L) hash ^= EndOffset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StartOffset != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartOffset);
      }
      if (EndOffset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndOffset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StartOffset != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartOffset);
      }
      if (EndOffset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndOffset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartOffset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartOffset);
      }
      if (EndOffset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndOffset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OffsetsRange other) {
      if (other == null) {
        return;
      }
      if (other.StartOffset != 0L) {
        StartOffset = other.StartOffset;
      }
      if (other.EndOffset != 0L) {
        EndOffset = other.EndOffset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartOffset = input.ReadInt64();
            break;
          }
          case 16: {
            EndOffset = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StartOffset = input.ReadInt64();
            break;
          }
          case 16: {
            EndOffset = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Request for write session. Contains one of:
  ///      InitRequest - handshake request.
  ///      WriteRequest - portion of data to be written.
  ///      UpdateTokenRequest - user credentials if update is needed.
  /// </summary>
  public sealed partial class StreamingWriteClientMessage : pb::IMessage<StreamingWriteClientMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingWriteClientMessage> _parser = new pb::MessageParser<StreamingWriteClientMessage>(() => new StreamingWriteClientMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamingWriteClientMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingWriteClientMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingWriteClientMessage(StreamingWriteClientMessage other) : this() {
      switch (other.ClientMessageCase) {
        case ClientMessageOneofCase.InitRequest:
          InitRequest = other.InitRequest.Clone();
          break;
        case ClientMessageOneofCase.WriteRequest:
          WriteRequest = other.WriteRequest.Clone();
          break;
        case ClientMessageOneofCase.UpdateTokenRequest:
          UpdateTokenRequest = other.UpdateTokenRequest.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingWriteClientMessage Clone() {
      return new StreamingWriteClientMessage(this);
    }

    /// <summary>Field number for the "init_request" field.</summary>
    public const int InitRequestFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.InitRequest InitRequest {
      get { return clientMessageCase_ == ClientMessageOneofCase.InitRequest ? (global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.InitRequest) clientMessage_ : null; }
      set {
        clientMessage_ = value;
        clientMessageCase_ = value == null ? ClientMessageOneofCase.None : ClientMessageOneofCase.InitRequest;
      }
    }

    /// <summary>Field number for the "write_request" field.</summary>
    public const int WriteRequestFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.WriteRequest WriteRequest {
      get { return clientMessageCase_ == ClientMessageOneofCase.WriteRequest ? (global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.WriteRequest) clientMessage_ : null; }
      set {
        clientMessage_ = value;
        clientMessageCase_ = value == null ? ClientMessageOneofCase.None : ClientMessageOneofCase.WriteRequest;
      }
    }

    /// <summary>Field number for the "update_token_request" field.</summary>
    public const int UpdateTokenRequestFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.UpdateTokenRequest UpdateTokenRequest {
      get { return clientMessageCase_ == ClientMessageOneofCase.UpdateTokenRequest ? (global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.UpdateTokenRequest) clientMessage_ : null; }
      set {
        clientMessage_ = value;
        clientMessageCase_ = value == null ? ClientMessageOneofCase.None : ClientMessageOneofCase.UpdateTokenRequest;
      }
    }

    private object clientMessage_;
    /// <summary>Enum of possible cases for the "client_message" oneof.</summary>
    public enum ClientMessageOneofCase {
      None = 0,
      InitRequest = 1,
      WriteRequest = 2,
      UpdateTokenRequest = 3,
    }
    private ClientMessageOneofCase clientMessageCase_ = ClientMessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMessageOneofCase ClientMessageCase {
      get { return clientMessageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClientMessage() {
      clientMessageCase_ = ClientMessageOneofCase.None;
      clientMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamingWriteClientMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamingWriteClientMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InitRequest, other.InitRequest)) return false;
      if (!object.Equals(WriteRequest, other.WriteRequest)) return false;
      if (!object.Equals(UpdateTokenRequest, other.UpdateTokenRequest)) return false;
      if (ClientMessageCase != other.ClientMessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (clientMessageCase_ == ClientMessageOneofCase.InitRequest) hash ^= InitRequest.GetHashCode();
      if (clientMessageCase_ == ClientMessageOneofCase.WriteRequest) hash ^= WriteRequest.GetHashCode();
      if (clientMessageCase_ == ClientMessageOneofCase.UpdateTokenRequest) hash ^= UpdateTokenRequest.GetHashCode();
      hash ^= (int) clientMessageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (clientMessageCase_ == ClientMessageOneofCase.InitRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(InitRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.WriteRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(WriteRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.UpdateTokenRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateTokenRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (clientMessageCase_ == ClientMessageOneofCase.InitRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(InitRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.WriteRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(WriteRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.UpdateTokenRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateTokenRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (clientMessageCase_ == ClientMessageOneofCase.InitRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InitRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.WriteRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WriteRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.UpdateTokenRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTokenRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamingWriteClientMessage other) {
      if (other == null) {
        return;
      }
      switch (other.ClientMessageCase) {
        case ClientMessageOneofCase.InitRequest:
          if (InitRequest == null) {
            InitRequest = new global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.InitRequest();
          }
          InitRequest.MergeFrom(other.InitRequest);
          break;
        case ClientMessageOneofCase.WriteRequest:
          if (WriteRequest == null) {
            WriteRequest = new global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.WriteRequest();
          }
          WriteRequest.MergeFrom(other.WriteRequest);
          break;
        case ClientMessageOneofCase.UpdateTokenRequest:
          if (UpdateTokenRequest == null) {
            UpdateTokenRequest = new global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.UpdateTokenRequest();
          }
          UpdateTokenRequest.MergeFrom(other.UpdateTokenRequest);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.InitRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.InitRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.InitRequest) {
              subBuilder.MergeFrom(InitRequest);
            }
            input.ReadMessage(subBuilder);
            InitRequest = subBuilder;
            break;
          }
          case 18: {
            global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.WriteRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.WriteRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.WriteRequest) {
              subBuilder.MergeFrom(WriteRequest);
            }
            input.ReadMessage(subBuilder);
            WriteRequest = subBuilder;
            break;
          }
          case 26: {
            global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.UpdateTokenRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.UpdateTokenRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.UpdateTokenRequest) {
              subBuilder.MergeFrom(UpdateTokenRequest);
            }
            input.ReadMessage(subBuilder);
            UpdateTokenRequest = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.InitRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.InitRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.InitRequest) {
              subBuilder.MergeFrom(InitRequest);
            }
            input.ReadMessage(subBuilder);
            InitRequest = subBuilder;
            break;
          }
          case 18: {
            global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.WriteRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.WriteRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.WriteRequest) {
              subBuilder.MergeFrom(WriteRequest);
            }
            input.ReadMessage(subBuilder);
            WriteRequest = subBuilder;
            break;
          }
          case 26: {
            global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.UpdateTokenRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Types.UpdateTokenRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.UpdateTokenRequest) {
              subBuilder.MergeFrom(UpdateTokenRequest);
            }
            input.ReadMessage(subBuilder);
            UpdateTokenRequest = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the StreamingWriteClientMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Handshake request that must be sent to server first.
      /// </summary>
      public sealed partial class InitRequest : pb::IMessage<InitRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InitRequest> _parser = new pb::MessageParser<InitRequest>(() => new InitRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InitRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitRequest(InitRequest other) : this() {
          topic_ = other.topic_;
          messageGroupId_ = other.messageGroupId_;
          sessionMeta_ = other.sessionMeta_.Clone();
          partitionGroupId_ = other.partitionGroupId_;
          maxSupportedBlockFormatVersion_ = other.maxSupportedBlockFormatVersion_;
          sessionId_ = other.sessionId_;
          connectionAttempt_ = other.connectionAttempt_;
          connectionMeta_ = other.connectionMeta_;
          preferredCluster_ = other.preferredCluster_;
          idleTimeoutMs_ = other.idleTimeoutMs_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitRequest Clone() {
          return new InitRequest(this);
        }

        /// <summary>Field number for the "topic" field.</summary>
        public const int TopicFieldNumber = 1;
        private string topic_ = "";
        /// <summary>
        /// Path of topic to write to.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Topic {
          get { return topic_; }
          set {
            topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "message_group_id" field.</summary>
        public const int MessageGroupIdFieldNumber = 2;
        private string messageGroupId_ = "";
        /// <summary>
        /// message group identifier of client data stream a.k.a. sourceId.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MessageGroupId {
          get { return messageGroupId_; }
          set {
            messageGroupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "session_meta" field.</summary>
        public const int SessionMetaFieldNumber = 3;
        private static readonly pbc::MapField<string, string>.Codec _map_sessionMeta_codec
            = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 26);
        private readonly pbc::MapField<string, string> sessionMeta_ = new pbc::MapField<string, string>();
        /// <summary>
        /// Some user metadata attached to this write session.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, string> SessionMeta {
          get { return sessionMeta_; }
        }

        /// <summary>Field number for the "partition_group_id" field.</summary>
        public const int PartitionGroupIdFieldNumber = 4;
        private long partitionGroupId_;
        /// <summary>
        /// Partition group to write to.
        /// Zero means any group.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long PartitionGroupId {
          get { return partitionGroupId_; }
          set {
            partitionGroupId_ = value;
          }
        }

        /// <summary>Field number for the "max_supported_block_format_version" field.</summary>
        public const int MaxSupportedBlockFormatVersionFieldNumber = 5;
        private long maxSupportedBlockFormatVersion_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MaxSupportedBlockFormatVersion {
          get { return maxSupportedBlockFormatVersion_; }
          set {
            maxSupportedBlockFormatVersion_ = value;
          }
        }

        /// <summary>Field number for the "session_id" field.</summary>
        public const int SessionIdFieldNumber = 100;
        private string sessionId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SessionId {
          get { return sessionId_; }
          set {
            sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "connection_attempt" field.</summary>
        public const int ConnectionAttemptFieldNumber = 101;
        private long connectionAttempt_;
        /// <summary>
        /// 0 for first init message and incremental value for connect retries. Used for server logging.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ConnectionAttempt {
          get { return connectionAttempt_; }
          set {
            connectionAttempt_ = value;
          }
        }

        /// <summary>Field number for the "connection_meta" field.</summary>
        public const int ConnectionMetaFieldNumber = 102;
        private pb::ByteString connectionMeta_ = pb::ByteString.Empty;
        /// <summary>
        /// Opaque blob. Take last one from previous connect.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString ConnectionMeta {
          get { return connectionMeta_; }
          set {
            connectionMeta_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "preferred_cluster" field.</summary>
        public const int PreferredClusterFieldNumber = 103;
        private string preferredCluster_ = "";
        /// <summary>
        /// Optinal preferred cluster name. Sever will close session If preferred cluster is not server cluster and preferred cluster is enabled after delay TPQConfig::CloseClientSessionWithEnabledRemotePreferredClusterDelaySec
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string PreferredCluster {
          get { return preferredCluster_; }
          set {
            preferredCluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "idle_timeout_ms" field.</summary>
        public const int IdleTimeoutMsFieldNumber = 200;
        private long idleTimeoutMs_;
        /// <summary>
        /// Sanity check option. When no writing activity is done in idle_timeout_sec seconds, then session will be destroyed. Zero means infinity.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long IdleTimeoutMs {
          get { return idleTimeoutMs_; }
          set {
            idleTimeoutMs_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InitRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InitRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Topic != other.Topic) return false;
          if (MessageGroupId != other.MessageGroupId) return false;
          if (!SessionMeta.Equals(other.SessionMeta)) return false;
          if (PartitionGroupId != other.PartitionGroupId) return false;
          if (MaxSupportedBlockFormatVersion != other.MaxSupportedBlockFormatVersion) return false;
          if (SessionId != other.SessionId) return false;
          if (ConnectionAttempt != other.ConnectionAttempt) return false;
          if (ConnectionMeta != other.ConnectionMeta) return false;
          if (PreferredCluster != other.PreferredCluster) return false;
          if (IdleTimeoutMs != other.IdleTimeoutMs) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Topic.Length != 0) hash ^= Topic.GetHashCode();
          if (MessageGroupId.Length != 0) hash ^= MessageGroupId.GetHashCode();
          hash ^= SessionMeta.GetHashCode();
          if (PartitionGroupId != 0L) hash ^= PartitionGroupId.GetHashCode();
          if (MaxSupportedBlockFormatVersion != 0L) hash ^= MaxSupportedBlockFormatVersion.GetHashCode();
          if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
          if (ConnectionAttempt != 0L) hash ^= ConnectionAttempt.GetHashCode();
          if (ConnectionMeta.Length != 0) hash ^= ConnectionMeta.GetHashCode();
          if (PreferredCluster.Length != 0) hash ^= PreferredCluster.GetHashCode();
          if (IdleTimeoutMs != 0L) hash ^= IdleTimeoutMs.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Topic.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Topic);
          }
          if (MessageGroupId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(MessageGroupId);
          }
          sessionMeta_.WriteTo(output, _map_sessionMeta_codec);
          if (PartitionGroupId != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(PartitionGroupId);
          }
          if (MaxSupportedBlockFormatVersion != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(MaxSupportedBlockFormatVersion);
          }
          if (SessionId.Length != 0) {
            output.WriteRawTag(162, 6);
            output.WriteString(SessionId);
          }
          if (ConnectionAttempt != 0L) {
            output.WriteRawTag(168, 6);
            output.WriteInt64(ConnectionAttempt);
          }
          if (ConnectionMeta.Length != 0) {
            output.WriteRawTag(178, 6);
            output.WriteBytes(ConnectionMeta);
          }
          if (PreferredCluster.Length != 0) {
            output.WriteRawTag(186, 6);
            output.WriteString(PreferredCluster);
          }
          if (IdleTimeoutMs != 0L) {
            output.WriteRawTag(192, 12);
            output.WriteInt64(IdleTimeoutMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Topic.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Topic);
          }
          if (MessageGroupId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(MessageGroupId);
          }
          sessionMeta_.WriteTo(ref output, _map_sessionMeta_codec);
          if (PartitionGroupId != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(PartitionGroupId);
          }
          if (MaxSupportedBlockFormatVersion != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(MaxSupportedBlockFormatVersion);
          }
          if (SessionId.Length != 0) {
            output.WriteRawTag(162, 6);
            output.WriteString(SessionId);
          }
          if (ConnectionAttempt != 0L) {
            output.WriteRawTag(168, 6);
            output.WriteInt64(ConnectionAttempt);
          }
          if (ConnectionMeta.Length != 0) {
            output.WriteRawTag(178, 6);
            output.WriteBytes(ConnectionMeta);
          }
          if (PreferredCluster.Length != 0) {
            output.WriteRawTag(186, 6);
            output.WriteString(PreferredCluster);
          }
          if (IdleTimeoutMs != 0L) {
            output.WriteRawTag(192, 12);
            output.WriteInt64(IdleTimeoutMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Topic.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
          }
          if (MessageGroupId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageGroupId);
          }
          size += sessionMeta_.CalculateSize(_map_sessionMeta_codec);
          if (PartitionGroupId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(PartitionGroupId);
          }
          if (MaxSupportedBlockFormatVersion != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxSupportedBlockFormatVersion);
          }
          if (SessionId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(SessionId);
          }
          if (ConnectionAttempt != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(ConnectionAttempt);
          }
          if (ConnectionMeta.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeBytesSize(ConnectionMeta);
          }
          if (PreferredCluster.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(PreferredCluster);
          }
          if (IdleTimeoutMs != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(IdleTimeoutMs);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InitRequest other) {
          if (other == null) {
            return;
          }
          if (other.Topic.Length != 0) {
            Topic = other.Topic;
          }
          if (other.MessageGroupId.Length != 0) {
            MessageGroupId = other.MessageGroupId;
          }
          sessionMeta_.Add(other.sessionMeta_);
          if (other.PartitionGroupId != 0L) {
            PartitionGroupId = other.PartitionGroupId;
          }
          if (other.MaxSupportedBlockFormatVersion != 0L) {
            MaxSupportedBlockFormatVersion = other.MaxSupportedBlockFormatVersion;
          }
          if (other.SessionId.Length != 0) {
            SessionId = other.SessionId;
          }
          if (other.ConnectionAttempt != 0L) {
            ConnectionAttempt = other.ConnectionAttempt;
          }
          if (other.ConnectionMeta.Length != 0) {
            ConnectionMeta = other.ConnectionMeta;
          }
          if (other.PreferredCluster.Length != 0) {
            PreferredCluster = other.PreferredCluster;
          }
          if (other.IdleTimeoutMs != 0L) {
            IdleTimeoutMs = other.IdleTimeoutMs;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Topic = input.ReadString();
                break;
              }
              case 18: {
                MessageGroupId = input.ReadString();
                break;
              }
              case 26: {
                sessionMeta_.AddEntriesFrom(input, _map_sessionMeta_codec);
                break;
              }
              case 32: {
                PartitionGroupId = input.ReadInt64();
                break;
              }
              case 40: {
                MaxSupportedBlockFormatVersion = input.ReadInt64();
                break;
              }
              case 802: {
                SessionId = input.ReadString();
                break;
              }
              case 808: {
                ConnectionAttempt = input.ReadInt64();
                break;
              }
              case 818: {
                ConnectionMeta = input.ReadBytes();
                break;
              }
              case 826: {
                PreferredCluster = input.ReadString();
                break;
              }
              case 1600: {
                IdleTimeoutMs = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Topic = input.ReadString();
                break;
              }
              case 18: {
                MessageGroupId = input.ReadString();
                break;
              }
              case 26: {
                sessionMeta_.AddEntriesFrom(ref input, _map_sessionMeta_codec);
                break;
              }
              case 32: {
                PartitionGroupId = input.ReadInt64();
                break;
              }
              case 40: {
                MaxSupportedBlockFormatVersion = input.ReadInt64();
                break;
              }
              case 802: {
                SessionId = input.ReadString();
                break;
              }
              case 808: {
                ConnectionAttempt = input.ReadInt64();
                break;
              }
              case 818: {
                ConnectionMeta = input.ReadBytes();
                break;
              }
              case 826: {
                PreferredCluster = input.ReadString();
                break;
              }
              case 1600: {
                IdleTimeoutMs = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Represents portion of client messages.
      /// </summary>
      public sealed partial class WriteRequest : pb::IMessage<WriteRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<WriteRequest> _parser = new pb::MessageParser<WriteRequest>(() => new WriteRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<WriteRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WriteRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WriteRequest(WriteRequest other) : this() {
          sequenceNumbers_ = other.sequenceNumbers_.Clone();
          createdAtMs_ = other.createdAtMs_.Clone();
          sentAtMs_ = other.sentAtMs_.Clone();
          messageSizes_ = other.messageSizes_.Clone();
          blocksOffsets_ = other.blocksOffsets_.Clone();
          blocksPartNumbers_ = other.blocksPartNumbers_.Clone();
          blocksMessageCounts_ = other.blocksMessageCounts_.Clone();
          blocksUncompressedSizes_ = other.blocksUncompressedSizes_.Clone();
          blocksHeaders_ = other.blocksHeaders_.Clone();
          blocksData_ = other.blocksData_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WriteRequest Clone() {
          return new WriteRequest(this);
        }

        /// <summary>Field number for the "sequence_numbers" field.</summary>
        public const int SequenceNumbersFieldNumber = 2;
        private static readonly pb::FieldCodec<long> _repeated_sequenceNumbers_codec
            = pb::FieldCodec.ForInt64(18);
        private readonly pbc::RepeatedField<long> sequenceNumbers_ = new pbc::RepeatedField<long>();
        /// <summary>
        /// Sequence numbers of messages in order that client will provide to server.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> SequenceNumbers {
          get { return sequenceNumbers_; }
        }

        /// <summary>Field number for the "created_at_ms" field.</summary>
        public const int CreatedAtMsFieldNumber = 3;
        private static readonly pb::FieldCodec<long> _repeated_createdAtMs_codec
            = pb::FieldCodec.ForInt64(26);
        private readonly pbc::RepeatedField<long> createdAtMs_ = new pbc::RepeatedField<long>();
        /// <summary>
        /// Message creation timestamps for client messages.
        /// Same size as sequence_numbers.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> CreatedAtMs {
          get { return createdAtMs_; }
        }

        /// <summary>Field number for the "sent_at_ms" field.</summary>
        public const int SentAtMsFieldNumber = 4;
        private static readonly pb::FieldCodec<long> _repeated_sentAtMs_codec
            = pb::FieldCodec.ForInt64(34);
        private readonly pbc::RepeatedField<long> sentAtMs_ = new pbc::RepeatedField<long>();
        /// <summary>
        /// Message creation timestamps for client messages.
        /// Same size as sequence_numbers.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> SentAtMs {
          get { return sentAtMs_; }
        }

        /// <summary>Field number for the "message_sizes" field.</summary>
        public const int MessageSizesFieldNumber = 5;
        private static readonly pb::FieldCodec<long> _repeated_messageSizes_codec
            = pb::FieldCodec.ForInt64(42);
        private readonly pbc::RepeatedField<long> messageSizes_ = new pbc::RepeatedField<long>();
        /// <summary>
        /// Client message sizes.
        /// Same size as sequence_numbers.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> MessageSizes {
          get { return messageSizes_; }
        }

        /// <summary>Field number for the "blocks_offsets" field.</summary>
        public const int BlocksOffsetsFieldNumber = 6;
        private static readonly pb::FieldCodec<long> _repeated_blocksOffsets_codec
            = pb::FieldCodec.ForInt64(50);
        private readonly pbc::RepeatedField<long> blocksOffsets_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> BlocksOffsets {
          get { return blocksOffsets_; }
        }

        /// <summary>Field number for the "blocks_part_numbers" field.</summary>
        public const int BlocksPartNumbersFieldNumber = 7;
        private static readonly pb::FieldCodec<long> _repeated_blocksPartNumbers_codec
            = pb::FieldCodec.ForInt64(58);
        private readonly pbc::RepeatedField<long> blocksPartNumbers_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> BlocksPartNumbers {
          get { return blocksPartNumbers_; }
        }

        /// <summary>Field number for the "blocks_message_counts" field.</summary>
        public const int BlocksMessageCountsFieldNumber = 8;
        private static readonly pb::FieldCodec<long> _repeated_blocksMessageCounts_codec
            = pb::FieldCodec.ForInt64(66);
        private readonly pbc::RepeatedField<long> blocksMessageCounts_ = new pbc::RepeatedField<long>();
        /// <summary>
        /// How many complete messages and imcomplete messages end parts (one at most) this block contains
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> BlocksMessageCounts {
          get { return blocksMessageCounts_; }
        }

        /// <summary>Field number for the "blocks_uncompressed_sizes" field.</summary>
        public const int BlocksUncompressedSizesFieldNumber = 9;
        private static readonly pb::FieldCodec<long> _repeated_blocksUncompressedSizes_codec
            = pb::FieldCodec.ForInt64(74);
        private readonly pbc::RepeatedField<long> blocksUncompressedSizes_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> BlocksUncompressedSizes {
          get { return blocksUncompressedSizes_; }
        }

        /// <summary>Field number for the "blocks_headers" field.</summary>
        public const int BlocksHeadersFieldNumber = 10;
        private static readonly pb::FieldCodec<pb::ByteString> _repeated_blocksHeaders_codec
            = pb::FieldCodec.ForBytes(82);
        private readonly pbc::RepeatedField<pb::ByteString> blocksHeaders_ = new pbc::RepeatedField<pb::ByteString>();
        /// <summary>
        /// In block format version 0 each byte contains only block codec identifier
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<pb::ByteString> BlocksHeaders {
          get { return blocksHeaders_; }
        }

        /// <summary>Field number for the "blocks_data" field.</summary>
        public const int BlocksDataFieldNumber = 11;
        private static readonly pb::FieldCodec<pb::ByteString> _repeated_blocksData_codec
            = pb::FieldCodec.ForBytes(90);
        private readonly pbc::RepeatedField<pb::ByteString> blocksData_ = new pbc::RepeatedField<pb::ByteString>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<pb::ByteString> BlocksData {
          get { return blocksData_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as WriteRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(WriteRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!sequenceNumbers_.Equals(other.sequenceNumbers_)) return false;
          if(!createdAtMs_.Equals(other.createdAtMs_)) return false;
          if(!sentAtMs_.Equals(other.sentAtMs_)) return false;
          if(!messageSizes_.Equals(other.messageSizes_)) return false;
          if(!blocksOffsets_.Equals(other.blocksOffsets_)) return false;
          if(!blocksPartNumbers_.Equals(other.blocksPartNumbers_)) return false;
          if(!blocksMessageCounts_.Equals(other.blocksMessageCounts_)) return false;
          if(!blocksUncompressedSizes_.Equals(other.blocksUncompressedSizes_)) return false;
          if(!blocksHeaders_.Equals(other.blocksHeaders_)) return false;
          if(!blocksData_.Equals(other.blocksData_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= sequenceNumbers_.GetHashCode();
          hash ^= createdAtMs_.GetHashCode();
          hash ^= sentAtMs_.GetHashCode();
          hash ^= messageSizes_.GetHashCode();
          hash ^= blocksOffsets_.GetHashCode();
          hash ^= blocksPartNumbers_.GetHashCode();
          hash ^= blocksMessageCounts_.GetHashCode();
          hash ^= blocksUncompressedSizes_.GetHashCode();
          hash ^= blocksHeaders_.GetHashCode();
          hash ^= blocksData_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          sequenceNumbers_.WriteTo(output, _repeated_sequenceNumbers_codec);
          createdAtMs_.WriteTo(output, _repeated_createdAtMs_codec);
          sentAtMs_.WriteTo(output, _repeated_sentAtMs_codec);
          messageSizes_.WriteTo(output, _repeated_messageSizes_codec);
          blocksOffsets_.WriteTo(output, _repeated_blocksOffsets_codec);
          blocksPartNumbers_.WriteTo(output, _repeated_blocksPartNumbers_codec);
          blocksMessageCounts_.WriteTo(output, _repeated_blocksMessageCounts_codec);
          blocksUncompressedSizes_.WriteTo(output, _repeated_blocksUncompressedSizes_codec);
          blocksHeaders_.WriteTo(output, _repeated_blocksHeaders_codec);
          blocksData_.WriteTo(output, _repeated_blocksData_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          sequenceNumbers_.WriteTo(ref output, _repeated_sequenceNumbers_codec);
          createdAtMs_.WriteTo(ref output, _repeated_createdAtMs_codec);
          sentAtMs_.WriteTo(ref output, _repeated_sentAtMs_codec);
          messageSizes_.WriteTo(ref output, _repeated_messageSizes_codec);
          blocksOffsets_.WriteTo(ref output, _repeated_blocksOffsets_codec);
          blocksPartNumbers_.WriteTo(ref output, _repeated_blocksPartNumbers_codec);
          blocksMessageCounts_.WriteTo(ref output, _repeated_blocksMessageCounts_codec);
          blocksUncompressedSizes_.WriteTo(ref output, _repeated_blocksUncompressedSizes_codec);
          blocksHeaders_.WriteTo(ref output, _repeated_blocksHeaders_codec);
          blocksData_.WriteTo(ref output, _repeated_blocksData_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += sequenceNumbers_.CalculateSize(_repeated_sequenceNumbers_codec);
          size += createdAtMs_.CalculateSize(_repeated_createdAtMs_codec);
          size += sentAtMs_.CalculateSize(_repeated_sentAtMs_codec);
          size += messageSizes_.CalculateSize(_repeated_messageSizes_codec);
          size += blocksOffsets_.CalculateSize(_repeated_blocksOffsets_codec);
          size += blocksPartNumbers_.CalculateSize(_repeated_blocksPartNumbers_codec);
          size += blocksMessageCounts_.CalculateSize(_repeated_blocksMessageCounts_codec);
          size += blocksUncompressedSizes_.CalculateSize(_repeated_blocksUncompressedSizes_codec);
          size += blocksHeaders_.CalculateSize(_repeated_blocksHeaders_codec);
          size += blocksData_.CalculateSize(_repeated_blocksData_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(WriteRequest other) {
          if (other == null) {
            return;
          }
          sequenceNumbers_.Add(other.sequenceNumbers_);
          createdAtMs_.Add(other.createdAtMs_);
          sentAtMs_.Add(other.sentAtMs_);
          messageSizes_.Add(other.messageSizes_);
          blocksOffsets_.Add(other.blocksOffsets_);
          blocksPartNumbers_.Add(other.blocksPartNumbers_);
          blocksMessageCounts_.Add(other.blocksMessageCounts_);
          blocksUncompressedSizes_.Add(other.blocksUncompressedSizes_);
          blocksHeaders_.Add(other.blocksHeaders_);
          blocksData_.Add(other.blocksData_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 18:
              case 16: {
                sequenceNumbers_.AddEntriesFrom(input, _repeated_sequenceNumbers_codec);
                break;
              }
              case 26:
              case 24: {
                createdAtMs_.AddEntriesFrom(input, _repeated_createdAtMs_codec);
                break;
              }
              case 34:
              case 32: {
                sentAtMs_.AddEntriesFrom(input, _repeated_sentAtMs_codec);
                break;
              }
              case 42:
              case 40: {
                messageSizes_.AddEntriesFrom(input, _repeated_messageSizes_codec);
                break;
              }
              case 50:
              case 48: {
                blocksOffsets_.AddEntriesFrom(input, _repeated_blocksOffsets_codec);
                break;
              }
              case 58:
              case 56: {
                blocksPartNumbers_.AddEntriesFrom(input, _repeated_blocksPartNumbers_codec);
                break;
              }
              case 66:
              case 64: {
                blocksMessageCounts_.AddEntriesFrom(input, _repeated_blocksMessageCounts_codec);
                break;
              }
              case 74:
              case 72: {
                blocksUncompressedSizes_.AddEntriesFrom(input, _repeated_blocksUncompressedSizes_codec);
                break;
              }
              case 82: {
                blocksHeaders_.AddEntriesFrom(input, _repeated_blocksHeaders_codec);
                break;
              }
              case 90: {
                blocksData_.AddEntriesFrom(input, _repeated_blocksData_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 18:
              case 16: {
                sequenceNumbers_.AddEntriesFrom(ref input, _repeated_sequenceNumbers_codec);
                break;
              }
              case 26:
              case 24: {
                createdAtMs_.AddEntriesFrom(ref input, _repeated_createdAtMs_codec);
                break;
              }
              case 34:
              case 32: {
                sentAtMs_.AddEntriesFrom(ref input, _repeated_sentAtMs_codec);
                break;
              }
              case 42:
              case 40: {
                messageSizes_.AddEntriesFrom(ref input, _repeated_messageSizes_codec);
                break;
              }
              case 50:
              case 48: {
                blocksOffsets_.AddEntriesFrom(ref input, _repeated_blocksOffsets_codec);
                break;
              }
              case 58:
              case 56: {
                blocksPartNumbers_.AddEntriesFrom(ref input, _repeated_blocksPartNumbers_codec);
                break;
              }
              case 66:
              case 64: {
                blocksMessageCounts_.AddEntriesFrom(ref input, _repeated_blocksMessageCounts_codec);
                break;
              }
              case 74:
              case 72: {
                blocksUncompressedSizes_.AddEntriesFrom(ref input, _repeated_blocksUncompressedSizes_codec);
                break;
              }
              case 82: {
                blocksHeaders_.AddEntriesFrom(ref input, _repeated_blocksHeaders_codec);
                break;
              }
              case 90: {
                blocksData_.AddEntriesFrom(ref input, _repeated_blocksData_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// In-session reauthentication and reauthorization, lets user increase session lifetime. You should wait for 'update_token_response' before sending next 'update_token_request'.
      /// </summary>
      public sealed partial class UpdateTokenRequest : pb::IMessage<UpdateTokenRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UpdateTokenRequest> _parser = new pb::MessageParser<UpdateTokenRequest>(() => new UpdateTokenRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UpdateTokenRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingWriteClientMessage.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateTokenRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateTokenRequest(UpdateTokenRequest other) : this() {
          token_ = other.token_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateTokenRequest Clone() {
          return new UpdateTokenRequest(this);
        }

        /// <summary>Field number for the "token" field.</summary>
        public const int TokenFieldNumber = 1;
        private string token_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Token {
          get { return token_; }
          set {
            token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UpdateTokenRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UpdateTokenRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Token != other.Token) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Token.Length != 0) hash ^= Token.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Token.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Token);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Token.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Token);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Token.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UpdateTokenRequest other) {
          if (other == null) {
            return;
          }
          if (other.Token.Length != 0) {
            Token = other.Token;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Token = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Token = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  ///*
  /// Response for write session. Contains one of:
  ///      InitResponse - correct handshake response.
  ///      BatchWriteResponse - acknowledgment of storing client messages.
  ///      UpdateTokenResponse - acknowledgment of reauthentication and reauthorization.
  /// </summary>
  public sealed partial class StreamingWriteServerMessage : pb::IMessage<StreamingWriteServerMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingWriteServerMessage> _parser = new pb::MessageParser<StreamingWriteServerMessage>(() => new StreamingWriteServerMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamingWriteServerMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingWriteServerMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingWriteServerMessage(StreamingWriteServerMessage other) : this() {
      status_ = other.status_;
      issues_ = other.issues_.Clone();
      switch (other.ServerMessageCase) {
        case ServerMessageOneofCase.InitResponse:
          InitResponse = other.InitResponse.Clone();
          break;
        case ServerMessageOneofCase.BatchWriteResponse:
          BatchWriteResponse = other.BatchWriteResponse.Clone();
          break;
        case ServerMessageOneofCase.UpdateTokenResponse:
          UpdateTokenResponse = other.UpdateTokenResponse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingWriteServerMessage Clone() {
      return new StreamingWriteServerMessage(this);
    }

    /// <summary>Field number for the "init_response" field.</summary>
    public const int InitResponseFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.InitResponse InitResponse {
      get { return serverMessageCase_ == ServerMessageOneofCase.InitResponse ? (global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.InitResponse) serverMessage_ : null; }
      set {
        serverMessage_ = value;
        serverMessageCase_ = value == null ? ServerMessageOneofCase.None : ServerMessageOneofCase.InitResponse;
      }
    }

    /// <summary>Field number for the "batch_write_response" field.</summary>
    public const int BatchWriteResponseFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.BatchWriteResponse BatchWriteResponse {
      get { return serverMessageCase_ == ServerMessageOneofCase.BatchWriteResponse ? (global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.BatchWriteResponse) serverMessage_ : null; }
      set {
        serverMessage_ = value;
        serverMessageCase_ = value == null ? ServerMessageOneofCase.None : ServerMessageOneofCase.BatchWriteResponse;
      }
    }

    /// <summary>Field number for the "update_token_response" field.</summary>
    public const int UpdateTokenResponseFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.UpdateTokenResponse UpdateTokenResponse {
      get { return serverMessageCase_ == ServerMessageOneofCase.UpdateTokenResponse ? (global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.UpdateTokenResponse) serverMessage_ : null; }
      set {
        serverMessage_ = value;
        serverMessageCase_ = value == null ? ServerMessageOneofCase.None : ServerMessageOneofCase.UpdateTokenResponse;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Ydb.StatusIds.Types.StatusCode status_ = global::Ydb.StatusIds.Types.StatusCode.Unspecified;
    /// <summary>
    /// Server status of response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.StatusIds.Types.StatusCode Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "issues" field.</summary>
    public const int IssuesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Ydb.Issue.IssueMessage> _repeated_issues_codec
        = pb::FieldCodec.ForMessage(18, global::Ydb.Issue.IssueMessage.Parser);
    private readonly pbc::RepeatedField<global::Ydb.Issue.IssueMessage> issues_ = new pbc::RepeatedField<global::Ydb.Issue.IssueMessage>();
    /// <summary>
    /// Issues if any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.Issue.IssueMessage> Issues {
      get { return issues_; }
    }

    private object serverMessage_;
    /// <summary>Enum of possible cases for the "server_message" oneof.</summary>
    public enum ServerMessageOneofCase {
      None = 0,
      InitResponse = 3,
      BatchWriteResponse = 4,
      UpdateTokenResponse = 5,
    }
    private ServerMessageOneofCase serverMessageCase_ = ServerMessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerMessageOneofCase ServerMessageCase {
      get { return serverMessageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerMessage() {
      serverMessageCase_ = ServerMessageOneofCase.None;
      serverMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamingWriteServerMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamingWriteServerMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InitResponse, other.InitResponse)) return false;
      if (!object.Equals(BatchWriteResponse, other.BatchWriteResponse)) return false;
      if (!object.Equals(UpdateTokenResponse, other.UpdateTokenResponse)) return false;
      if (Status != other.Status) return false;
      if(!issues_.Equals(other.issues_)) return false;
      if (ServerMessageCase != other.ServerMessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (serverMessageCase_ == ServerMessageOneofCase.InitResponse) hash ^= InitResponse.GetHashCode();
      if (serverMessageCase_ == ServerMessageOneofCase.BatchWriteResponse) hash ^= BatchWriteResponse.GetHashCode();
      if (serverMessageCase_ == ServerMessageOneofCase.UpdateTokenResponse) hash ^= UpdateTokenResponse.GetHashCode();
      if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) hash ^= Status.GetHashCode();
      hash ^= issues_.GetHashCode();
      hash ^= (int) serverMessageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      issues_.WriteTo(output, _repeated_issues_codec);
      if (serverMessageCase_ == ServerMessageOneofCase.InitResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(InitResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.BatchWriteResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(BatchWriteResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.UpdateTokenResponse) {
        output.WriteRawTag(42);
        output.WriteMessage(UpdateTokenResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      issues_.WriteTo(ref output, _repeated_issues_codec);
      if (serverMessageCase_ == ServerMessageOneofCase.InitResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(InitResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.BatchWriteResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(BatchWriteResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.UpdateTokenResponse) {
        output.WriteRawTag(42);
        output.WriteMessage(UpdateTokenResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (serverMessageCase_ == ServerMessageOneofCase.InitResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InitResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.BatchWriteResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BatchWriteResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.UpdateTokenResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTokenResponse);
      }
      if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += issues_.CalculateSize(_repeated_issues_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamingWriteServerMessage other) {
      if (other == null) {
        return;
      }
      if (other.Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
        Status = other.Status;
      }
      issues_.Add(other.issues_);
      switch (other.ServerMessageCase) {
        case ServerMessageOneofCase.InitResponse:
          if (InitResponse == null) {
            InitResponse = new global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.InitResponse();
          }
          InitResponse.MergeFrom(other.InitResponse);
          break;
        case ServerMessageOneofCase.BatchWriteResponse:
          if (BatchWriteResponse == null) {
            BatchWriteResponse = new global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.BatchWriteResponse();
          }
          BatchWriteResponse.MergeFrom(other.BatchWriteResponse);
          break;
        case ServerMessageOneofCase.UpdateTokenResponse:
          if (UpdateTokenResponse == null) {
            UpdateTokenResponse = new global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.UpdateTokenResponse();
          }
          UpdateTokenResponse.MergeFrom(other.UpdateTokenResponse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
            break;
          }
          case 18: {
            issues_.AddEntriesFrom(input, _repeated_issues_codec);
            break;
          }
          case 26: {
            global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.InitResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.InitResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.InitResponse) {
              subBuilder.MergeFrom(InitResponse);
            }
            input.ReadMessage(subBuilder);
            InitResponse = subBuilder;
            break;
          }
          case 34: {
            global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.BatchWriteResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.BatchWriteResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.BatchWriteResponse) {
              subBuilder.MergeFrom(BatchWriteResponse);
            }
            input.ReadMessage(subBuilder);
            BatchWriteResponse = subBuilder;
            break;
          }
          case 42: {
            global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.UpdateTokenResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.UpdateTokenResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.UpdateTokenResponse) {
              subBuilder.MergeFrom(UpdateTokenResponse);
            }
            input.ReadMessage(subBuilder);
            UpdateTokenResponse = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
            break;
          }
          case 18: {
            issues_.AddEntriesFrom(ref input, _repeated_issues_codec);
            break;
          }
          case 26: {
            global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.InitResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.InitResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.InitResponse) {
              subBuilder.MergeFrom(InitResponse);
            }
            input.ReadMessage(subBuilder);
            InitResponse = subBuilder;
            break;
          }
          case 34: {
            global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.BatchWriteResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.BatchWriteResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.BatchWriteResponse) {
              subBuilder.MergeFrom(BatchWriteResponse);
            }
            input.ReadMessage(subBuilder);
            BatchWriteResponse = subBuilder;
            break;
          }
          case 42: {
            global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.UpdateTokenResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.UpdateTokenResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.UpdateTokenResponse) {
              subBuilder.MergeFrom(UpdateTokenResponse);
            }
            input.ReadMessage(subBuilder);
            UpdateTokenResponse = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the StreamingWriteServerMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Response for handshake.
      /// </summary>
      public sealed partial class InitResponse : pb::IMessage<InitResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InitResponse> _parser = new pb::MessageParser<InitResponse>(() => new InitResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InitResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitResponse(InitResponse other) : this() {
          lastSequenceNumber_ = other.lastSequenceNumber_;
          sessionId_ = other.sessionId_;
          topic_ = other.topic_;
          cluster_ = other.cluster_;
          partitionId_ = other.partitionId_;
          blockFormatVersion_ = other.blockFormatVersion_;
          supportedCodecs_ = other.supportedCodecs_.Clone();
          maxFlushWindowSize_ = other.maxFlushWindowSize_;
          maxBlockSize_ = other.maxBlockSize_;
          connectionMeta_ = other.connectionMeta_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitResponse Clone() {
          return new InitResponse(this);
        }

        /// <summary>Field number for the "last_sequence_number" field.</summary>
        public const int LastSequenceNumberFieldNumber = 1;
        private long lastSequenceNumber_;
        /// <summary>
        /// Last persisted message's sequence number for this message group.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long LastSequenceNumber {
          get { return lastSequenceNumber_; }
          set {
            lastSequenceNumber_ = value;
          }
        }

        /// <summary>Field number for the "session_id" field.</summary>
        public const int SessionIdFieldNumber = 2;
        private string sessionId_ = "";
        /// <summary>
        /// Unique identifier of write session. Used for debug purposes.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SessionId {
          get { return sessionId_; }
          set {
            sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "topic" field.</summary>
        public const int TopicFieldNumber = 3;
        private string topic_ = "";
        /// <summary>
        /// Path of topic that matched for this write session. Used for debug purposes, will be the same as in Init request from client.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Topic {
          get { return topic_; }
          set {
            topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "cluster" field.</summary>
        public const int ClusterFieldNumber = 4;
        private string cluster_ = "";
        /// <summary>
        /// Write session is established to this cluster. Client data will be in instance of topic in this cluster.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Cluster {
          get { return cluster_; }
          set {
            cluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "partition_id" field.</summary>
        public const int PartitionIdFieldNumber = 5;
        private long partitionId_;
        /// <summary>
        /// Identifier of partition that is matched for this write session.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long PartitionId {
          get { return partitionId_; }
          set {
            partitionId_ = value;
          }
        }

        /// <summary>Field number for the "block_format_version" field.</summary>
        public const int BlockFormatVersionFieldNumber = 6;
        private long blockFormatVersion_;
        /// <summary>
        /// Block (see StreamingWriteClientMessage.WriteRequest.blocks_data) format version supported by server or configured for a topic. Client must write data only with them.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long BlockFormatVersion {
          get { return blockFormatVersion_; }
          set {
            blockFormatVersion_ = value;
          }
        }

        /// <summary>Field number for the "supported_codecs" field.</summary>
        public const int SupportedCodecsFieldNumber = 10;
        private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.Codec> _repeated_supportedCodecs_codec
            = pb::FieldCodec.ForEnum(82, x => (int) x, x => (global::Ydb.PersQueue.V1.Codec) x);
        private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.Codec> supportedCodecs_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.Codec>();
        /// <summary>
        /// Client can only use compression codecs from this set to write messages to topic, session will be closed with BAD_REQUEST otherwise.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.PersQueue.V1.Codec> SupportedCodecs {
          get { return supportedCodecs_; }
        }

        /// <summary>Field number for the "max_flush_window_size" field.</summary>
        public const int MaxFlushWindowSizeFieldNumber = 7;
        private long maxFlushWindowSize_;
        /// <summary>
        /// Maximal flush window size choosed by server. Size of uncompressed data not sended to server must not be bigger than flush window size.
        /// In other words, this is maximal size of gap inside uncompressed data, which is not sended to server yet.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MaxFlushWindowSize {
          get { return maxFlushWindowSize_; }
          set {
            maxFlushWindowSize_ = value;
          }
        }

        /// <summary>Field number for the "max_block_size" field.</summary>
        public const int MaxBlockSizeFieldNumber = 8;
        private long maxBlockSize_;
        /// <summary>
        /// How big blocks per stream could be(in uncompressed size). When block contains more than max_block_size of uncompressed data - block must be truncated.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MaxBlockSize {
          get { return maxBlockSize_; }
          set {
            maxBlockSize_ = value;
          }
        }

        /// <summary>Field number for the "connection_meta" field.</summary>
        public const int ConnectionMetaFieldNumber = 9;
        private pb::ByteString connectionMeta_ = pb::ByteString.Empty;
        /// <summary>
        /// Opaque blob, used for fast reconnects.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString ConnectionMeta {
          get { return connectionMeta_; }
          set {
            connectionMeta_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InitResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InitResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (LastSequenceNumber != other.LastSequenceNumber) return false;
          if (SessionId != other.SessionId) return false;
          if (Topic != other.Topic) return false;
          if (Cluster != other.Cluster) return false;
          if (PartitionId != other.PartitionId) return false;
          if (BlockFormatVersion != other.BlockFormatVersion) return false;
          if(!supportedCodecs_.Equals(other.supportedCodecs_)) return false;
          if (MaxFlushWindowSize != other.MaxFlushWindowSize) return false;
          if (MaxBlockSize != other.MaxBlockSize) return false;
          if (ConnectionMeta != other.ConnectionMeta) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (LastSequenceNumber != 0L) hash ^= LastSequenceNumber.GetHashCode();
          if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
          if (Topic.Length != 0) hash ^= Topic.GetHashCode();
          if (Cluster.Length != 0) hash ^= Cluster.GetHashCode();
          if (PartitionId != 0L) hash ^= PartitionId.GetHashCode();
          if (BlockFormatVersion != 0L) hash ^= BlockFormatVersion.GetHashCode();
          hash ^= supportedCodecs_.GetHashCode();
          if (MaxFlushWindowSize != 0L) hash ^= MaxFlushWindowSize.GetHashCode();
          if (MaxBlockSize != 0L) hash ^= MaxBlockSize.GetHashCode();
          if (ConnectionMeta.Length != 0) hash ^= ConnectionMeta.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (LastSequenceNumber != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(LastSequenceNumber);
          }
          if (SessionId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(SessionId);
          }
          if (Topic.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Topic);
          }
          if (Cluster.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Cluster);
          }
          if (PartitionId != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(PartitionId);
          }
          if (BlockFormatVersion != 0L) {
            output.WriteRawTag(48);
            output.WriteInt64(BlockFormatVersion);
          }
          if (MaxFlushWindowSize != 0L) {
            output.WriteRawTag(56);
            output.WriteInt64(MaxFlushWindowSize);
          }
          if (MaxBlockSize != 0L) {
            output.WriteRawTag(64);
            output.WriteInt64(MaxBlockSize);
          }
          if (ConnectionMeta.Length != 0) {
            output.WriteRawTag(74);
            output.WriteBytes(ConnectionMeta);
          }
          supportedCodecs_.WriteTo(output, _repeated_supportedCodecs_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (LastSequenceNumber != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(LastSequenceNumber);
          }
          if (SessionId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(SessionId);
          }
          if (Topic.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Topic);
          }
          if (Cluster.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Cluster);
          }
          if (PartitionId != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(PartitionId);
          }
          if (BlockFormatVersion != 0L) {
            output.WriteRawTag(48);
            output.WriteInt64(BlockFormatVersion);
          }
          if (MaxFlushWindowSize != 0L) {
            output.WriteRawTag(56);
            output.WriteInt64(MaxFlushWindowSize);
          }
          if (MaxBlockSize != 0L) {
            output.WriteRawTag(64);
            output.WriteInt64(MaxBlockSize);
          }
          if (ConnectionMeta.Length != 0) {
            output.WriteRawTag(74);
            output.WriteBytes(ConnectionMeta);
          }
          supportedCodecs_.WriteTo(ref output, _repeated_supportedCodecs_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (LastSequenceNumber != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastSequenceNumber);
          }
          if (SessionId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
          }
          if (Topic.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
          }
          if (Cluster.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Cluster);
          }
          if (PartitionId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(PartitionId);
          }
          if (BlockFormatVersion != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlockFormatVersion);
          }
          size += supportedCodecs_.CalculateSize(_repeated_supportedCodecs_codec);
          if (MaxFlushWindowSize != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxFlushWindowSize);
          }
          if (MaxBlockSize != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxBlockSize);
          }
          if (ConnectionMeta.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(ConnectionMeta);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InitResponse other) {
          if (other == null) {
            return;
          }
          if (other.LastSequenceNumber != 0L) {
            LastSequenceNumber = other.LastSequenceNumber;
          }
          if (other.SessionId.Length != 0) {
            SessionId = other.SessionId;
          }
          if (other.Topic.Length != 0) {
            Topic = other.Topic;
          }
          if (other.Cluster.Length != 0) {
            Cluster = other.Cluster;
          }
          if (other.PartitionId != 0L) {
            PartitionId = other.PartitionId;
          }
          if (other.BlockFormatVersion != 0L) {
            BlockFormatVersion = other.BlockFormatVersion;
          }
          supportedCodecs_.Add(other.supportedCodecs_);
          if (other.MaxFlushWindowSize != 0L) {
            MaxFlushWindowSize = other.MaxFlushWindowSize;
          }
          if (other.MaxBlockSize != 0L) {
            MaxBlockSize = other.MaxBlockSize;
          }
          if (other.ConnectionMeta.Length != 0) {
            ConnectionMeta = other.ConnectionMeta;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                LastSequenceNumber = input.ReadInt64();
                break;
              }
              case 18: {
                SessionId = input.ReadString();
                break;
              }
              case 26: {
                Topic = input.ReadString();
                break;
              }
              case 34: {
                Cluster = input.ReadString();
                break;
              }
              case 40: {
                PartitionId = input.ReadInt64();
                break;
              }
              case 48: {
                BlockFormatVersion = input.ReadInt64();
                break;
              }
              case 56: {
                MaxFlushWindowSize = input.ReadInt64();
                break;
              }
              case 64: {
                MaxBlockSize = input.ReadInt64();
                break;
              }
              case 74: {
                ConnectionMeta = input.ReadBytes();
                break;
              }
              case 82:
              case 80: {
                supportedCodecs_.AddEntriesFrom(input, _repeated_supportedCodecs_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                LastSequenceNumber = input.ReadInt64();
                break;
              }
              case 18: {
                SessionId = input.ReadString();
                break;
              }
              case 26: {
                Topic = input.ReadString();
                break;
              }
              case 34: {
                Cluster = input.ReadString();
                break;
              }
              case 40: {
                PartitionId = input.ReadInt64();
                break;
              }
              case 48: {
                BlockFormatVersion = input.ReadInt64();
                break;
              }
              case 56: {
                MaxFlushWindowSize = input.ReadInt64();
                break;
              }
              case 64: {
                MaxBlockSize = input.ReadInt64();
                break;
              }
              case 74: {
                ConnectionMeta = input.ReadBytes();
                break;
              }
              case 82:
              case 80: {
                supportedCodecs_.AddEntriesFrom(ref input, _repeated_supportedCodecs_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Message that represents acknowledgment for sequence of client messages. This sequence is persisted together so write statistics is for messages batch.
      /// </summary>
      public sealed partial class BatchWriteResponse : pb::IMessage<BatchWriteResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<BatchWriteResponse> _parser = new pb::MessageParser<BatchWriteResponse>(() => new BatchWriteResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BatchWriteResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BatchWriteResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BatchWriteResponse(BatchWriteResponse other) : this() {
          sequenceNumbers_ = other.sequenceNumbers_.Clone();
          offsets_ = other.offsets_.Clone();
          alreadyWritten_ = other.alreadyWritten_.Clone();
          partitionId_ = other.partitionId_;
          writeStatistics_ = other.writeStatistics_ != null ? other.writeStatistics_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BatchWriteResponse Clone() {
          return new BatchWriteResponse(this);
        }

        /// <summary>Field number for the "sequence_numbers" field.</summary>
        public const int SequenceNumbersFieldNumber = 1;
        private static readonly pb::FieldCodec<long> _repeated_sequenceNumbers_codec
            = pb::FieldCodec.ForInt64(10);
        private readonly pbc::RepeatedField<long> sequenceNumbers_ = new pbc::RepeatedField<long>();
        /// <summary>
        /// Sequence numbers of persisted client messages.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> SequenceNumbers {
          get { return sequenceNumbers_; }
        }

        /// <summary>Field number for the "offsets" field.</summary>
        public const int OffsetsFieldNumber = 2;
        private static readonly pb::FieldCodec<long> _repeated_offsets_codec
            = pb::FieldCodec.ForInt64(18);
        private readonly pbc::RepeatedField<long> offsets_ = new pbc::RepeatedField<long>();
        /// <summary>
        /// Assigned partition offsets.
        /// Zero for skipped messages.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> Offsets {
          get { return offsets_; }
        }

        /// <summary>Field number for the "already_written" field.</summary>
        public const int AlreadyWrittenFieldNumber = 3;
        private static readonly pb::FieldCodec<bool> _repeated_alreadyWritten_codec
            = pb::FieldCodec.ForBool(26);
        private readonly pbc::RepeatedField<bool> alreadyWritten_ = new pbc::RepeatedField<bool>();
        /// <summary>
        /// Per message flag. False if message is written for the first time and True otherwise.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<bool> AlreadyWritten {
          get { return alreadyWritten_; }
        }

        /// <summary>Field number for the "partition_id" field.</summary>
        public const int PartitionIdFieldNumber = 4;
        private long partitionId_;
        /// <summary>
        /// Assigned partition for all client messages inside this batch.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long PartitionId {
          get { return partitionId_; }
          set {
            partitionId_ = value;
          }
        }

        /// <summary>Field number for the "write_statistics" field.</summary>
        public const int WriteStatisticsFieldNumber = 5;
        private global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.WriteStatistics writeStatistics_;
        /// <summary>
        /// Write statistics for this sequence of client messages.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.WriteStatistics WriteStatistics {
          get { return writeStatistics_; }
          set {
            writeStatistics_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BatchWriteResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BatchWriteResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!sequenceNumbers_.Equals(other.sequenceNumbers_)) return false;
          if(!offsets_.Equals(other.offsets_)) return false;
          if(!alreadyWritten_.Equals(other.alreadyWritten_)) return false;
          if (PartitionId != other.PartitionId) return false;
          if (!object.Equals(WriteStatistics, other.WriteStatistics)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= sequenceNumbers_.GetHashCode();
          hash ^= offsets_.GetHashCode();
          hash ^= alreadyWritten_.GetHashCode();
          if (PartitionId != 0L) hash ^= PartitionId.GetHashCode();
          if (writeStatistics_ != null) hash ^= WriteStatistics.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          sequenceNumbers_.WriteTo(output, _repeated_sequenceNumbers_codec);
          offsets_.WriteTo(output, _repeated_offsets_codec);
          alreadyWritten_.WriteTo(output, _repeated_alreadyWritten_codec);
          if (PartitionId != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(PartitionId);
          }
          if (writeStatistics_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(WriteStatistics);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          sequenceNumbers_.WriteTo(ref output, _repeated_sequenceNumbers_codec);
          offsets_.WriteTo(ref output, _repeated_offsets_codec);
          alreadyWritten_.WriteTo(ref output, _repeated_alreadyWritten_codec);
          if (PartitionId != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(PartitionId);
          }
          if (writeStatistics_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(WriteStatistics);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += sequenceNumbers_.CalculateSize(_repeated_sequenceNumbers_codec);
          size += offsets_.CalculateSize(_repeated_offsets_codec);
          size += alreadyWritten_.CalculateSize(_repeated_alreadyWritten_codec);
          if (PartitionId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(PartitionId);
          }
          if (writeStatistics_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(WriteStatistics);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BatchWriteResponse other) {
          if (other == null) {
            return;
          }
          sequenceNumbers_.Add(other.sequenceNumbers_);
          offsets_.Add(other.offsets_);
          alreadyWritten_.Add(other.alreadyWritten_);
          if (other.PartitionId != 0L) {
            PartitionId = other.PartitionId;
          }
          if (other.writeStatistics_ != null) {
            if (writeStatistics_ == null) {
              WriteStatistics = new global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.WriteStatistics();
            }
            WriteStatistics.MergeFrom(other.WriteStatistics);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                sequenceNumbers_.AddEntriesFrom(input, _repeated_sequenceNumbers_codec);
                break;
              }
              case 18:
              case 16: {
                offsets_.AddEntriesFrom(input, _repeated_offsets_codec);
                break;
              }
              case 26:
              case 24: {
                alreadyWritten_.AddEntriesFrom(input, _repeated_alreadyWritten_codec);
                break;
              }
              case 32: {
                PartitionId = input.ReadInt64();
                break;
              }
              case 42: {
                if (writeStatistics_ == null) {
                  WriteStatistics = new global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.WriteStatistics();
                }
                input.ReadMessage(WriteStatistics);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10:
              case 8: {
                sequenceNumbers_.AddEntriesFrom(ref input, _repeated_sequenceNumbers_codec);
                break;
              }
              case 18:
              case 16: {
                offsets_.AddEntriesFrom(ref input, _repeated_offsets_codec);
                break;
              }
              case 26:
              case 24: {
                alreadyWritten_.AddEntriesFrom(ref input, _repeated_alreadyWritten_codec);
                break;
              }
              case 32: {
                PartitionId = input.ReadInt64();
                break;
              }
              case 42: {
                if (writeStatistics_ == null) {
                  WriteStatistics = new global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Types.WriteStatistics();
                }
                input.ReadMessage(WriteStatistics);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class UpdateTokenResponse : pb::IMessage<UpdateTokenResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UpdateTokenResponse> _parser = new pb::MessageParser<UpdateTokenResponse>(() => new UpdateTokenResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UpdateTokenResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateTokenResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateTokenResponse(UpdateTokenResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateTokenResponse Clone() {
          return new UpdateTokenResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UpdateTokenResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UpdateTokenResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UpdateTokenResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Message with write statistics.
      /// </summary>
      public sealed partial class WriteStatistics : pb::IMessage<WriteStatistics>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<WriteStatistics> _parser = new pb::MessageParser<WriteStatistics>(() => new WriteStatistics());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<WriteStatistics> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingWriteServerMessage.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WriteStatistics() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WriteStatistics(WriteStatistics other) : this() {
          persistDurationMs_ = other.persistDurationMs_;
          queuedInPartitionDurationMs_ = other.queuedInPartitionDurationMs_;
          throttledOnPartitionDurationMs_ = other.throttledOnPartitionDurationMs_;
          throttledOnTopicDurationMs_ = other.throttledOnTopicDurationMs_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WriteStatistics Clone() {
          return new WriteStatistics(this);
        }

        /// <summary>Field number for the "persist_duration_ms" field.</summary>
        public const int PersistDurationMsFieldNumber = 1;
        private long persistDurationMs_;
        /// <summary>
        /// Time spent in persisting of data.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long PersistDurationMs {
          get { return persistDurationMs_; }
          set {
            persistDurationMs_ = value;
          }
        }

        /// <summary>Field number for the "queued_in_partition_duration_ms" field.</summary>
        public const int QueuedInPartitionDurationMsFieldNumber = 2;
        private long queuedInPartitionDurationMs_;
        /// <summary>
        /// Time spent in queue before persisting.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long QueuedInPartitionDurationMs {
          get { return queuedInPartitionDurationMs_; }
          set {
            queuedInPartitionDurationMs_ = value;
          }
        }

        /// <summary>Field number for the "throttled_on_partition_duration_ms" field.</summary>
        public const int ThrottledOnPartitionDurationMsFieldNumber = 3;
        private long throttledOnPartitionDurationMs_;
        /// <summary>
        /// Time spent awaiting for partition write quota.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ThrottledOnPartitionDurationMs {
          get { return throttledOnPartitionDurationMs_; }
          set {
            throttledOnPartitionDurationMs_ = value;
          }
        }

        /// <summary>Field number for the "throttled_on_topic_duration_ms" field.</summary>
        public const int ThrottledOnTopicDurationMsFieldNumber = 4;
        private long throttledOnTopicDurationMs_;
        /// <summary>
        /// Time spent awaiting for topic write quota.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ThrottledOnTopicDurationMs {
          get { return throttledOnTopicDurationMs_; }
          set {
            throttledOnTopicDurationMs_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as WriteStatistics);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(WriteStatistics other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PersistDurationMs != other.PersistDurationMs) return false;
          if (QueuedInPartitionDurationMs != other.QueuedInPartitionDurationMs) return false;
          if (ThrottledOnPartitionDurationMs != other.ThrottledOnPartitionDurationMs) return false;
          if (ThrottledOnTopicDurationMs != other.ThrottledOnTopicDurationMs) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PersistDurationMs != 0L) hash ^= PersistDurationMs.GetHashCode();
          if (QueuedInPartitionDurationMs != 0L) hash ^= QueuedInPartitionDurationMs.GetHashCode();
          if (ThrottledOnPartitionDurationMs != 0L) hash ^= ThrottledOnPartitionDurationMs.GetHashCode();
          if (ThrottledOnTopicDurationMs != 0L) hash ^= ThrottledOnTopicDurationMs.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (PersistDurationMs != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(PersistDurationMs);
          }
          if (QueuedInPartitionDurationMs != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(QueuedInPartitionDurationMs);
          }
          if (ThrottledOnPartitionDurationMs != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(ThrottledOnPartitionDurationMs);
          }
          if (ThrottledOnTopicDurationMs != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(ThrottledOnTopicDurationMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (PersistDurationMs != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(PersistDurationMs);
          }
          if (QueuedInPartitionDurationMs != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(QueuedInPartitionDurationMs);
          }
          if (ThrottledOnPartitionDurationMs != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(ThrottledOnPartitionDurationMs);
          }
          if (ThrottledOnTopicDurationMs != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(ThrottledOnTopicDurationMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PersistDurationMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(PersistDurationMs);
          }
          if (QueuedInPartitionDurationMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(QueuedInPartitionDurationMs);
          }
          if (ThrottledOnPartitionDurationMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ThrottledOnPartitionDurationMs);
          }
          if (ThrottledOnTopicDurationMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ThrottledOnTopicDurationMs);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(WriteStatistics other) {
          if (other == null) {
            return;
          }
          if (other.PersistDurationMs != 0L) {
            PersistDurationMs = other.PersistDurationMs;
          }
          if (other.QueuedInPartitionDurationMs != 0L) {
            QueuedInPartitionDurationMs = other.QueuedInPartitionDurationMs;
          }
          if (other.ThrottledOnPartitionDurationMs != 0L) {
            ThrottledOnPartitionDurationMs = other.ThrottledOnPartitionDurationMs;
          }
          if (other.ThrottledOnTopicDurationMs != 0L) {
            ThrottledOnTopicDurationMs = other.ThrottledOnTopicDurationMs;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PersistDurationMs = input.ReadInt64();
                break;
              }
              case 16: {
                QueuedInPartitionDurationMs = input.ReadInt64();
                break;
              }
              case 24: {
                ThrottledOnPartitionDurationMs = input.ReadInt64();
                break;
              }
              case 32: {
                ThrottledOnTopicDurationMs = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                PersistDurationMs = input.ReadInt64();
                break;
              }
              case 16: {
                QueuedInPartitionDurationMs = input.ReadInt64();
                break;
              }
              case 24: {
                ThrottledOnPartitionDurationMs = input.ReadInt64();
                break;
              }
              case 32: {
                ThrottledOnTopicDurationMs = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class Path : pb::IMessage<Path>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Path> _parser = new pb::MessageParser<Path>(() => new Path());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Path> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Path() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Path(Path other) : this() {
      path_ = other.path_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Path Clone() {
      return new Path(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int Path_FieldNumber = 1;
    private string path_ = "";
    /// <summary>
    /// Path of object (topic/consumer).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path_ {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Path);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Path other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path_ != other.Path_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path_.Length != 0) hash ^= Path_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Path_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Path_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Path other) {
      if (other == null) {
        return;
      }
      if (other.Path_.Length != 0) {
        Path_ = other.Path_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path_ = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Path_ = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KeyValue : pb::IMessage<KeyValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyValue> _parser = new pb::MessageParser<KeyValue>(() => new KeyValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValue(KeyValue other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValue Clone() {
      return new KeyValue(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyValue other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Single read parameters for server.
  /// </summary>
  public sealed partial class ReadParams : pb::IMessage<ReadParams>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadParams> _parser = new pb::MessageParser<ReadParams>(() => new ReadParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadParams(ReadParams other) : this() {
      maxReadMessagesCount_ = other.maxReadMessagesCount_;
      maxReadSize_ = other.maxReadSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadParams Clone() {
      return new ReadParams(this);
    }

    /// <summary>Field number for the "max_read_messages_count" field.</summary>
    public const int MaxReadMessagesCountFieldNumber = 1;
    private uint maxReadMessagesCount_;
    /// <summary>
    /// Max messages to give to client in one read request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaxReadMessagesCount {
      get { return maxReadMessagesCount_; }
      set {
        maxReadMessagesCount_ = value;
      }
    }

    /// <summary>Field number for the "max_read_size" field.</summary>
    public const int MaxReadSizeFieldNumber = 2;
    private uint maxReadSize_;
    /// <summary>
    /// Max size in bytes to give to client in one read request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaxReadSize {
      get { return maxReadSize_; }
      set {
        maxReadSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxReadMessagesCount != other.MaxReadMessagesCount) return false;
      if (MaxReadSize != other.MaxReadSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxReadMessagesCount != 0) hash ^= MaxReadMessagesCount.GetHashCode();
      if (MaxReadSize != 0) hash ^= MaxReadSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MaxReadMessagesCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MaxReadMessagesCount);
      }
      if (MaxReadSize != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxReadSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MaxReadMessagesCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MaxReadMessagesCount);
      }
      if (MaxReadSize != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxReadSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxReadMessagesCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxReadMessagesCount);
      }
      if (MaxReadSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxReadSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadParams other) {
      if (other == null) {
        return;
      }
      if (other.MaxReadMessagesCount != 0) {
        MaxReadMessagesCount = other.MaxReadMessagesCount;
      }
      if (other.MaxReadSize != 0) {
        MaxReadSize = other.MaxReadSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxReadMessagesCount = input.ReadUInt32();
            break;
          }
          case 16: {
            MaxReadSize = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MaxReadMessagesCount = input.ReadUInt32();
            break;
          }
          case 16: {
            MaxReadSize = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Message that is used for addressing read for commiting.
  /// </summary>
  public sealed partial class CommitCookie : pb::IMessage<CommitCookie>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommitCookie> _parser = new pb::MessageParser<CommitCookie>(() => new CommitCookie());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommitCookie> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitCookie() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitCookie(CommitCookie other) : this() {
      assignId_ = other.assignId_;
      partitionCookie_ = other.partitionCookie_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitCookie Clone() {
      return new CommitCookie(this);
    }

    /// <summary>Field number for the "assign_id" field.</summary>
    public const int AssignIdFieldNumber = 1;
    private ulong assignId_;
    /// <summary>
    /// Assign identitifier of assigned partition from which read was done.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AssignId {
      get { return assignId_; }
      set {
        assignId_ = value;
      }
    }

    /// <summary>Field number for the "partition_cookie" field.</summary>
    public const int PartitionCookieFieldNumber = 2;
    private ulong partitionCookie_;
    /// <summary>
    /// Incremental identifier of concrete partition read batch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PartitionCookie {
      get { return partitionCookie_; }
      set {
        partitionCookie_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommitCookie);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommitCookie other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AssignId != other.AssignId) return false;
      if (PartitionCookie != other.PartitionCookie) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AssignId != 0UL) hash ^= AssignId.GetHashCode();
      if (PartitionCookie != 0UL) hash ^= PartitionCookie.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AssignId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(AssignId);
      }
      if (PartitionCookie != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(PartitionCookie);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AssignId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(AssignId);
      }
      if (PartitionCookie != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(PartitionCookie);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AssignId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AssignId);
      }
      if (PartitionCookie != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PartitionCookie);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommitCookie other) {
      if (other == null) {
        return;
      }
      if (other.AssignId != 0UL) {
        AssignId = other.AssignId;
      }
      if (other.PartitionCookie != 0UL) {
        PartitionCookie = other.PartitionCookie;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AssignId = input.ReadUInt64();
            break;
          }
          case 16: {
            PartitionCookie = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AssignId = input.ReadUInt64();
            break;
          }
          case 16: {
            PartitionCookie = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CommitOffsetRange : pb::IMessage<CommitOffsetRange>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommitOffsetRange> _parser = new pb::MessageParser<CommitOffsetRange>(() => new CommitOffsetRange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommitOffsetRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitOffsetRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitOffsetRange(CommitOffsetRange other) : this() {
      assignId_ = other.assignId_;
      startOffset_ = other.startOffset_;
      endOffset_ = other.endOffset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitOffsetRange Clone() {
      return new CommitOffsetRange(this);
    }

    /// <summary>Field number for the "assign_id" field.</summary>
    public const int AssignIdFieldNumber = 1;
    private ulong assignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AssignId {
      get { return assignId_; }
      set {
        assignId_ = value;
      }
    }

    /// <summary>Field number for the "start_offset" field.</summary>
    public const int StartOffsetFieldNumber = 2;
    private ulong startOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StartOffset {
      get { return startOffset_; }
      set {
        startOffset_ = value;
      }
    }

    /// <summary>Field number for the "end_offset" field.</summary>
    public const int EndOffsetFieldNumber = 3;
    private ulong endOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong EndOffset {
      get { return endOffset_; }
      set {
        endOffset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommitOffsetRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommitOffsetRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AssignId != other.AssignId) return false;
      if (StartOffset != other.StartOffset) return false;
      if (EndOffset != other.EndOffset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AssignId != 0UL) hash ^= AssignId.GetHashCode();
      if (StartOffset != 0UL) hash ^= StartOffset.GetHashCode();
      if (EndOffset != 0UL) hash ^= EndOffset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AssignId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(AssignId);
      }
      if (StartOffset != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(StartOffset);
      }
      if (EndOffset != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(EndOffset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AssignId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(AssignId);
      }
      if (StartOffset != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(StartOffset);
      }
      if (EndOffset != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(EndOffset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AssignId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AssignId);
      }
      if (StartOffset != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StartOffset);
      }
      if (EndOffset != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EndOffset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommitOffsetRange other) {
      if (other == null) {
        return;
      }
      if (other.AssignId != 0UL) {
        AssignId = other.AssignId;
      }
      if (other.StartOffset != 0UL) {
        StartOffset = other.StartOffset;
      }
      if (other.EndOffset != 0UL) {
        EndOffset = other.EndOffset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AssignId = input.ReadUInt64();
            break;
          }
          case 16: {
            StartOffset = input.ReadUInt64();
            break;
          }
          case 24: {
            EndOffset = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AssignId = input.ReadUInt64();
            break;
          }
          case 16: {
            StartOffset = input.ReadUInt64();
            break;
          }
          case 24: {
            EndOffset = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Request for read session. Contains one of:
  ///      InitRequest - handshake request.
  ///      ReadRequest - request for data.
  ///      CommitRequest - request for commit of some read data.
  ///      CreatePartitionStreamResponse - signal for server that client is ready to get data from partition.
  ///      DestroyPartitionStreamResponse - signal for server that client finished working with partition. Must be sent only after corresponding Release request from server.
  ///      StopReadRequest - signal for server that client is not ready to get more data from this partition.
  ///      ResumeReadRequest - signal for server that client is ready to get more data from this partition.
  /// </summary>
  public sealed partial class StreamingReadClientMessageNew : pb::IMessage<StreamingReadClientMessageNew>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingReadClientMessageNew> _parser = new pb::MessageParser<StreamingReadClientMessageNew>(() => new StreamingReadClientMessageNew());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamingReadClientMessageNew> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingReadClientMessageNew() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingReadClientMessageNew(StreamingReadClientMessageNew other) : this() {
      token_ = other.token_;
      switch (other.ClientMessageCase) {
        case ClientMessageOneofCase.InitRequest:
          InitRequest = other.InitRequest.Clone();
          break;
        case ClientMessageOneofCase.ReadRequest:
          ReadRequest = other.ReadRequest.Clone();
          break;
        case ClientMessageOneofCase.CreatePartitionStreamResponse:
          CreatePartitionStreamResponse = other.CreatePartitionStreamResponse.Clone();
          break;
        case ClientMessageOneofCase.CommitRequest:
          CommitRequest = other.CommitRequest.Clone();
          break;
        case ClientMessageOneofCase.DestroyPartitionStreamResponse:
          DestroyPartitionStreamResponse = other.DestroyPartitionStreamResponse.Clone();
          break;
        case ClientMessageOneofCase.StopReadRequest:
          StopReadRequest = other.StopReadRequest.Clone();
          break;
        case ClientMessageOneofCase.ResumeReadRequest:
          ResumeReadRequest = other.ResumeReadRequest.Clone();
          break;
        case ClientMessageOneofCase.PartitionStreamStatusRequest:
          PartitionStreamStatusRequest = other.PartitionStreamStatusRequest.Clone();
          break;
        case ClientMessageOneofCase.AddTopicRequest:
          AddTopicRequest = other.AddTopicRequest.Clone();
          break;
        case ClientMessageOneofCase.RemoveTopicRequest:
          RemoveTopicRequest = other.RemoveTopicRequest.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingReadClientMessageNew Clone() {
      return new StreamingReadClientMessageNew(this);
    }

    /// <summary>Field number for the "init_request" field.</summary>
    public const int InitRequestFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest InitRequest {
      get { return clientMessageCase_ == ClientMessageOneofCase.InitRequest ? (global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest) clientMessage_ : null; }
      set {
        clientMessage_ = value;
        clientMessageCase_ = value == null ? ClientMessageOneofCase.None : ClientMessageOneofCase.InitRequest;
      }
    }

    /// <summary>Field number for the "read_request" field.</summary>
    public const int ReadRequestFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.ReadRequest ReadRequest {
      get { return clientMessageCase_ == ClientMessageOneofCase.ReadRequest ? (global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.ReadRequest) clientMessage_ : null; }
      set {
        clientMessage_ = value;
        clientMessageCase_ = value == null ? ClientMessageOneofCase.None : ClientMessageOneofCase.ReadRequest;
      }
    }

    /// <summary>Field number for the "create_partition_stream_response" field.</summary>
    public const int CreatePartitionStreamResponseFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.CreatePartitionStreamResponse CreatePartitionStreamResponse {
      get { return clientMessageCase_ == ClientMessageOneofCase.CreatePartitionStreamResponse ? (global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.CreatePartitionStreamResponse) clientMessage_ : null; }
      set {
        clientMessage_ = value;
        clientMessageCase_ = value == null ? ClientMessageOneofCase.None : ClientMessageOneofCase.CreatePartitionStreamResponse;
      }
    }

    /// <summary>Field number for the "commit_request" field.</summary>
    public const int CommitRequestFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.CommitRequest CommitRequest {
      get { return clientMessageCase_ == ClientMessageOneofCase.CommitRequest ? (global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.CommitRequest) clientMessage_ : null; }
      set {
        clientMessage_ = value;
        clientMessageCase_ = value == null ? ClientMessageOneofCase.None : ClientMessageOneofCase.CommitRequest;
      }
    }

    /// <summary>Field number for the "destroy_partition_stream_response" field.</summary>
    public const int DestroyPartitionStreamResponseFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.DestroyPartitionStreamResponse DestroyPartitionStreamResponse {
      get { return clientMessageCase_ == ClientMessageOneofCase.DestroyPartitionStreamResponse ? (global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.DestroyPartitionStreamResponse) clientMessage_ : null; }
      set {
        clientMessage_ = value;
        clientMessageCase_ = value == null ? ClientMessageOneofCase.None : ClientMessageOneofCase.DestroyPartitionStreamResponse;
      }
    }

    /// <summary>Field number for the "stop_read_request" field.</summary>
    public const int StopReadRequestFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.StopReadRequest StopReadRequest {
      get { return clientMessageCase_ == ClientMessageOneofCase.StopReadRequest ? (global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.StopReadRequest) clientMessage_ : null; }
      set {
        clientMessage_ = value;
        clientMessageCase_ = value == null ? ClientMessageOneofCase.None : ClientMessageOneofCase.StopReadRequest;
      }
    }

    /// <summary>Field number for the "resume_read_request" field.</summary>
    public const int ResumeReadRequestFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.ResumeReadRequest ResumeReadRequest {
      get { return clientMessageCase_ == ClientMessageOneofCase.ResumeReadRequest ? (global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.ResumeReadRequest) clientMessage_ : null; }
      set {
        clientMessage_ = value;
        clientMessageCase_ = value == null ? ClientMessageOneofCase.None : ClientMessageOneofCase.ResumeReadRequest;
      }
    }

    /// <summary>Field number for the "partition_stream_status_request" field.</summary>
    public const int PartitionStreamStatusRequestFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.PartitionStreamStatusRequest PartitionStreamStatusRequest {
      get { return clientMessageCase_ == ClientMessageOneofCase.PartitionStreamStatusRequest ? (global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.PartitionStreamStatusRequest) clientMessage_ : null; }
      set {
        clientMessage_ = value;
        clientMessageCase_ = value == null ? ClientMessageOneofCase.None : ClientMessageOneofCase.PartitionStreamStatusRequest;
      }
    }

    /// <summary>Field number for the "add_topic_request" field.</summary>
    public const int AddTopicRequestFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.AddTopicRequest AddTopicRequest {
      get { return clientMessageCase_ == ClientMessageOneofCase.AddTopicRequest ? (global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.AddTopicRequest) clientMessage_ : null; }
      set {
        clientMessage_ = value;
        clientMessageCase_ = value == null ? ClientMessageOneofCase.None : ClientMessageOneofCase.AddTopicRequest;
      }
    }

    /// <summary>Field number for the "remove_topic_request" field.</summary>
    public const int RemoveTopicRequestFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.RemoveTopicRequest RemoveTopicRequest {
      get { return clientMessageCase_ == ClientMessageOneofCase.RemoveTopicRequest ? (global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.RemoveTopicRequest) clientMessage_ : null; }
      set {
        clientMessage_ = value;
        clientMessageCase_ = value == null ? ClientMessageOneofCase.None : ClientMessageOneofCase.RemoveTopicRequest;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 20;
    private string token_ = "";
    /// <summary>
    /// User credentials if update is needed or empty string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object clientMessage_;
    /// <summary>Enum of possible cases for the "client_message" oneof.</summary>
    public enum ClientMessageOneofCase {
      None = 0,
      InitRequest = 1,
      ReadRequest = 2,
      CreatePartitionStreamResponse = 3,
      CommitRequest = 4,
      DestroyPartitionStreamResponse = 5,
      StopReadRequest = 6,
      ResumeReadRequest = 7,
      PartitionStreamStatusRequest = 8,
      AddTopicRequest = 9,
      RemoveTopicRequest = 10,
    }
    private ClientMessageOneofCase clientMessageCase_ = ClientMessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMessageOneofCase ClientMessageCase {
      get { return clientMessageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClientMessage() {
      clientMessageCase_ = ClientMessageOneofCase.None;
      clientMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamingReadClientMessageNew);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamingReadClientMessageNew other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InitRequest, other.InitRequest)) return false;
      if (!object.Equals(ReadRequest, other.ReadRequest)) return false;
      if (!object.Equals(CreatePartitionStreamResponse, other.CreatePartitionStreamResponse)) return false;
      if (!object.Equals(CommitRequest, other.CommitRequest)) return false;
      if (!object.Equals(DestroyPartitionStreamResponse, other.DestroyPartitionStreamResponse)) return false;
      if (!object.Equals(StopReadRequest, other.StopReadRequest)) return false;
      if (!object.Equals(ResumeReadRequest, other.ResumeReadRequest)) return false;
      if (!object.Equals(PartitionStreamStatusRequest, other.PartitionStreamStatusRequest)) return false;
      if (!object.Equals(AddTopicRequest, other.AddTopicRequest)) return false;
      if (!object.Equals(RemoveTopicRequest, other.RemoveTopicRequest)) return false;
      if (Token != other.Token) return false;
      if (ClientMessageCase != other.ClientMessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (clientMessageCase_ == ClientMessageOneofCase.InitRequest) hash ^= InitRequest.GetHashCode();
      if (clientMessageCase_ == ClientMessageOneofCase.ReadRequest) hash ^= ReadRequest.GetHashCode();
      if (clientMessageCase_ == ClientMessageOneofCase.CreatePartitionStreamResponse) hash ^= CreatePartitionStreamResponse.GetHashCode();
      if (clientMessageCase_ == ClientMessageOneofCase.CommitRequest) hash ^= CommitRequest.GetHashCode();
      if (clientMessageCase_ == ClientMessageOneofCase.DestroyPartitionStreamResponse) hash ^= DestroyPartitionStreamResponse.GetHashCode();
      if (clientMessageCase_ == ClientMessageOneofCase.StopReadRequest) hash ^= StopReadRequest.GetHashCode();
      if (clientMessageCase_ == ClientMessageOneofCase.ResumeReadRequest) hash ^= ResumeReadRequest.GetHashCode();
      if (clientMessageCase_ == ClientMessageOneofCase.PartitionStreamStatusRequest) hash ^= PartitionStreamStatusRequest.GetHashCode();
      if (clientMessageCase_ == ClientMessageOneofCase.AddTopicRequest) hash ^= AddTopicRequest.GetHashCode();
      if (clientMessageCase_ == ClientMessageOneofCase.RemoveTopicRequest) hash ^= RemoveTopicRequest.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      hash ^= (int) clientMessageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (clientMessageCase_ == ClientMessageOneofCase.InitRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(InitRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.ReadRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(ReadRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.CreatePartitionStreamResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatePartitionStreamResponse);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.CommitRequest) {
        output.WriteRawTag(34);
        output.WriteMessage(CommitRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.DestroyPartitionStreamResponse) {
        output.WriteRawTag(42);
        output.WriteMessage(DestroyPartitionStreamResponse);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.StopReadRequest) {
        output.WriteRawTag(50);
        output.WriteMessage(StopReadRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.ResumeReadRequest) {
        output.WriteRawTag(58);
        output.WriteMessage(ResumeReadRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.PartitionStreamStatusRequest) {
        output.WriteRawTag(66);
        output.WriteMessage(PartitionStreamStatusRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.AddTopicRequest) {
        output.WriteRawTag(74);
        output.WriteMessage(AddTopicRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.RemoveTopicRequest) {
        output.WriteRawTag(82);
        output.WriteMessage(RemoveTopicRequest);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (clientMessageCase_ == ClientMessageOneofCase.InitRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(InitRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.ReadRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(ReadRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.CreatePartitionStreamResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatePartitionStreamResponse);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.CommitRequest) {
        output.WriteRawTag(34);
        output.WriteMessage(CommitRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.DestroyPartitionStreamResponse) {
        output.WriteRawTag(42);
        output.WriteMessage(DestroyPartitionStreamResponse);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.StopReadRequest) {
        output.WriteRawTag(50);
        output.WriteMessage(StopReadRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.ResumeReadRequest) {
        output.WriteRawTag(58);
        output.WriteMessage(ResumeReadRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.PartitionStreamStatusRequest) {
        output.WriteRawTag(66);
        output.WriteMessage(PartitionStreamStatusRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.AddTopicRequest) {
        output.WriteRawTag(74);
        output.WriteMessage(AddTopicRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.RemoveTopicRequest) {
        output.WriteRawTag(82);
        output.WriteMessage(RemoveTopicRequest);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (clientMessageCase_ == ClientMessageOneofCase.InitRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InitRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.ReadRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.CreatePartitionStreamResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatePartitionStreamResponse);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.CommitRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommitRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.DestroyPartitionStreamResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DestroyPartitionStreamResponse);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.StopReadRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StopReadRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.ResumeReadRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResumeReadRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.PartitionStreamStatusRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartitionStreamStatusRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.AddTopicRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddTopicRequest);
      }
      if (clientMessageCase_ == ClientMessageOneofCase.RemoveTopicRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemoveTopicRequest);
      }
      if (Token.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamingReadClientMessageNew other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      switch (other.ClientMessageCase) {
        case ClientMessageOneofCase.InitRequest:
          if (InitRequest == null) {
            InitRequest = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest();
          }
          InitRequest.MergeFrom(other.InitRequest);
          break;
        case ClientMessageOneofCase.ReadRequest:
          if (ReadRequest == null) {
            ReadRequest = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.ReadRequest();
          }
          ReadRequest.MergeFrom(other.ReadRequest);
          break;
        case ClientMessageOneofCase.CreatePartitionStreamResponse:
          if (CreatePartitionStreamResponse == null) {
            CreatePartitionStreamResponse = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.CreatePartitionStreamResponse();
          }
          CreatePartitionStreamResponse.MergeFrom(other.CreatePartitionStreamResponse);
          break;
        case ClientMessageOneofCase.CommitRequest:
          if (CommitRequest == null) {
            CommitRequest = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.CommitRequest();
          }
          CommitRequest.MergeFrom(other.CommitRequest);
          break;
        case ClientMessageOneofCase.DestroyPartitionStreamResponse:
          if (DestroyPartitionStreamResponse == null) {
            DestroyPartitionStreamResponse = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.DestroyPartitionStreamResponse();
          }
          DestroyPartitionStreamResponse.MergeFrom(other.DestroyPartitionStreamResponse);
          break;
        case ClientMessageOneofCase.StopReadRequest:
          if (StopReadRequest == null) {
            StopReadRequest = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.StopReadRequest();
          }
          StopReadRequest.MergeFrom(other.StopReadRequest);
          break;
        case ClientMessageOneofCase.ResumeReadRequest:
          if (ResumeReadRequest == null) {
            ResumeReadRequest = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.ResumeReadRequest();
          }
          ResumeReadRequest.MergeFrom(other.ResumeReadRequest);
          break;
        case ClientMessageOneofCase.PartitionStreamStatusRequest:
          if (PartitionStreamStatusRequest == null) {
            PartitionStreamStatusRequest = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.PartitionStreamStatusRequest();
          }
          PartitionStreamStatusRequest.MergeFrom(other.PartitionStreamStatusRequest);
          break;
        case ClientMessageOneofCase.AddTopicRequest:
          if (AddTopicRequest == null) {
            AddTopicRequest = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.AddTopicRequest();
          }
          AddTopicRequest.MergeFrom(other.AddTopicRequest);
          break;
        case ClientMessageOneofCase.RemoveTopicRequest:
          if (RemoveTopicRequest == null) {
            RemoveTopicRequest = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.RemoveTopicRequest();
          }
          RemoveTopicRequest.MergeFrom(other.RemoveTopicRequest);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.InitRequest) {
              subBuilder.MergeFrom(InitRequest);
            }
            input.ReadMessage(subBuilder);
            InitRequest = subBuilder;
            break;
          }
          case 18: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.ReadRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.ReadRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.ReadRequest) {
              subBuilder.MergeFrom(ReadRequest);
            }
            input.ReadMessage(subBuilder);
            ReadRequest = subBuilder;
            break;
          }
          case 26: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.CreatePartitionStreamResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.CreatePartitionStreamResponse();
            if (clientMessageCase_ == ClientMessageOneofCase.CreatePartitionStreamResponse) {
              subBuilder.MergeFrom(CreatePartitionStreamResponse);
            }
            input.ReadMessage(subBuilder);
            CreatePartitionStreamResponse = subBuilder;
            break;
          }
          case 34: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.CommitRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.CommitRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.CommitRequest) {
              subBuilder.MergeFrom(CommitRequest);
            }
            input.ReadMessage(subBuilder);
            CommitRequest = subBuilder;
            break;
          }
          case 42: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.DestroyPartitionStreamResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.DestroyPartitionStreamResponse();
            if (clientMessageCase_ == ClientMessageOneofCase.DestroyPartitionStreamResponse) {
              subBuilder.MergeFrom(DestroyPartitionStreamResponse);
            }
            input.ReadMessage(subBuilder);
            DestroyPartitionStreamResponse = subBuilder;
            break;
          }
          case 50: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.StopReadRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.StopReadRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.StopReadRequest) {
              subBuilder.MergeFrom(StopReadRequest);
            }
            input.ReadMessage(subBuilder);
            StopReadRequest = subBuilder;
            break;
          }
          case 58: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.ResumeReadRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.ResumeReadRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.ResumeReadRequest) {
              subBuilder.MergeFrom(ResumeReadRequest);
            }
            input.ReadMessage(subBuilder);
            ResumeReadRequest = subBuilder;
            break;
          }
          case 66: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.PartitionStreamStatusRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.PartitionStreamStatusRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.PartitionStreamStatusRequest) {
              subBuilder.MergeFrom(PartitionStreamStatusRequest);
            }
            input.ReadMessage(subBuilder);
            PartitionStreamStatusRequest = subBuilder;
            break;
          }
          case 74: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.AddTopicRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.AddTopicRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.AddTopicRequest) {
              subBuilder.MergeFrom(AddTopicRequest);
            }
            input.ReadMessage(subBuilder);
            AddTopicRequest = subBuilder;
            break;
          }
          case 82: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.RemoveTopicRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.RemoveTopicRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.RemoveTopicRequest) {
              subBuilder.MergeFrom(RemoveTopicRequest);
            }
            input.ReadMessage(subBuilder);
            RemoveTopicRequest = subBuilder;
            break;
          }
          case 162: {
            Token = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.InitRequest) {
              subBuilder.MergeFrom(InitRequest);
            }
            input.ReadMessage(subBuilder);
            InitRequest = subBuilder;
            break;
          }
          case 18: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.ReadRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.ReadRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.ReadRequest) {
              subBuilder.MergeFrom(ReadRequest);
            }
            input.ReadMessage(subBuilder);
            ReadRequest = subBuilder;
            break;
          }
          case 26: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.CreatePartitionStreamResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.CreatePartitionStreamResponse();
            if (clientMessageCase_ == ClientMessageOneofCase.CreatePartitionStreamResponse) {
              subBuilder.MergeFrom(CreatePartitionStreamResponse);
            }
            input.ReadMessage(subBuilder);
            CreatePartitionStreamResponse = subBuilder;
            break;
          }
          case 34: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.CommitRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.CommitRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.CommitRequest) {
              subBuilder.MergeFrom(CommitRequest);
            }
            input.ReadMessage(subBuilder);
            CommitRequest = subBuilder;
            break;
          }
          case 42: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.DestroyPartitionStreamResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.DestroyPartitionStreamResponse();
            if (clientMessageCase_ == ClientMessageOneofCase.DestroyPartitionStreamResponse) {
              subBuilder.MergeFrom(DestroyPartitionStreamResponse);
            }
            input.ReadMessage(subBuilder);
            DestroyPartitionStreamResponse = subBuilder;
            break;
          }
          case 50: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.StopReadRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.StopReadRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.StopReadRequest) {
              subBuilder.MergeFrom(StopReadRequest);
            }
            input.ReadMessage(subBuilder);
            StopReadRequest = subBuilder;
            break;
          }
          case 58: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.ResumeReadRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.ResumeReadRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.ResumeReadRequest) {
              subBuilder.MergeFrom(ResumeReadRequest);
            }
            input.ReadMessage(subBuilder);
            ResumeReadRequest = subBuilder;
            break;
          }
          case 66: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.PartitionStreamStatusRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.PartitionStreamStatusRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.PartitionStreamStatusRequest) {
              subBuilder.MergeFrom(PartitionStreamStatusRequest);
            }
            input.ReadMessage(subBuilder);
            PartitionStreamStatusRequest = subBuilder;
            break;
          }
          case 74: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.AddTopicRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.AddTopicRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.AddTopicRequest) {
              subBuilder.MergeFrom(AddTopicRequest);
            }
            input.ReadMessage(subBuilder);
            AddTopicRequest = subBuilder;
            break;
          }
          case 82: {
            global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.RemoveTopicRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.RemoveTopicRequest();
            if (clientMessageCase_ == ClientMessageOneofCase.RemoveTopicRequest) {
              subBuilder.MergeFrom(RemoveTopicRequest);
            }
            input.ReadMessage(subBuilder);
            RemoveTopicRequest = subBuilder;
            break;
          }
          case 162: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the StreamingReadClientMessageNew message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Handshake request.
      /// </summary>
      public sealed partial class InitRequest : pb::IMessage<InitRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InitRequest> _parser = new pb::MessageParser<InitRequest>(() => new InitRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InitRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitRequest(InitRequest other) : this() {
          topicsReadSettings_ = other.topicsReadSettings_.Clone();
          readOnlyOriginal_ = other.readOnlyOriginal_;
          consumer_ = other.consumer_;
          maxLagDurationMs_ = other.maxLagDurationMs_;
          startFromWrittenAtMs_ = other.startFromWrittenAtMs_;
          maxSupportedBlockFormatVersion_ = other.maxSupportedBlockFormatVersion_;
          maxMetaCacheSize_ = other.maxMetaCacheSize_;
          sessionId_ = other.sessionId_;
          connectionAttempt_ = other.connectionAttempt_;
          state_ = other.state_ != null ? other.state_.Clone() : null;
          idleTimeoutMs_ = other.idleTimeoutMs_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitRequest Clone() {
          return new InitRequest(this);
        }

        /// <summary>Field number for the "topics_read_settings" field.</summary>
        public const int TopicsReadSettingsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.TopicReadSettings> _repeated_topicsReadSettings_codec
            = pb::FieldCodec.ForMessage(10, global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.TopicReadSettings.Parser);
        private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.TopicReadSettings> topicsReadSettings_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.TopicReadSettings>();
        /// <summary>
        /// Message that describes topic to read.
        /// Topics that will be read by this session.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.TopicReadSettings> TopicsReadSettings {
          get { return topicsReadSettings_; }
        }

        /// <summary>Field number for the "read_only_original" field.</summary>
        public const int ReadOnlyOriginalFieldNumber = 2;
        private bool readOnlyOriginal_;
        /// <summary>
        /// Flag that indicates reading only of original topics in cluster or all including mirrored.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ReadOnlyOriginal {
          get { return readOnlyOriginal_; }
          set {
            readOnlyOriginal_ = value;
          }
        }

        /// <summary>Field number for the "consumer" field.</summary>
        public const int ConsumerFieldNumber = 3;
        private string consumer_ = "";
        /// <summary>
        /// Path of consumer that is used for reading by this session.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Consumer {
          get { return consumer_; }
          set {
            consumer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "max_lag_duration_ms" field.</summary>
        public const int MaxLagDurationMsFieldNumber = 4;
        private long maxLagDurationMs_;
        /// <summary>
        /// Skip all messages that has write timestamp smaller than now - max_time_lag_ms.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MaxLagDurationMs {
          get { return maxLagDurationMs_; }
          set {
            maxLagDurationMs_ = value;
          }
        }

        /// <summary>Field number for the "start_from_written_at_ms" field.</summary>
        public const int StartFromWrittenAtMsFieldNumber = 5;
        private long startFromWrittenAtMs_;
        /// <summary>
        /// Read data only after this timestamp from all topics.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long StartFromWrittenAtMs {
          get { return startFromWrittenAtMs_; }
          set {
            startFromWrittenAtMs_ = value;
          }
        }

        /// <summary>Field number for the "max_supported_block_format_version" field.</summary>
        public const int MaxSupportedBlockFormatVersionFieldNumber = 6;
        private long maxSupportedBlockFormatVersion_;
        /// <summary>
        /// Maximum block format version supported by the client. Server will asses this parameter and return actual data blocks version in
        /// StreamingReadServerMessage.InitResponse.block_format_version_by_topic (and StreamingReadServerMessage.AddTopicResponse.block_format_version)
        /// or error if client will not be able to read data.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MaxSupportedBlockFormatVersion {
          get { return maxSupportedBlockFormatVersion_; }
          set {
            maxSupportedBlockFormatVersion_ = value;
          }
        }

        /// <summary>Field number for the "max_meta_cache_size" field.</summary>
        public const int MaxMetaCacheSizeFieldNumber = 10;
        private long maxMetaCacheSize_;
        /// <summary>
        /// Maximal size of client cache for message_group_id, ip and meta, per partition.
        /// There is separate caches for each partition partition streams.
        /// There is separate caches for message group identifiers, ip and meta inside one partition partition stream.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MaxMetaCacheSize {
          get { return maxMetaCacheSize_; }
          set {
            maxMetaCacheSize_ = value;
          }
        }

        /// <summary>Field number for the "session_id" field.</summary>
        public const int SessionIdFieldNumber = 100;
        private string sessionId_ = "";
        /// <summary>
        /// Session identifier for retries. Must be the same as session_id from Inited server response. If this is first connect, not retry - do not use this field.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SessionId {
          get { return sessionId_; }
          set {
            sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "connection_attempt" field.</summary>
        public const int ConnectionAttemptFieldNumber = 101;
        private long connectionAttempt_;
        /// <summary>
        /// 0 for first init message and incremental value for connect retries.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ConnectionAttempt {
          get { return connectionAttempt_; }
          set {
            connectionAttempt_ = value;
          }
        }

        /// <summary>Field number for the "state" field.</summary>
        public const int StateFieldNumber = 102;
        private global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State state_;
        /// <summary>
        /// Formed state for retries. If not retry - do not use this field.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State State {
          get { return state_; }
          set {
            state_ = value;
          }
        }

        /// <summary>Field number for the "idle_timeout_ms" field.</summary>
        public const int IdleTimeoutMsFieldNumber = 200;
        private long idleTimeoutMs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long IdleTimeoutMs {
          get { return idleTimeoutMs_; }
          set {
            idleTimeoutMs_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InitRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InitRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!topicsReadSettings_.Equals(other.topicsReadSettings_)) return false;
          if (ReadOnlyOriginal != other.ReadOnlyOriginal) return false;
          if (Consumer != other.Consumer) return false;
          if (MaxLagDurationMs != other.MaxLagDurationMs) return false;
          if (StartFromWrittenAtMs != other.StartFromWrittenAtMs) return false;
          if (MaxSupportedBlockFormatVersion != other.MaxSupportedBlockFormatVersion) return false;
          if (MaxMetaCacheSize != other.MaxMetaCacheSize) return false;
          if (SessionId != other.SessionId) return false;
          if (ConnectionAttempt != other.ConnectionAttempt) return false;
          if (!object.Equals(State, other.State)) return false;
          if (IdleTimeoutMs != other.IdleTimeoutMs) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= topicsReadSettings_.GetHashCode();
          if (ReadOnlyOriginal != false) hash ^= ReadOnlyOriginal.GetHashCode();
          if (Consumer.Length != 0) hash ^= Consumer.GetHashCode();
          if (MaxLagDurationMs != 0L) hash ^= MaxLagDurationMs.GetHashCode();
          if (StartFromWrittenAtMs != 0L) hash ^= StartFromWrittenAtMs.GetHashCode();
          if (MaxSupportedBlockFormatVersion != 0L) hash ^= MaxSupportedBlockFormatVersion.GetHashCode();
          if (MaxMetaCacheSize != 0L) hash ^= MaxMetaCacheSize.GetHashCode();
          if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
          if (ConnectionAttempt != 0L) hash ^= ConnectionAttempt.GetHashCode();
          if (state_ != null) hash ^= State.GetHashCode();
          if (IdleTimeoutMs != 0L) hash ^= IdleTimeoutMs.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          topicsReadSettings_.WriteTo(output, _repeated_topicsReadSettings_codec);
          if (ReadOnlyOriginal != false) {
            output.WriteRawTag(16);
            output.WriteBool(ReadOnlyOriginal);
          }
          if (Consumer.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Consumer);
          }
          if (MaxLagDurationMs != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(MaxLagDurationMs);
          }
          if (StartFromWrittenAtMs != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(StartFromWrittenAtMs);
          }
          if (MaxSupportedBlockFormatVersion != 0L) {
            output.WriteRawTag(48);
            output.WriteInt64(MaxSupportedBlockFormatVersion);
          }
          if (MaxMetaCacheSize != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(MaxMetaCacheSize);
          }
          if (SessionId.Length != 0) {
            output.WriteRawTag(162, 6);
            output.WriteString(SessionId);
          }
          if (ConnectionAttempt != 0L) {
            output.WriteRawTag(168, 6);
            output.WriteInt64(ConnectionAttempt);
          }
          if (state_ != null) {
            output.WriteRawTag(178, 6);
            output.WriteMessage(State);
          }
          if (IdleTimeoutMs != 0L) {
            output.WriteRawTag(192, 12);
            output.WriteInt64(IdleTimeoutMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          topicsReadSettings_.WriteTo(ref output, _repeated_topicsReadSettings_codec);
          if (ReadOnlyOriginal != false) {
            output.WriteRawTag(16);
            output.WriteBool(ReadOnlyOriginal);
          }
          if (Consumer.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Consumer);
          }
          if (MaxLagDurationMs != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(MaxLagDurationMs);
          }
          if (StartFromWrittenAtMs != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(StartFromWrittenAtMs);
          }
          if (MaxSupportedBlockFormatVersion != 0L) {
            output.WriteRawTag(48);
            output.WriteInt64(MaxSupportedBlockFormatVersion);
          }
          if (MaxMetaCacheSize != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(MaxMetaCacheSize);
          }
          if (SessionId.Length != 0) {
            output.WriteRawTag(162, 6);
            output.WriteString(SessionId);
          }
          if (ConnectionAttempt != 0L) {
            output.WriteRawTag(168, 6);
            output.WriteInt64(ConnectionAttempt);
          }
          if (state_ != null) {
            output.WriteRawTag(178, 6);
            output.WriteMessage(State);
          }
          if (IdleTimeoutMs != 0L) {
            output.WriteRawTag(192, 12);
            output.WriteInt64(IdleTimeoutMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += topicsReadSettings_.CalculateSize(_repeated_topicsReadSettings_codec);
          if (ReadOnlyOriginal != false) {
            size += 1 + 1;
          }
          if (Consumer.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Consumer);
          }
          if (MaxLagDurationMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxLagDurationMs);
          }
          if (StartFromWrittenAtMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartFromWrittenAtMs);
          }
          if (MaxSupportedBlockFormatVersion != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxSupportedBlockFormatVersion);
          }
          if (MaxMetaCacheSize != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxMetaCacheSize);
          }
          if (SessionId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(SessionId);
          }
          if (ConnectionAttempt != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(ConnectionAttempt);
          }
          if (state_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(State);
          }
          if (IdleTimeoutMs != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(IdleTimeoutMs);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InitRequest other) {
          if (other == null) {
            return;
          }
          topicsReadSettings_.Add(other.topicsReadSettings_);
          if (other.ReadOnlyOriginal != false) {
            ReadOnlyOriginal = other.ReadOnlyOriginal;
          }
          if (other.Consumer.Length != 0) {
            Consumer = other.Consumer;
          }
          if (other.MaxLagDurationMs != 0L) {
            MaxLagDurationMs = other.MaxLagDurationMs;
          }
          if (other.StartFromWrittenAtMs != 0L) {
            StartFromWrittenAtMs = other.StartFromWrittenAtMs;
          }
          if (other.MaxSupportedBlockFormatVersion != 0L) {
            MaxSupportedBlockFormatVersion = other.MaxSupportedBlockFormatVersion;
          }
          if (other.MaxMetaCacheSize != 0L) {
            MaxMetaCacheSize = other.MaxMetaCacheSize;
          }
          if (other.SessionId.Length != 0) {
            SessionId = other.SessionId;
          }
          if (other.ConnectionAttempt != 0L) {
            ConnectionAttempt = other.ConnectionAttempt;
          }
          if (other.state_ != null) {
            if (state_ == null) {
              State = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State();
            }
            State.MergeFrom(other.State);
          }
          if (other.IdleTimeoutMs != 0L) {
            IdleTimeoutMs = other.IdleTimeoutMs;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                topicsReadSettings_.AddEntriesFrom(input, _repeated_topicsReadSettings_codec);
                break;
              }
              case 16: {
                ReadOnlyOriginal = input.ReadBool();
                break;
              }
              case 26: {
                Consumer = input.ReadString();
                break;
              }
              case 32: {
                MaxLagDurationMs = input.ReadInt64();
                break;
              }
              case 40: {
                StartFromWrittenAtMs = input.ReadInt64();
                break;
              }
              case 48: {
                MaxSupportedBlockFormatVersion = input.ReadInt64();
                break;
              }
              case 80: {
                MaxMetaCacheSize = input.ReadInt64();
                break;
              }
              case 802: {
                SessionId = input.ReadString();
                break;
              }
              case 808: {
                ConnectionAttempt = input.ReadInt64();
                break;
              }
              case 818: {
                if (state_ == null) {
                  State = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State();
                }
                input.ReadMessage(State);
                break;
              }
              case 1600: {
                IdleTimeoutMs = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                topicsReadSettings_.AddEntriesFrom(ref input, _repeated_topicsReadSettings_codec);
                break;
              }
              case 16: {
                ReadOnlyOriginal = input.ReadBool();
                break;
              }
              case 26: {
                Consumer = input.ReadString();
                break;
              }
              case 32: {
                MaxLagDurationMs = input.ReadInt64();
                break;
              }
              case 40: {
                StartFromWrittenAtMs = input.ReadInt64();
                break;
              }
              case 48: {
                MaxSupportedBlockFormatVersion = input.ReadInt64();
                break;
              }
              case 80: {
                MaxMetaCacheSize = input.ReadInt64();
                break;
              }
              case 802: {
                SessionId = input.ReadString();
                break;
              }
              case 808: {
                ConnectionAttempt = input.ReadInt64();
                break;
              }
              case 818: {
                if (state_ == null) {
                  State = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State();
                }
                input.ReadMessage(State);
                break;
              }
              case 1600: {
                IdleTimeoutMs = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the InitRequest message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// State of client read session. Could be provided to server for retries.
          /// </summary>
          public sealed partial class State : pb::IMessage<State>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<State> _parser = new pb::MessageParser<State>(() => new State());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<State> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public State() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public State(State other) : this() {
              partitionStreamsStates_ = other.partitionStreamsStates_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public State Clone() {
              return new State(this);
            }

            /// <summary>Field number for the "partition_streams_states" field.</summary>
            public const int PartitionStreamsStatesFieldNumber = 1;
            private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Types.PartitionStreamState> _repeated_partitionStreamsStates_codec
                = pb::FieldCodec.ForMessage(10, global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Types.PartitionStreamState.Parser);
            private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Types.PartitionStreamState> partitionStreamsStates_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Types.PartitionStreamState>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Types.PartitionStreamState> PartitionStreamsStates {
              get { return partitionStreamsStates_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as State);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(State other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!partitionStreamsStates_.Equals(other.partitionStreamsStates_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= partitionStreamsStates_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              partitionStreamsStates_.WriteTo(output, _repeated_partitionStreamsStates_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              partitionStreamsStates_.WriteTo(ref output, _repeated_partitionStreamsStates_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += partitionStreamsStates_.CalculateSize(_repeated_partitionStreamsStates_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(State other) {
              if (other == null) {
                return;
              }
              partitionStreamsStates_.Add(other.partitionStreamsStates_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    partitionStreamsStates_.AddEntriesFrom(input, _repeated_partitionStreamsStates_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    partitionStreamsStates_.AddEntriesFrom(ref input, _repeated_partitionStreamsStates_codec);
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the State message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public sealed partial class PartitionStreamState : pb::IMessage<PartitionStreamState>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<PartitionStreamState> _parser = new pb::MessageParser<PartitionStreamState>(() => new PartitionStreamState());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<PartitionStreamState> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public PartitionStreamState() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public PartitionStreamState(PartitionStreamState other) : this() {
                  partitionStream_ = other.partitionStream_ != null ? other.partitionStream_.Clone() : null;
                  readOffset_ = other.readOffset_;
                  offsetRanges_ = other.offsetRanges_.Clone();
                  status_ = other.status_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public PartitionStreamState Clone() {
                  return new PartitionStreamState(this);
                }

                /// <summary>Field number for the "partition_stream" field.</summary>
                public const int PartitionStreamFieldNumber = 1;
                private global::Ydb.PersQueue.V1.PartitionStream partitionStream_;
                /// <summary>
                /// Partition partition stream.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::Ydb.PersQueue.V1.PartitionStream PartitionStream {
                  get { return partitionStream_; }
                  set {
                    partitionStream_ = value;
                  }
                }

                /// <summary>Field number for the "read_offset" field.</summary>
                public const int ReadOffsetFieldNumber = 2;
                private long readOffset_;
                /// <summary>
                /// Current read offset if has one. Actual for states DESTROYING, READING and STOPPED.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public long ReadOffset {
                  get { return readOffset_; }
                  set {
                    readOffset_ = value;
                  }
                }

                /// <summary>Field number for the "offset_ranges" field.</summary>
                public const int OffsetRangesFieldNumber = 3;
                private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.OffsetsRange> _repeated_offsetRanges_codec
                    = pb::FieldCodec.ForMessage(26, global::Ydb.PersQueue.V1.OffsetsRange.Parser);
                private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.OffsetsRange> offsetRanges_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.OffsetsRange>();
                /// <summary>
                /// Ranges of committed by client offsets.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<global::Ydb.PersQueue.V1.OffsetsRange> OffsetRanges {
                  get { return offsetRanges_; }
                }

                /// <summary>Field number for the "status" field.</summary>
                public const int StatusFieldNumber = 4;
                private global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status status_ = global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status.Unspecified;
                /// <summary>
                /// Status of partition stream.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status Status {
                  get { return status_; }
                  set {
                    status_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as PartitionStreamState);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(PartitionStreamState other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(PartitionStream, other.PartitionStream)) return false;
                  if (ReadOffset != other.ReadOffset) return false;
                  if(!offsetRanges_.Equals(other.offsetRanges_)) return false;
                  if (Status != other.Status) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (partitionStream_ != null) hash ^= PartitionStream.GetHashCode();
                  if (ReadOffset != 0L) hash ^= ReadOffset.GetHashCode();
                  hash ^= offsetRanges_.GetHashCode();
                  if (Status != global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status.Unspecified) hash ^= Status.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (partitionStream_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(PartitionStream);
                  }
                  if (ReadOffset != 0L) {
                    output.WriteRawTag(16);
                    output.WriteInt64(ReadOffset);
                  }
                  offsetRanges_.WriteTo(output, _repeated_offsetRanges_codec);
                  if (Status != global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status.Unspecified) {
                    output.WriteRawTag(32);
                    output.WriteEnum((int) Status);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (partitionStream_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(PartitionStream);
                  }
                  if (ReadOffset != 0L) {
                    output.WriteRawTag(16);
                    output.WriteInt64(ReadOffset);
                  }
                  offsetRanges_.WriteTo(ref output, _repeated_offsetRanges_codec);
                  if (Status != global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status.Unspecified) {
                    output.WriteRawTag(32);
                    output.WriteEnum((int) Status);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (partitionStream_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartitionStream);
                  }
                  if (ReadOffset != 0L) {
                    size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReadOffset);
                  }
                  size += offsetRanges_.CalculateSize(_repeated_offsetRanges_codec);
                  if (Status != global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status.Unspecified) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(PartitionStreamState other) {
                  if (other == null) {
                    return;
                  }
                  if (other.partitionStream_ != null) {
                    if (partitionStream_ == null) {
                      PartitionStream = new global::Ydb.PersQueue.V1.PartitionStream();
                    }
                    PartitionStream.MergeFrom(other.PartitionStream);
                  }
                  if (other.ReadOffset != 0L) {
                    ReadOffset = other.ReadOffset;
                  }
                  offsetRanges_.Add(other.offsetRanges_);
                  if (other.Status != global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status.Unspecified) {
                    Status = other.Status;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (partitionStream_ == null) {
                          PartitionStream = new global::Ydb.PersQueue.V1.PartitionStream();
                        }
                        input.ReadMessage(PartitionStream);
                        break;
                      }
                      case 16: {
                        ReadOffset = input.ReadInt64();
                        break;
                      }
                      case 26: {
                        offsetRanges_.AddEntriesFrom(input, _repeated_offsetRanges_codec);
                        break;
                      }
                      case 32: {
                        Status = (global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status) input.ReadEnum();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        if (partitionStream_ == null) {
                          PartitionStream = new global::Ydb.PersQueue.V1.PartitionStream();
                        }
                        input.ReadMessage(PartitionStream);
                        break;
                      }
                      case 16: {
                        ReadOffset = input.ReadInt64();
                        break;
                      }
                      case 26: {
                        offsetRanges_.AddEntriesFrom(ref input, _repeated_offsetRanges_codec);
                        break;
                      }
                      case 32: {
                        Status = (global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status) input.ReadEnum();
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the PartitionStreamState message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static partial class Types {
                  public enum Status {
                    /// <summary>
                    /// Not used state.
                    /// </summary>
                    [pbr::OriginalName("STATUS_UNSPECIFIED")] Unspecified = 0,
                    /// <summary>
                    /// Client seen Create message but not yet responded to server with Created message.
                    /// </summary>
                    [pbr::OriginalName("CREATING")] Creating = 1,
                    /// <summary>
                    /// Client seen Destroy message but not yet responded with Released message.
                    /// </summary>
                    [pbr::OriginalName("DESTROYING")] Destroying = 2,
                    /// <summary>
                    /// Client sent Created or ResumeReadRequest message to server for this partition stream.
                    /// </summary>
                    [pbr::OriginalName("READING")] Reading = 3,
                    /// <summary>
                    /// Client sent StopReadRequest for this partition stream.
                    /// </summary>
                    [pbr::OriginalName("STOPPED")] Stopped = 4,
                  }

                }
                #endregion

              }

            }
            #endregion

          }

        }
        #endregion

      }

      /// <summary>
      /// Message that represents client readiness for receiving more data.
      /// </summary>
      public sealed partial class ReadRequest : pb::IMessage<ReadRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ReadRequest> _parser = new pb::MessageParser<ReadRequest>(() => new ReadRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ReadRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReadRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReadRequest(ReadRequest other) : this() {
          requestUncompressedSize_ = other.requestUncompressedSize_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReadRequest Clone() {
          return new ReadRequest(this);
        }

        /// <summary>Field number for the "request_uncompressed_size" field.</summary>
        public const int RequestUncompressedSizeFieldNumber = 1;
        private long requestUncompressedSize_;
        /// <summary>
        /// Client acquired this amount of free bytes more for buffer. Server can send more data at most of this uncompressed size.
        /// Subsequent messages with 5 and 10 request_uncompressed_size are treated by server that it can send messages for at most 15 bytes.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long RequestUncompressedSize {
          get { return requestUncompressedSize_; }
          set {
            requestUncompressedSize_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ReadRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ReadRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RequestUncompressedSize != other.RequestUncompressedSize) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (RequestUncompressedSize != 0L) hash ^= RequestUncompressedSize.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (RequestUncompressedSize != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(RequestUncompressedSize);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (RequestUncompressedSize != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(RequestUncompressedSize);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (RequestUncompressedSize != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(RequestUncompressedSize);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ReadRequest other) {
          if (other == null) {
            return;
          }
          if (other.RequestUncompressedSize != 0L) {
            RequestUncompressedSize = other.RequestUncompressedSize;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                RequestUncompressedSize = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                RequestUncompressedSize = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Signal for server that cient is ready to recive data for partition.
      /// </summary>
      public sealed partial class CreatePartitionStreamResponse : pb::IMessage<CreatePartitionStreamResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CreatePartitionStreamResponse> _parser = new pb::MessageParser<CreatePartitionStreamResponse>(() => new CreatePartitionStreamResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CreatePartitionStreamResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatePartitionStreamResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatePartitionStreamResponse(CreatePartitionStreamResponse other) : this() {
          partitionStreamId_ = other.partitionStreamId_;
          readOffset_ = other.readOffset_;
          commitOffset_ = other.commitOffset_;
          verifyReadOffset_ = other.verifyReadOffset_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatePartitionStreamResponse Clone() {
          return new CreatePartitionStreamResponse(this);
        }

        /// <summary>Field number for the "partition_stream_id" field.</summary>
        public const int PartitionStreamIdFieldNumber = 1;
        private long partitionStreamId_;
        /// <summary>
        /// Partition stream identifier of partition to start read.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long PartitionStreamId {
          get { return partitionStreamId_; }
          set {
            partitionStreamId_ = value;
          }
        }

        /// <summary>Field number for the "read_offset" field.</summary>
        public const int ReadOffsetFieldNumber = 2;
        private long readOffset_;
        /// <summary>
        /// Start reading from partition offset that is not less than read_offset.
        /// Init.max_time_lag_ms and Init.read_timestamp_ms could lead to skip of more messages.
        /// The same with actual committed offset. Regardless of set read_offset server will return data from maximal offset from read_offset, actual committed offset
        /// and offsets calculated from Init.max_time_lag_ms and Init.read_timestamp_ms.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ReadOffset {
          get { return readOffset_; }
          set {
            readOffset_ = value;
          }
        }

        /// <summary>Field number for the "commit_offset" field.</summary>
        public const int CommitOffsetFieldNumber = 3;
        private long commitOffset_;
        /// <summary>
        /// All messages with offset less than commit_offset are processed by client. Server will commit this position if this is not done yet.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long CommitOffset {
          get { return commitOffset_; }
          set {
            commitOffset_ = value;
          }
        }

        /// <summary>Field number for the "verify_read_offset" field.</summary>
        public const int VerifyReadOffsetFieldNumber = 4;
        private bool verifyReadOffset_;
        /// <summary>
        /// This option will enable sanity check on server for read_offset. Server will verify that read_offset is no less that actual committed offset.
        /// If verification will fail then server will kill this read session and client will find out error in reading logic.
        /// If client is not setting read_offset, sanity check will fail so do not set verify_read_offset if you not setting correct read_offset.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool VerifyReadOffset {
          get { return verifyReadOffset_; }
          set {
            verifyReadOffset_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CreatePartitionStreamResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CreatePartitionStreamResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PartitionStreamId != other.PartitionStreamId) return false;
          if (ReadOffset != other.ReadOffset) return false;
          if (CommitOffset != other.CommitOffset) return false;
          if (VerifyReadOffset != other.VerifyReadOffset) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PartitionStreamId != 0L) hash ^= PartitionStreamId.GetHashCode();
          if (ReadOffset != 0L) hash ^= ReadOffset.GetHashCode();
          if (CommitOffset != 0L) hash ^= CommitOffset.GetHashCode();
          if (VerifyReadOffset != false) hash ^= VerifyReadOffset.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (PartitionStreamId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(PartitionStreamId);
          }
          if (ReadOffset != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ReadOffset);
          }
          if (CommitOffset != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(CommitOffset);
          }
          if (VerifyReadOffset != false) {
            output.WriteRawTag(32);
            output.WriteBool(VerifyReadOffset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (PartitionStreamId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(PartitionStreamId);
          }
          if (ReadOffset != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ReadOffset);
          }
          if (CommitOffset != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(CommitOffset);
          }
          if (VerifyReadOffset != false) {
            output.WriteRawTag(32);
            output.WriteBool(VerifyReadOffset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PartitionStreamId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(PartitionStreamId);
          }
          if (ReadOffset != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReadOffset);
          }
          if (CommitOffset != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommitOffset);
          }
          if (VerifyReadOffset != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CreatePartitionStreamResponse other) {
          if (other == null) {
            return;
          }
          if (other.PartitionStreamId != 0L) {
            PartitionStreamId = other.PartitionStreamId;
          }
          if (other.ReadOffset != 0L) {
            ReadOffset = other.ReadOffset;
          }
          if (other.CommitOffset != 0L) {
            CommitOffset = other.CommitOffset;
          }
          if (other.VerifyReadOffset != false) {
            VerifyReadOffset = other.VerifyReadOffset;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PartitionStreamId = input.ReadInt64();
                break;
              }
              case 16: {
                ReadOffset = input.ReadInt64();
                break;
              }
              case 24: {
                CommitOffset = input.ReadInt64();
                break;
              }
              case 32: {
                VerifyReadOffset = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                PartitionStreamId = input.ReadInt64();
                break;
              }
              case 16: {
                ReadOffset = input.ReadInt64();
                break;
              }
              case 24: {
                CommitOffset = input.ReadInt64();
                break;
              }
              case 32: {
                VerifyReadOffset = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Signal for server that client finished working with this partition. Must be sent only after corresponding Release request from server.
      /// Server will give this partition to other read session only after Released signal.
      /// </summary>
      public sealed partial class DestroyPartitionStreamResponse : pb::IMessage<DestroyPartitionStreamResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DestroyPartitionStreamResponse> _parser = new pb::MessageParser<DestroyPartitionStreamResponse>(() => new DestroyPartitionStreamResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DestroyPartitionStreamResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DestroyPartitionStreamResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DestroyPartitionStreamResponse(DestroyPartitionStreamResponse other) : this() {
          partitionStreamId_ = other.partitionStreamId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DestroyPartitionStreamResponse Clone() {
          return new DestroyPartitionStreamResponse(this);
        }

        /// <summary>Field number for the "partition_stream_id" field.</summary>
        public const int PartitionStreamIdFieldNumber = 1;
        private long partitionStreamId_;
        /// <summary>
        /// Partition stream identifier of partition partition stream that is released by client.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long PartitionStreamId {
          get { return partitionStreamId_; }
          set {
            partitionStreamId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DestroyPartitionStreamResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DestroyPartitionStreamResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PartitionStreamId != other.PartitionStreamId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PartitionStreamId != 0L) hash ^= PartitionStreamId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (PartitionStreamId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(PartitionStreamId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (PartitionStreamId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(PartitionStreamId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PartitionStreamId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(PartitionStreamId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DestroyPartitionStreamResponse other) {
          if (other == null) {
            return;
          }
          if (other.PartitionStreamId != 0L) {
            PartitionStreamId = other.PartitionStreamId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PartitionStreamId = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                PartitionStreamId = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Signal for server that client is not ready to recieve more data from this partition.
      /// </summary>
      public sealed partial class StopReadRequest : pb::IMessage<StopReadRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<StopReadRequest> _parser = new pb::MessageParser<StopReadRequest>(() => new StopReadRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StopReadRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StopReadRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StopReadRequest(StopReadRequest other) : this() {
          partitionStreamIds_ = other.partitionStreamIds_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StopReadRequest Clone() {
          return new StopReadRequest(this);
        }

        /// <summary>Field number for the "partition_stream_ids" field.</summary>
        public const int PartitionStreamIdsFieldNumber = 1;
        private static readonly pb::FieldCodec<long> _repeated_partitionStreamIds_codec
            = pb::FieldCodec.ForInt64(10);
        private readonly pbc::RepeatedField<long> partitionStreamIds_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> PartitionStreamIds {
          get { return partitionStreamIds_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as StopReadRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StopReadRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!partitionStreamIds_.Equals(other.partitionStreamIds_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= partitionStreamIds_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          partitionStreamIds_.WriteTo(output, _repeated_partitionStreamIds_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          partitionStreamIds_.WriteTo(ref output, _repeated_partitionStreamIds_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += partitionStreamIds_.CalculateSize(_repeated_partitionStreamIds_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StopReadRequest other) {
          if (other == null) {
            return;
          }
          partitionStreamIds_.Add(other.partitionStreamIds_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                partitionStreamIds_.AddEntriesFrom(input, _repeated_partitionStreamIds_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10:
              case 8: {
                partitionStreamIds_.AddEntriesFrom(ref input, _repeated_partitionStreamIds_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Signal for server that client is ready to receive more data from this partition.
      /// </summary>
      public sealed partial class ResumeReadRequest : pb::IMessage<ResumeReadRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ResumeReadRequest> _parser = new pb::MessageParser<ResumeReadRequest>(() => new ResumeReadRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ResumeReadRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResumeReadRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResumeReadRequest(ResumeReadRequest other) : this() {
          partitionStreamIds_ = other.partitionStreamIds_.Clone();
          readOffsets_ = other.readOffsets_.Clone();
          resumeCookies_ = other.resumeCookies_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResumeReadRequest Clone() {
          return new ResumeReadRequest(this);
        }

        /// <summary>Field number for the "partition_stream_ids" field.</summary>
        public const int PartitionStreamIdsFieldNumber = 1;
        private static readonly pb::FieldCodec<long> _repeated_partitionStreamIds_codec
            = pb::FieldCodec.ForInt64(10);
        private readonly pbc::RepeatedField<long> partitionStreamIds_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> PartitionStreamIds {
          get { return partitionStreamIds_; }
        }

        /// <summary>Field number for the "read_offsets" field.</summary>
        public const int ReadOffsetsFieldNumber = 2;
        private static readonly pb::FieldCodec<long> _repeated_readOffsets_codec
            = pb::FieldCodec.ForInt64(18);
        private readonly pbc::RepeatedField<long> readOffsets_ = new pbc::RepeatedField<long>();
        /// <summary>
        /// Offset to start reading - may be smaller than known one in case of dropping of read-ahead in client lib.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> ReadOffsets {
          get { return readOffsets_; }
        }

        /// <summary>Field number for the "resume_cookies" field.</summary>
        public const int ResumeCookiesFieldNumber = 3;
        private static readonly pb::FieldCodec<long> _repeated_resumeCookies_codec
            = pb::FieldCodec.ForInt64(26);
        private readonly pbc::RepeatedField<long> resumeCookies_ = new pbc::RepeatedField<long>();
        /// <summary>
        /// Cookie for matching data from PartitionStream after resuming. Must be greater than zero.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> ResumeCookies {
          get { return resumeCookies_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ResumeReadRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ResumeReadRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!partitionStreamIds_.Equals(other.partitionStreamIds_)) return false;
          if(!readOffsets_.Equals(other.readOffsets_)) return false;
          if(!resumeCookies_.Equals(other.resumeCookies_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= partitionStreamIds_.GetHashCode();
          hash ^= readOffsets_.GetHashCode();
          hash ^= resumeCookies_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          partitionStreamIds_.WriteTo(output, _repeated_partitionStreamIds_codec);
          readOffsets_.WriteTo(output, _repeated_readOffsets_codec);
          resumeCookies_.WriteTo(output, _repeated_resumeCookies_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          partitionStreamIds_.WriteTo(ref output, _repeated_partitionStreamIds_codec);
          readOffsets_.WriteTo(ref output, _repeated_readOffsets_codec);
          resumeCookies_.WriteTo(ref output, _repeated_resumeCookies_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += partitionStreamIds_.CalculateSize(_repeated_partitionStreamIds_codec);
          size += readOffsets_.CalculateSize(_repeated_readOffsets_codec);
          size += resumeCookies_.CalculateSize(_repeated_resumeCookies_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ResumeReadRequest other) {
          if (other == null) {
            return;
          }
          partitionStreamIds_.Add(other.partitionStreamIds_);
          readOffsets_.Add(other.readOffsets_);
          resumeCookies_.Add(other.resumeCookies_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                partitionStreamIds_.AddEntriesFrom(input, _repeated_partitionStreamIds_codec);
                break;
              }
              case 18:
              case 16: {
                readOffsets_.AddEntriesFrom(input, _repeated_readOffsets_codec);
                break;
              }
              case 26:
              case 24: {
                resumeCookies_.AddEntriesFrom(input, _repeated_resumeCookies_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10:
              case 8: {
                partitionStreamIds_.AddEntriesFrom(ref input, _repeated_partitionStreamIds_codec);
                break;
              }
              case 18:
              case 16: {
                readOffsets_.AddEntriesFrom(ref input, _repeated_readOffsets_codec);
                break;
              }
              case 26:
              case 24: {
                resumeCookies_.AddEntriesFrom(ref input, _repeated_resumeCookies_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Signal for server that client processed some read data.
      /// </summary>
      public sealed partial class CommitRequest : pb::IMessage<CommitRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CommitRequest> _parser = new pb::MessageParser<CommitRequest>(() => new CommitRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CommitRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommitRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommitRequest(CommitRequest other) : this() {
          commits_ = other.commits_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommitRequest Clone() {
          return new CommitRequest(this);
        }

        /// <summary>Field number for the "commits" field.</summary>
        public const int CommitsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.PartitionCommit> _repeated_commits_codec
            = pb::FieldCodec.ForMessage(10, global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.PartitionCommit.Parser);
        private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.PartitionCommit> commits_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.PartitionCommit>();
        /// <summary>
        /// Partition offsets that indicates processed data.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.PartitionCommit> Commits {
          get { return commits_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CommitRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CommitRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!commits_.Equals(other.commits_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= commits_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          commits_.WriteTo(output, _repeated_commits_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          commits_.WriteTo(ref output, _repeated_commits_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += commits_.CalculateSize(_repeated_commits_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CommitRequest other) {
          if (other == null) {
            return;
          }
          commits_.Add(other.commits_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                commits_.AddEntriesFrom(input, _repeated_commits_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                commits_.AddEntriesFrom(ref input, _repeated_commits_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class PartitionStreamStatusRequest : pb::IMessage<PartitionStreamStatusRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PartitionStreamStatusRequest> _parser = new pb::MessageParser<PartitionStreamStatusRequest>(() => new PartitionStreamStatusRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PartitionStreamStatusRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PartitionStreamStatusRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PartitionStreamStatusRequest(PartitionStreamStatusRequest other) : this() {
          partitionStreamId_ = other.partitionStreamId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PartitionStreamStatusRequest Clone() {
          return new PartitionStreamStatusRequest(this);
        }

        /// <summary>Field number for the "partition_stream_id" field.</summary>
        public const int PartitionStreamIdFieldNumber = 1;
        private long partitionStreamId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long PartitionStreamId {
          get { return partitionStreamId_; }
          set {
            partitionStreamId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PartitionStreamStatusRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PartitionStreamStatusRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PartitionStreamId != other.PartitionStreamId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PartitionStreamId != 0L) hash ^= PartitionStreamId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (PartitionStreamId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(PartitionStreamId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (PartitionStreamId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(PartitionStreamId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PartitionStreamId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(PartitionStreamId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PartitionStreamStatusRequest other) {
          if (other == null) {
            return;
          }
          if (other.PartitionStreamId != 0L) {
            PartitionStreamId = other.PartitionStreamId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PartitionStreamId = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                PartitionStreamId = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Add topic to current read session
      /// </summary>
      public sealed partial class AddTopicRequest : pb::IMessage<AddTopicRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AddTopicRequest> _parser = new pb::MessageParser<AddTopicRequest>(() => new AddTopicRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AddTopicRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AddTopicRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AddTopicRequest(AddTopicRequest other) : this() {
          topicReadSettings_ = other.topicReadSettings_ != null ? other.topicReadSettings_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AddTopicRequest Clone() {
          return new AddTopicRequest(this);
        }

        /// <summary>Field number for the "topic_read_settings" field.</summary>
        public const int TopicReadSettingsFieldNumber = 1;
        private global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.TopicReadSettings topicReadSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.TopicReadSettings TopicReadSettings {
          get { return topicReadSettings_; }
          set {
            topicReadSettings_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AddTopicRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AddTopicRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(TopicReadSettings, other.TopicReadSettings)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (topicReadSettings_ != null) hash ^= TopicReadSettings.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (topicReadSettings_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(TopicReadSettings);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (topicReadSettings_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(TopicReadSettings);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (topicReadSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TopicReadSettings);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AddTopicRequest other) {
          if (other == null) {
            return;
          }
          if (other.topicReadSettings_ != null) {
            if (topicReadSettings_ == null) {
              TopicReadSettings = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.TopicReadSettings();
            }
            TopicReadSettings.MergeFrom(other.TopicReadSettings);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (topicReadSettings_ == null) {
                  TopicReadSettings = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.TopicReadSettings();
                }
                input.ReadMessage(TopicReadSettings);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (topicReadSettings_ == null) {
                  TopicReadSettings = new global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Types.TopicReadSettings();
                }
                input.ReadMessage(TopicReadSettings);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Remove topic from current read session
      /// </summary>
      public sealed partial class RemoveTopicRequest : pb::IMessage<RemoveTopicRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RemoveTopicRequest> _parser = new pb::MessageParser<RemoveTopicRequest>(() => new RemoveTopicRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RemoveTopicRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RemoveTopicRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RemoveTopicRequest(RemoveTopicRequest other) : this() {
          topic_ = other.topic_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RemoveTopicRequest Clone() {
          return new RemoveTopicRequest(this);
        }

        /// <summary>Field number for the "topic" field.</summary>
        public const int TopicFieldNumber = 1;
        private string topic_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Topic {
          get { return topic_; }
          set {
            topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RemoveTopicRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RemoveTopicRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Topic != other.Topic) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Topic.Length != 0) hash ^= Topic.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Topic.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Topic);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Topic.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Topic);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Topic.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RemoveTopicRequest other) {
          if (other == null) {
            return;
          }
          if (other.Topic.Length != 0) {
            Topic = other.Topic;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Topic = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Topic = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class TopicReadSettings : pb::IMessage<TopicReadSettings>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TopicReadSettings> _parser = new pb::MessageParser<TopicReadSettings>(() => new TopicReadSettings());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TopicReadSettings> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TopicReadSettings() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TopicReadSettings(TopicReadSettings other) : this() {
          topic_ = other.topic_;
          partitionGroupIds_ = other.partitionGroupIds_.Clone();
          startFromWrittenAtMs_ = other.startFromWrittenAtMs_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TopicReadSettings Clone() {
          return new TopicReadSettings(this);
        }

        /// <summary>Field number for the "topic" field.</summary>
        public const int TopicFieldNumber = 1;
        private string topic_ = "";
        /// <summary>
        /// Topic path.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Topic {
          get { return topic_; }
          set {
            topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "partition_group_ids" field.</summary>
        public const int PartitionGroupIdsFieldNumber = 2;
        private static readonly pb::FieldCodec<long> _repeated_partitionGroupIds_codec
            = pb::FieldCodec.ForInt64(18);
        private readonly pbc::RepeatedField<long> partitionGroupIds_ = new pbc::RepeatedField<long>();
        /// <summary>
        /// Partition groups that will be read by this session.
        /// If list is empty - then session will read all partition groups.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> PartitionGroupIds {
          get { return partitionGroupIds_; }
        }

        /// <summary>Field number for the "start_from_written_at_ms" field.</summary>
        public const int StartFromWrittenAtMsFieldNumber = 3;
        private long startFromWrittenAtMs_;
        /// <summary>
        /// Read data only after this timestamp from this topic.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long StartFromWrittenAtMs {
          get { return startFromWrittenAtMs_; }
          set {
            startFromWrittenAtMs_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TopicReadSettings);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TopicReadSettings other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Topic != other.Topic) return false;
          if(!partitionGroupIds_.Equals(other.partitionGroupIds_)) return false;
          if (StartFromWrittenAtMs != other.StartFromWrittenAtMs) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Topic.Length != 0) hash ^= Topic.GetHashCode();
          hash ^= partitionGroupIds_.GetHashCode();
          if (StartFromWrittenAtMs != 0L) hash ^= StartFromWrittenAtMs.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Topic.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Topic);
          }
          partitionGroupIds_.WriteTo(output, _repeated_partitionGroupIds_codec);
          if (StartFromWrittenAtMs != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(StartFromWrittenAtMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Topic.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Topic);
          }
          partitionGroupIds_.WriteTo(ref output, _repeated_partitionGroupIds_codec);
          if (StartFromWrittenAtMs != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(StartFromWrittenAtMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Topic.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
          }
          size += partitionGroupIds_.CalculateSize(_repeated_partitionGroupIds_codec);
          if (StartFromWrittenAtMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartFromWrittenAtMs);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TopicReadSettings other) {
          if (other == null) {
            return;
          }
          if (other.Topic.Length != 0) {
            Topic = other.Topic;
          }
          partitionGroupIds_.Add(other.partitionGroupIds_);
          if (other.StartFromWrittenAtMs != 0L) {
            StartFromWrittenAtMs = other.StartFromWrittenAtMs;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Topic = input.ReadString();
                break;
              }
              case 18:
              case 16: {
                partitionGroupIds_.AddEntriesFrom(input, _repeated_partitionGroupIds_codec);
                break;
              }
              case 24: {
                StartFromWrittenAtMs = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Topic = input.ReadString();
                break;
              }
              case 18:
              case 16: {
                partitionGroupIds_.AddEntriesFrom(ref input, _repeated_partitionGroupIds_codec);
                break;
              }
              case 24: {
                StartFromWrittenAtMs = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      ///*
      /// Message that is used for describing commit.
      /// </summary>
      public sealed partial class PartitionCommit : pb::IMessage<PartitionCommit>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PartitionCommit> _parser = new pb::MessageParser<PartitionCommit>(() => new PartitionCommit());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PartitionCommit> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadClientMessageNew.Descriptor.NestedTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PartitionCommit() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PartitionCommit(PartitionCommit other) : this() {
          partitionStreamId_ = other.partitionStreamId_;
          offsets_ = other.offsets_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PartitionCommit Clone() {
          return new PartitionCommit(this);
        }

        /// <summary>Field number for the "partition_stream_id" field.</summary>
        public const int PartitionStreamIdFieldNumber = 1;
        private long partitionStreamId_;
        /// <summary>
        /// Identifier of partition stream with data to commit.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long PartitionStreamId {
          get { return partitionStreamId_; }
          set {
            partitionStreamId_ = value;
          }
        }

        /// <summary>Field number for the "offsets" field.</summary>
        public const int OffsetsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.OffsetsRange> _repeated_offsets_codec
            = pb::FieldCodec.ForMessage(18, global::Ydb.PersQueue.V1.OffsetsRange.Parser);
        private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.OffsetsRange> offsets_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.OffsetsRange>();
        /// <summary>
        /// Processed ranges.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.PersQueue.V1.OffsetsRange> Offsets {
          get { return offsets_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PartitionCommit);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PartitionCommit other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PartitionStreamId != other.PartitionStreamId) return false;
          if(!offsets_.Equals(other.offsets_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PartitionStreamId != 0L) hash ^= PartitionStreamId.GetHashCode();
          hash ^= offsets_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (PartitionStreamId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(PartitionStreamId);
          }
          offsets_.WriteTo(output, _repeated_offsets_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (PartitionStreamId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(PartitionStreamId);
          }
          offsets_.WriteTo(ref output, _repeated_offsets_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PartitionStreamId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(PartitionStreamId);
          }
          size += offsets_.CalculateSize(_repeated_offsets_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PartitionCommit other) {
          if (other == null) {
            return;
          }
          if (other.PartitionStreamId != 0L) {
            PartitionStreamId = other.PartitionStreamId;
          }
          offsets_.Add(other.offsets_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PartitionStreamId = input.ReadInt64();
                break;
              }
              case 18: {
                offsets_.AddEntriesFrom(input, _repeated_offsets_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                PartitionStreamId = input.ReadInt64();
                break;
              }
              case 18: {
                offsets_.AddEntriesFrom(ref input, _repeated_offsets_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  ///*
  /// Response for read session. Contains one of :
  ///      InitResponse - handshake response from server.
  ///      BatchReadResponse - portion of data.
  ///      CommitResponse - acknowledgment for commit.
  ///      CreatePartitionStreamRequest - command from server to create a partition partition stream.
  ///      DestroyPartitionStreamRequest - command from server to destroy a partition partition stream.
  /// </summary>
  public sealed partial class StreamingReadServerMessageNew : pb::IMessage<StreamingReadServerMessageNew>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingReadServerMessageNew> _parser = new pb::MessageParser<StreamingReadServerMessageNew>(() => new StreamingReadServerMessageNew());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamingReadServerMessageNew> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingReadServerMessageNew() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingReadServerMessageNew(StreamingReadServerMessageNew other) : this() {
      status_ = other.status_;
      issues_ = other.issues_.Clone();
      switch (other.ServerMessageCase) {
        case ServerMessageOneofCase.InitResponse:
          InitResponse = other.InitResponse.Clone();
          break;
        case ServerMessageOneofCase.BatchReadResponse:
          BatchReadResponse = other.BatchReadResponse.Clone();
          break;
        case ServerMessageOneofCase.CreatePartitionStreamRequest:
          CreatePartitionStreamRequest = other.CreatePartitionStreamRequest.Clone();
          break;
        case ServerMessageOneofCase.DestroyPartitionStreamRequest:
          DestroyPartitionStreamRequest = other.DestroyPartitionStreamRequest.Clone();
          break;
        case ServerMessageOneofCase.CommitResponse:
          CommitResponse = other.CommitResponse.Clone();
          break;
        case ServerMessageOneofCase.PartitionStreamStatusResponse:
          PartitionStreamStatusResponse = other.PartitionStreamStatusResponse.Clone();
          break;
        case ServerMessageOneofCase.StopReadResponse:
          StopReadResponse = other.StopReadResponse.Clone();
          break;
        case ServerMessageOneofCase.ResumeReadResponse:
          ResumeReadResponse = other.ResumeReadResponse.Clone();
          break;
        case ServerMessageOneofCase.AddTopicResponse:
          AddTopicResponse = other.AddTopicResponse.Clone();
          break;
        case ServerMessageOneofCase.RemoveTopicResponse:
          RemoveTopicResponse = other.RemoveTopicResponse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingReadServerMessageNew Clone() {
      return new StreamingReadServerMessageNew(this);
    }

    /// <summary>Field number for the "init_response" field.</summary>
    public const int InitResponseFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.InitResponse InitResponse {
      get { return serverMessageCase_ == ServerMessageOneofCase.InitResponse ? (global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.InitResponse) serverMessage_ : null; }
      set {
        serverMessage_ = value;
        serverMessageCase_ = value == null ? ServerMessageOneofCase.None : ServerMessageOneofCase.InitResponse;
      }
    }

    /// <summary>Field number for the "batch_read_response" field.</summary>
    public const int BatchReadResponseFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse BatchReadResponse {
      get { return serverMessageCase_ == ServerMessageOneofCase.BatchReadResponse ? (global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse) serverMessage_ : null; }
      set {
        serverMessage_ = value;
        serverMessageCase_ = value == null ? ServerMessageOneofCase.None : ServerMessageOneofCase.BatchReadResponse;
      }
    }

    /// <summary>Field number for the "create_partition_stream_request" field.</summary>
    public const int CreatePartitionStreamRequestFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CreatePartitionStreamRequest CreatePartitionStreamRequest {
      get { return serverMessageCase_ == ServerMessageOneofCase.CreatePartitionStreamRequest ? (global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CreatePartitionStreamRequest) serverMessage_ : null; }
      set {
        serverMessage_ = value;
        serverMessageCase_ = value == null ? ServerMessageOneofCase.None : ServerMessageOneofCase.CreatePartitionStreamRequest;
      }
    }

    /// <summary>Field number for the "destroy_partition_stream_request" field.</summary>
    public const int DestroyPartitionStreamRequestFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.DestroyPartitionStreamRequest DestroyPartitionStreamRequest {
      get { return serverMessageCase_ == ServerMessageOneofCase.DestroyPartitionStreamRequest ? (global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.DestroyPartitionStreamRequest) serverMessage_ : null; }
      set {
        serverMessage_ = value;
        serverMessageCase_ = value == null ? ServerMessageOneofCase.None : ServerMessageOneofCase.DestroyPartitionStreamRequest;
      }
    }

    /// <summary>Field number for the "commit_response" field.</summary>
    public const int CommitResponseFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CommitResponse CommitResponse {
      get { return serverMessageCase_ == ServerMessageOneofCase.CommitResponse ? (global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CommitResponse) serverMessage_ : null; }
      set {
        serverMessage_ = value;
        serverMessageCase_ = value == null ? ServerMessageOneofCase.None : ServerMessageOneofCase.CommitResponse;
      }
    }

    /// <summary>Field number for the "partition_stream_status_response" field.</summary>
    public const int PartitionStreamStatusResponseFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.PartitionStreamStatusResponse PartitionStreamStatusResponse {
      get { return serverMessageCase_ == ServerMessageOneofCase.PartitionStreamStatusResponse ? (global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.PartitionStreamStatusResponse) serverMessage_ : null; }
      set {
        serverMessage_ = value;
        serverMessageCase_ = value == null ? ServerMessageOneofCase.None : ServerMessageOneofCase.PartitionStreamStatusResponse;
      }
    }

    /// <summary>Field number for the "stop_read_response" field.</summary>
    public const int StopReadResponseFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.StopReadResponse StopReadResponse {
      get { return serverMessageCase_ == ServerMessageOneofCase.StopReadResponse ? (global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.StopReadResponse) serverMessage_ : null; }
      set {
        serverMessage_ = value;
        serverMessageCase_ = value == null ? ServerMessageOneofCase.None : ServerMessageOneofCase.StopReadResponse;
      }
    }

    /// <summary>Field number for the "resume_read_response" field.</summary>
    public const int ResumeReadResponseFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.ResumeReadResponse ResumeReadResponse {
      get { return serverMessageCase_ == ServerMessageOneofCase.ResumeReadResponse ? (global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.ResumeReadResponse) serverMessage_ : null; }
      set {
        serverMessage_ = value;
        serverMessageCase_ = value == null ? ServerMessageOneofCase.None : ServerMessageOneofCase.ResumeReadResponse;
      }
    }

    /// <summary>Field number for the "add_topic_response" field.</summary>
    public const int AddTopicResponseFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.AddTopicResponse AddTopicResponse {
      get { return serverMessageCase_ == ServerMessageOneofCase.AddTopicResponse ? (global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.AddTopicResponse) serverMessage_ : null; }
      set {
        serverMessage_ = value;
        serverMessageCase_ = value == null ? ServerMessageOneofCase.None : ServerMessageOneofCase.AddTopicResponse;
      }
    }

    /// <summary>Field number for the "remove_topic_response" field.</summary>
    public const int RemoveTopicResponseFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.RemoveTopicResponse RemoveTopicResponse {
      get { return serverMessageCase_ == ServerMessageOneofCase.RemoveTopicResponse ? (global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.RemoveTopicResponse) serverMessage_ : null; }
      set {
        serverMessage_ = value;
        serverMessageCase_ = value == null ? ServerMessageOneofCase.None : ServerMessageOneofCase.RemoveTopicResponse;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Ydb.StatusIds.Types.StatusCode status_ = global::Ydb.StatusIds.Types.StatusCode.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.StatusIds.Types.StatusCode Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "issues" field.</summary>
    public const int IssuesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Ydb.Issue.IssueMessage> _repeated_issues_codec
        = pb::FieldCodec.ForMessage(18, global::Ydb.Issue.IssueMessage.Parser);
    private readonly pbc::RepeatedField<global::Ydb.Issue.IssueMessage> issues_ = new pbc::RepeatedField<global::Ydb.Issue.IssueMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.Issue.IssueMessage> Issues {
      get { return issues_; }
    }

    private object serverMessage_;
    /// <summary>Enum of possible cases for the "server_message" oneof.</summary>
    public enum ServerMessageOneofCase {
      None = 0,
      InitResponse = 3,
      BatchReadResponse = 4,
      CreatePartitionStreamRequest = 5,
      DestroyPartitionStreamRequest = 6,
      CommitResponse = 7,
      PartitionStreamStatusResponse = 8,
      StopReadResponse = 9,
      ResumeReadResponse = 10,
      AddTopicResponse = 11,
      RemoveTopicResponse = 12,
    }
    private ServerMessageOneofCase serverMessageCase_ = ServerMessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerMessageOneofCase ServerMessageCase {
      get { return serverMessageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerMessage() {
      serverMessageCase_ = ServerMessageOneofCase.None;
      serverMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamingReadServerMessageNew);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamingReadServerMessageNew other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InitResponse, other.InitResponse)) return false;
      if (!object.Equals(BatchReadResponse, other.BatchReadResponse)) return false;
      if (!object.Equals(CreatePartitionStreamRequest, other.CreatePartitionStreamRequest)) return false;
      if (!object.Equals(DestroyPartitionStreamRequest, other.DestroyPartitionStreamRequest)) return false;
      if (!object.Equals(CommitResponse, other.CommitResponse)) return false;
      if (!object.Equals(PartitionStreamStatusResponse, other.PartitionStreamStatusResponse)) return false;
      if (!object.Equals(StopReadResponse, other.StopReadResponse)) return false;
      if (!object.Equals(ResumeReadResponse, other.ResumeReadResponse)) return false;
      if (!object.Equals(AddTopicResponse, other.AddTopicResponse)) return false;
      if (!object.Equals(RemoveTopicResponse, other.RemoveTopicResponse)) return false;
      if (Status != other.Status) return false;
      if(!issues_.Equals(other.issues_)) return false;
      if (ServerMessageCase != other.ServerMessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (serverMessageCase_ == ServerMessageOneofCase.InitResponse) hash ^= InitResponse.GetHashCode();
      if (serverMessageCase_ == ServerMessageOneofCase.BatchReadResponse) hash ^= BatchReadResponse.GetHashCode();
      if (serverMessageCase_ == ServerMessageOneofCase.CreatePartitionStreamRequest) hash ^= CreatePartitionStreamRequest.GetHashCode();
      if (serverMessageCase_ == ServerMessageOneofCase.DestroyPartitionStreamRequest) hash ^= DestroyPartitionStreamRequest.GetHashCode();
      if (serverMessageCase_ == ServerMessageOneofCase.CommitResponse) hash ^= CommitResponse.GetHashCode();
      if (serverMessageCase_ == ServerMessageOneofCase.PartitionStreamStatusResponse) hash ^= PartitionStreamStatusResponse.GetHashCode();
      if (serverMessageCase_ == ServerMessageOneofCase.StopReadResponse) hash ^= StopReadResponse.GetHashCode();
      if (serverMessageCase_ == ServerMessageOneofCase.ResumeReadResponse) hash ^= ResumeReadResponse.GetHashCode();
      if (serverMessageCase_ == ServerMessageOneofCase.AddTopicResponse) hash ^= AddTopicResponse.GetHashCode();
      if (serverMessageCase_ == ServerMessageOneofCase.RemoveTopicResponse) hash ^= RemoveTopicResponse.GetHashCode();
      if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) hash ^= Status.GetHashCode();
      hash ^= issues_.GetHashCode();
      hash ^= (int) serverMessageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      issues_.WriteTo(output, _repeated_issues_codec);
      if (serverMessageCase_ == ServerMessageOneofCase.InitResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(InitResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.BatchReadResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(BatchReadResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.CreatePartitionStreamRequest) {
        output.WriteRawTag(42);
        output.WriteMessage(CreatePartitionStreamRequest);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.DestroyPartitionStreamRequest) {
        output.WriteRawTag(50);
        output.WriteMessage(DestroyPartitionStreamRequest);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.CommitResponse) {
        output.WriteRawTag(58);
        output.WriteMessage(CommitResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.PartitionStreamStatusResponse) {
        output.WriteRawTag(66);
        output.WriteMessage(PartitionStreamStatusResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.StopReadResponse) {
        output.WriteRawTag(74);
        output.WriteMessage(StopReadResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.ResumeReadResponse) {
        output.WriteRawTag(82);
        output.WriteMessage(ResumeReadResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.AddTopicResponse) {
        output.WriteRawTag(90);
        output.WriteMessage(AddTopicResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.RemoveTopicResponse) {
        output.WriteRawTag(98);
        output.WriteMessage(RemoveTopicResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      issues_.WriteTo(ref output, _repeated_issues_codec);
      if (serverMessageCase_ == ServerMessageOneofCase.InitResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(InitResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.BatchReadResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(BatchReadResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.CreatePartitionStreamRequest) {
        output.WriteRawTag(42);
        output.WriteMessage(CreatePartitionStreamRequest);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.DestroyPartitionStreamRequest) {
        output.WriteRawTag(50);
        output.WriteMessage(DestroyPartitionStreamRequest);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.CommitResponse) {
        output.WriteRawTag(58);
        output.WriteMessage(CommitResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.PartitionStreamStatusResponse) {
        output.WriteRawTag(66);
        output.WriteMessage(PartitionStreamStatusResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.StopReadResponse) {
        output.WriteRawTag(74);
        output.WriteMessage(StopReadResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.ResumeReadResponse) {
        output.WriteRawTag(82);
        output.WriteMessage(ResumeReadResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.AddTopicResponse) {
        output.WriteRawTag(90);
        output.WriteMessage(AddTopicResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.RemoveTopicResponse) {
        output.WriteRawTag(98);
        output.WriteMessage(RemoveTopicResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (serverMessageCase_ == ServerMessageOneofCase.InitResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InitResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.BatchReadResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BatchReadResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.CreatePartitionStreamRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatePartitionStreamRequest);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.DestroyPartitionStreamRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DestroyPartitionStreamRequest);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.CommitResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommitResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.PartitionStreamStatusResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartitionStreamStatusResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.StopReadResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StopReadResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.ResumeReadResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResumeReadResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.AddTopicResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddTopicResponse);
      }
      if (serverMessageCase_ == ServerMessageOneofCase.RemoveTopicResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemoveTopicResponse);
      }
      if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += issues_.CalculateSize(_repeated_issues_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamingReadServerMessageNew other) {
      if (other == null) {
        return;
      }
      if (other.Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
        Status = other.Status;
      }
      issues_.Add(other.issues_);
      switch (other.ServerMessageCase) {
        case ServerMessageOneofCase.InitResponse:
          if (InitResponse == null) {
            InitResponse = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.InitResponse();
          }
          InitResponse.MergeFrom(other.InitResponse);
          break;
        case ServerMessageOneofCase.BatchReadResponse:
          if (BatchReadResponse == null) {
            BatchReadResponse = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse();
          }
          BatchReadResponse.MergeFrom(other.BatchReadResponse);
          break;
        case ServerMessageOneofCase.CreatePartitionStreamRequest:
          if (CreatePartitionStreamRequest == null) {
            CreatePartitionStreamRequest = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CreatePartitionStreamRequest();
          }
          CreatePartitionStreamRequest.MergeFrom(other.CreatePartitionStreamRequest);
          break;
        case ServerMessageOneofCase.DestroyPartitionStreamRequest:
          if (DestroyPartitionStreamRequest == null) {
            DestroyPartitionStreamRequest = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.DestroyPartitionStreamRequest();
          }
          DestroyPartitionStreamRequest.MergeFrom(other.DestroyPartitionStreamRequest);
          break;
        case ServerMessageOneofCase.CommitResponse:
          if (CommitResponse == null) {
            CommitResponse = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CommitResponse();
          }
          CommitResponse.MergeFrom(other.CommitResponse);
          break;
        case ServerMessageOneofCase.PartitionStreamStatusResponse:
          if (PartitionStreamStatusResponse == null) {
            PartitionStreamStatusResponse = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.PartitionStreamStatusResponse();
          }
          PartitionStreamStatusResponse.MergeFrom(other.PartitionStreamStatusResponse);
          break;
        case ServerMessageOneofCase.StopReadResponse:
          if (StopReadResponse == null) {
            StopReadResponse = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.StopReadResponse();
          }
          StopReadResponse.MergeFrom(other.StopReadResponse);
          break;
        case ServerMessageOneofCase.ResumeReadResponse:
          if (ResumeReadResponse == null) {
            ResumeReadResponse = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.ResumeReadResponse();
          }
          ResumeReadResponse.MergeFrom(other.ResumeReadResponse);
          break;
        case ServerMessageOneofCase.AddTopicResponse:
          if (AddTopicResponse == null) {
            AddTopicResponse = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.AddTopicResponse();
          }
          AddTopicResponse.MergeFrom(other.AddTopicResponse);
          break;
        case ServerMessageOneofCase.RemoveTopicResponse:
          if (RemoveTopicResponse == null) {
            RemoveTopicResponse = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.RemoveTopicResponse();
          }
          RemoveTopicResponse.MergeFrom(other.RemoveTopicResponse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
            break;
          }
          case 18: {
            issues_.AddEntriesFrom(input, _repeated_issues_codec);
            break;
          }
          case 26: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.InitResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.InitResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.InitResponse) {
              subBuilder.MergeFrom(InitResponse);
            }
            input.ReadMessage(subBuilder);
            InitResponse = subBuilder;
            break;
          }
          case 34: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.BatchReadResponse) {
              subBuilder.MergeFrom(BatchReadResponse);
            }
            input.ReadMessage(subBuilder);
            BatchReadResponse = subBuilder;
            break;
          }
          case 42: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CreatePartitionStreamRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CreatePartitionStreamRequest();
            if (serverMessageCase_ == ServerMessageOneofCase.CreatePartitionStreamRequest) {
              subBuilder.MergeFrom(CreatePartitionStreamRequest);
            }
            input.ReadMessage(subBuilder);
            CreatePartitionStreamRequest = subBuilder;
            break;
          }
          case 50: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.DestroyPartitionStreamRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.DestroyPartitionStreamRequest();
            if (serverMessageCase_ == ServerMessageOneofCase.DestroyPartitionStreamRequest) {
              subBuilder.MergeFrom(DestroyPartitionStreamRequest);
            }
            input.ReadMessage(subBuilder);
            DestroyPartitionStreamRequest = subBuilder;
            break;
          }
          case 58: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CommitResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CommitResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.CommitResponse) {
              subBuilder.MergeFrom(CommitResponse);
            }
            input.ReadMessage(subBuilder);
            CommitResponse = subBuilder;
            break;
          }
          case 66: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.PartitionStreamStatusResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.PartitionStreamStatusResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.PartitionStreamStatusResponse) {
              subBuilder.MergeFrom(PartitionStreamStatusResponse);
            }
            input.ReadMessage(subBuilder);
            PartitionStreamStatusResponse = subBuilder;
            break;
          }
          case 74: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.StopReadResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.StopReadResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.StopReadResponse) {
              subBuilder.MergeFrom(StopReadResponse);
            }
            input.ReadMessage(subBuilder);
            StopReadResponse = subBuilder;
            break;
          }
          case 82: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.ResumeReadResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.ResumeReadResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.ResumeReadResponse) {
              subBuilder.MergeFrom(ResumeReadResponse);
            }
            input.ReadMessage(subBuilder);
            ResumeReadResponse = subBuilder;
            break;
          }
          case 90: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.AddTopicResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.AddTopicResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.AddTopicResponse) {
              subBuilder.MergeFrom(AddTopicResponse);
            }
            input.ReadMessage(subBuilder);
            AddTopicResponse = subBuilder;
            break;
          }
          case 98: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.RemoveTopicResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.RemoveTopicResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.RemoveTopicResponse) {
              subBuilder.MergeFrom(RemoveTopicResponse);
            }
            input.ReadMessage(subBuilder);
            RemoveTopicResponse = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
            break;
          }
          case 18: {
            issues_.AddEntriesFrom(ref input, _repeated_issues_codec);
            break;
          }
          case 26: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.InitResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.InitResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.InitResponse) {
              subBuilder.MergeFrom(InitResponse);
            }
            input.ReadMessage(subBuilder);
            InitResponse = subBuilder;
            break;
          }
          case 34: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.BatchReadResponse) {
              subBuilder.MergeFrom(BatchReadResponse);
            }
            input.ReadMessage(subBuilder);
            BatchReadResponse = subBuilder;
            break;
          }
          case 42: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CreatePartitionStreamRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CreatePartitionStreamRequest();
            if (serverMessageCase_ == ServerMessageOneofCase.CreatePartitionStreamRequest) {
              subBuilder.MergeFrom(CreatePartitionStreamRequest);
            }
            input.ReadMessage(subBuilder);
            CreatePartitionStreamRequest = subBuilder;
            break;
          }
          case 50: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.DestroyPartitionStreamRequest subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.DestroyPartitionStreamRequest();
            if (serverMessageCase_ == ServerMessageOneofCase.DestroyPartitionStreamRequest) {
              subBuilder.MergeFrom(DestroyPartitionStreamRequest);
            }
            input.ReadMessage(subBuilder);
            DestroyPartitionStreamRequest = subBuilder;
            break;
          }
          case 58: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CommitResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CommitResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.CommitResponse) {
              subBuilder.MergeFrom(CommitResponse);
            }
            input.ReadMessage(subBuilder);
            CommitResponse = subBuilder;
            break;
          }
          case 66: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.PartitionStreamStatusResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.PartitionStreamStatusResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.PartitionStreamStatusResponse) {
              subBuilder.MergeFrom(PartitionStreamStatusResponse);
            }
            input.ReadMessage(subBuilder);
            PartitionStreamStatusResponse = subBuilder;
            break;
          }
          case 74: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.StopReadResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.StopReadResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.StopReadResponse) {
              subBuilder.MergeFrom(StopReadResponse);
            }
            input.ReadMessage(subBuilder);
            StopReadResponse = subBuilder;
            break;
          }
          case 82: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.ResumeReadResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.ResumeReadResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.ResumeReadResponse) {
              subBuilder.MergeFrom(ResumeReadResponse);
            }
            input.ReadMessage(subBuilder);
            ResumeReadResponse = subBuilder;
            break;
          }
          case 90: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.AddTopicResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.AddTopicResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.AddTopicResponse) {
              subBuilder.MergeFrom(AddTopicResponse);
            }
            input.ReadMessage(subBuilder);
            AddTopicResponse = subBuilder;
            break;
          }
          case 98: {
            global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.RemoveTopicResponse subBuilder = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.RemoveTopicResponse();
            if (serverMessageCase_ == ServerMessageOneofCase.RemoveTopicResponse) {
              subBuilder.MergeFrom(RemoveTopicResponse);
            }
            input.ReadMessage(subBuilder);
            RemoveTopicResponse = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the StreamingReadServerMessageNew message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Handshake response.
      /// </summary>
      public sealed partial class InitResponse : pb::IMessage<InitResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InitResponse> _parser = new pb::MessageParser<InitResponse>(() => new InitResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InitResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitResponse(InitResponse other) : this() {
          sessionId_ = other.sessionId_;
          blockFormatVersionByTopic_ = other.blockFormatVersionByTopic_.Clone();
          maxMetaCacheSize_ = other.maxMetaCacheSize_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitResponse Clone() {
          return new InitResponse(this);
        }

        /// <summary>Field number for the "session_id" field.</summary>
        public const int SessionIdFieldNumber = 1;
        private string sessionId_ = "";
        /// <summary>
        /// Read session identifier for debug purposes.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SessionId {
          get { return sessionId_; }
          set {
            sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "block_format_version_by_topic" field.</summary>
        public const int BlockFormatVersionByTopicFieldNumber = 2;
        private static readonly pbc::MapField<string, long>.Codec _map_blockFormatVersionByTopic_codec
            = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 18);
        private readonly pbc::MapField<string, long> blockFormatVersionByTopic_ = new pbc::MapField<string, long>();
        /// <summary>
        /// Block format version of data client will receive from topics.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, long> BlockFormatVersionByTopic {
          get { return blockFormatVersionByTopic_; }
        }

        /// <summary>Field number for the "max_meta_cache_size" field.</summary>
        public const int MaxMetaCacheSizeFieldNumber = 10;
        private long maxMetaCacheSize_;
        /// <summary>
        /// Choosed maximan cache size by server.
        /// Client must use cache of this size. Could change on retries - reduce size of cache in this case.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MaxMetaCacheSize {
          get { return maxMetaCacheSize_; }
          set {
            maxMetaCacheSize_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InitResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InitResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SessionId != other.SessionId) return false;
          if (!BlockFormatVersionByTopic.Equals(other.BlockFormatVersionByTopic)) return false;
          if (MaxMetaCacheSize != other.MaxMetaCacheSize) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
          hash ^= BlockFormatVersionByTopic.GetHashCode();
          if (MaxMetaCacheSize != 0L) hash ^= MaxMetaCacheSize.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SessionId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SessionId);
          }
          blockFormatVersionByTopic_.WriteTo(output, _map_blockFormatVersionByTopic_codec);
          if (MaxMetaCacheSize != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(MaxMetaCacheSize);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SessionId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SessionId);
          }
          blockFormatVersionByTopic_.WriteTo(ref output, _map_blockFormatVersionByTopic_codec);
          if (MaxMetaCacheSize != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(MaxMetaCacheSize);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (SessionId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
          }
          size += blockFormatVersionByTopic_.CalculateSize(_map_blockFormatVersionByTopic_codec);
          if (MaxMetaCacheSize != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxMetaCacheSize);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InitResponse other) {
          if (other == null) {
            return;
          }
          if (other.SessionId.Length != 0) {
            SessionId = other.SessionId;
          }
          blockFormatVersionByTopic_.Add(other.blockFormatVersionByTopic_);
          if (other.MaxMetaCacheSize != 0L) {
            MaxMetaCacheSize = other.MaxMetaCacheSize;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                SessionId = input.ReadString();
                break;
              }
              case 18: {
                blockFormatVersionByTopic_.AddEntriesFrom(input, _map_blockFormatVersionByTopic_codec);
                break;
              }
              case 80: {
                MaxMetaCacheSize = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                SessionId = input.ReadString();
                break;
              }
              case 18: {
                blockFormatVersionByTopic_.AddEntriesFrom(ref input, _map_blockFormatVersionByTopic_codec);
                break;
              }
              case 80: {
                MaxMetaCacheSize = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Command to create a partition partition stream.
      /// Client must react on this signal by sending StartRead when ready recieve data from this partition.
      /// </summary>
      public sealed partial class CreatePartitionStreamRequest : pb::IMessage<CreatePartitionStreamRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CreatePartitionStreamRequest> _parser = new pb::MessageParser<CreatePartitionStreamRequest>(() => new CreatePartitionStreamRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CreatePartitionStreamRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatePartitionStreamRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatePartitionStreamRequest(CreatePartitionStreamRequest other) : this() {
          partitionStream_ = other.partitionStream_ != null ? other.partitionStream_.Clone() : null;
          committedOffset_ = other.committedOffset_;
          endOffset_ = other.endOffset_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatePartitionStreamRequest Clone() {
          return new CreatePartitionStreamRequest(this);
        }

        /// <summary>Field number for the "partition_stream" field.</summary>
        public const int PartitionStreamFieldNumber = 1;
        private global::Ydb.PersQueue.V1.PartitionStream partitionStream_;
        /// <summary>
        /// Partition partition stream description.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.PersQueue.V1.PartitionStream PartitionStream {
          get { return partitionStream_; }
          set {
            partitionStream_ = value;
          }
        }

        /// <summary>Field number for the "committed_offset" field.</summary>
        public const int CommittedOffsetFieldNumber = 2;
        private long committedOffset_;
        /// <summary>
        /// Actual committed offset.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long CommittedOffset {
          get { return committedOffset_; }
          set {
            committedOffset_ = value;
          }
        }

        /// <summary>Field number for the "end_offset" field.</summary>
        public const int EndOffsetFieldNumber = 3;
        private long endOffset_;
        /// <summary>
        /// Offset of first not existing message in partition till now.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long EndOffset {
          get { return endOffset_; }
          set {
            endOffset_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CreatePartitionStreamRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CreatePartitionStreamRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(PartitionStream, other.PartitionStream)) return false;
          if (CommittedOffset != other.CommittedOffset) return false;
          if (EndOffset != other.EndOffset) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (partitionStream_ != null) hash ^= PartitionStream.GetHashCode();
          if (CommittedOffset != 0L) hash ^= CommittedOffset.GetHashCode();
          if (EndOffset != 0L) hash ^= EndOffset.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (partitionStream_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(PartitionStream);
          }
          if (CommittedOffset != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(CommittedOffset);
          }
          if (EndOffset != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(EndOffset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (partitionStream_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(PartitionStream);
          }
          if (CommittedOffset != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(CommittedOffset);
          }
          if (EndOffset != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(EndOffset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (partitionStream_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartitionStream);
          }
          if (CommittedOffset != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommittedOffset);
          }
          if (EndOffset != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndOffset);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CreatePartitionStreamRequest other) {
          if (other == null) {
            return;
          }
          if (other.partitionStream_ != null) {
            if (partitionStream_ == null) {
              PartitionStream = new global::Ydb.PersQueue.V1.PartitionStream();
            }
            PartitionStream.MergeFrom(other.PartitionStream);
          }
          if (other.CommittedOffset != 0L) {
            CommittedOffset = other.CommittedOffset;
          }
          if (other.EndOffset != 0L) {
            EndOffset = other.EndOffset;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (partitionStream_ == null) {
                  PartitionStream = new global::Ydb.PersQueue.V1.PartitionStream();
                }
                input.ReadMessage(PartitionStream);
                break;
              }
              case 16: {
                CommittedOffset = input.ReadInt64();
                break;
              }
              case 24: {
                EndOffset = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (partitionStream_ == null) {
                  PartitionStream = new global::Ydb.PersQueue.V1.PartitionStream();
                }
                input.ReadMessage(PartitionStream);
                break;
              }
              case 16: {
                CommittedOffset = input.ReadInt64();
                break;
              }
              case 24: {
                EndOffset = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Command to destroy concrete partition stream.
      /// </summary>
      public sealed partial class DestroyPartitionStreamRequest : pb::IMessage<DestroyPartitionStreamRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DestroyPartitionStreamRequest> _parser = new pb::MessageParser<DestroyPartitionStreamRequest>(() => new DestroyPartitionStreamRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DestroyPartitionStreamRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DestroyPartitionStreamRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DestroyPartitionStreamRequest(DestroyPartitionStreamRequest other) : this() {
          partitionStreamId_ = other.partitionStreamId_;
          graceful_ = other.graceful_;
          committedOffset_ = other.committedOffset_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DestroyPartitionStreamRequest Clone() {
          return new DestroyPartitionStreamRequest(this);
        }

        /// <summary>Field number for the "partition_stream_id" field.</summary>
        public const int PartitionStreamIdFieldNumber = 1;
        private long partitionStreamId_;
        /// <summary>
        /// Identifier of partition partition stream that is ready to be closed by server.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long PartitionStreamId {
          get { return partitionStreamId_; }
          set {
            partitionStreamId_ = value;
          }
        }

        /// <summary>Field number for the "graceful" field.</summary>
        public const int GracefulFieldNumber = 2;
        private bool graceful_;
        /// <summary>
        /// Flag of gracefull or not destroy.
        /// If True then server is waiting for Destroyed signal from client before giving of this partition for other read session.
        /// Server will not send more data from this partition.
        /// Client can process all received data and wait for commit and only after send Destroyed signal.
        /// If False then server gives partition for other session right now.
        /// All futher commits for this PartitionStream has no effect. Server is not waiting for Destroyed signal.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Graceful {
          get { return graceful_; }
          set {
            graceful_ = value;
          }
        }

        /// <summary>Field number for the "committed_offset" field.</summary>
        public const int CommittedOffsetFieldNumber = 3;
        private long committedOffset_;
        /// <summary>
        /// Last known committed offset.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long CommittedOffset {
          get { return committedOffset_; }
          set {
            committedOffset_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DestroyPartitionStreamRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DestroyPartitionStreamRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PartitionStreamId != other.PartitionStreamId) return false;
          if (Graceful != other.Graceful) return false;
          if (CommittedOffset != other.CommittedOffset) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PartitionStreamId != 0L) hash ^= PartitionStreamId.GetHashCode();
          if (Graceful != false) hash ^= Graceful.GetHashCode();
          if (CommittedOffset != 0L) hash ^= CommittedOffset.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (PartitionStreamId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(PartitionStreamId);
          }
          if (Graceful != false) {
            output.WriteRawTag(16);
            output.WriteBool(Graceful);
          }
          if (CommittedOffset != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(CommittedOffset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (PartitionStreamId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(PartitionStreamId);
          }
          if (Graceful != false) {
            output.WriteRawTag(16);
            output.WriteBool(Graceful);
          }
          if (CommittedOffset != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(CommittedOffset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PartitionStreamId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(PartitionStreamId);
          }
          if (Graceful != false) {
            size += 1 + 1;
          }
          if (CommittedOffset != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommittedOffset);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DestroyPartitionStreamRequest other) {
          if (other == null) {
            return;
          }
          if (other.PartitionStreamId != 0L) {
            PartitionStreamId = other.PartitionStreamId;
          }
          if (other.Graceful != false) {
            Graceful = other.Graceful;
          }
          if (other.CommittedOffset != 0L) {
            CommittedOffset = other.CommittedOffset;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PartitionStreamId = input.ReadInt64();
                break;
              }
              case 16: {
                Graceful = input.ReadBool();
                break;
              }
              case 24: {
                CommittedOffset = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                PartitionStreamId = input.ReadInt64();
                break;
              }
              case 16: {
                Graceful = input.ReadBool();
                break;
              }
              case 24: {
                CommittedOffset = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Acknowledgement for commits.
      /// </summary>
      public sealed partial class CommitResponse : pb::IMessage<CommitResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CommitResponse> _parser = new pb::MessageParser<CommitResponse>(() => new CommitResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CommitResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommitResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommitResponse(CommitResponse other) : this() {
          partitionsCommittedOffsets_ = other.partitionsCommittedOffsets_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommitResponse Clone() {
          return new CommitResponse(this);
        }

        /// <summary>Field number for the "partitions_committed_offsets" field.</summary>
        public const int PartitionsCommittedOffsetsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CommitResponse.Types.PartitionCommittedOffset> _repeated_partitionsCommittedOffsets_codec
            = pb::FieldCodec.ForMessage(10, global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CommitResponse.Types.PartitionCommittedOffset.Parser);
        private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CommitResponse.Types.PartitionCommittedOffset> partitionsCommittedOffsets_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CommitResponse.Types.PartitionCommittedOffset>();
        /// <summary>
        /// Partitions with progress.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CommitResponse.Types.PartitionCommittedOffset> PartitionsCommittedOffsets {
          get { return partitionsCommittedOffsets_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CommitResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CommitResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!partitionsCommittedOffsets_.Equals(other.partitionsCommittedOffsets_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= partitionsCommittedOffsets_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          partitionsCommittedOffsets_.WriteTo(output, _repeated_partitionsCommittedOffsets_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          partitionsCommittedOffsets_.WriteTo(ref output, _repeated_partitionsCommittedOffsets_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += partitionsCommittedOffsets_.CalculateSize(_repeated_partitionsCommittedOffsets_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CommitResponse other) {
          if (other == null) {
            return;
          }
          partitionsCommittedOffsets_.Add(other.partitionsCommittedOffsets_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                partitionsCommittedOffsets_.AddEntriesFrom(input, _repeated_partitionsCommittedOffsets_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                partitionsCommittedOffsets_.AddEntriesFrom(ref input, _repeated_partitionsCommittedOffsets_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the CommitResponse message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Per-partition commit representation.
          /// </summary>
          public sealed partial class PartitionCommittedOffset : pb::IMessage<PartitionCommittedOffset>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<PartitionCommittedOffset> _parser = new pb::MessageParser<PartitionCommittedOffset>(() => new PartitionCommittedOffset());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<PartitionCommittedOffset> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.CommitResponse.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PartitionCommittedOffset() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PartitionCommittedOffset(PartitionCommittedOffset other) : this() {
              partitionStreamId_ = other.partitionStreamId_;
              committedOffset_ = other.committedOffset_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PartitionCommittedOffset Clone() {
              return new PartitionCommittedOffset(this);
            }

            /// <summary>Field number for the "partition_stream_id" field.</summary>
            public const int PartitionStreamIdFieldNumber = 1;
            private long partitionStreamId_;
            /// <summary>
            /// Partition partition stream identifier.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long PartitionStreamId {
              get { return partitionStreamId_; }
              set {
                partitionStreamId_ = value;
              }
            }

            /// <summary>Field number for the "committed_offset" field.</summary>
            public const int CommittedOffsetFieldNumber = 2;
            private long committedOffset_;
            /// <summary>
            /// Last committed offset.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long CommittedOffset {
              get { return committedOffset_; }
              set {
                committedOffset_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as PartitionCommittedOffset);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(PartitionCommittedOffset other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (PartitionStreamId != other.PartitionStreamId) return false;
              if (CommittedOffset != other.CommittedOffset) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (PartitionStreamId != 0L) hash ^= PartitionStreamId.GetHashCode();
              if (CommittedOffset != 0L) hash ^= CommittedOffset.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (PartitionStreamId != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(PartitionStreamId);
              }
              if (CommittedOffset != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(CommittedOffset);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (PartitionStreamId != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(PartitionStreamId);
              }
              if (CommittedOffset != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(CommittedOffset);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (PartitionStreamId != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(PartitionStreamId);
              }
              if (CommittedOffset != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommittedOffset);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(PartitionCommittedOffset other) {
              if (other == null) {
                return;
              }
              if (other.PartitionStreamId != 0L) {
                PartitionStreamId = other.PartitionStreamId;
              }
              if (other.CommittedOffset != 0L) {
                CommittedOffset = other.CommittedOffset;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    PartitionStreamId = input.ReadInt64();
                    break;
                  }
                  case 16: {
                    CommittedOffset = input.ReadInt64();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    PartitionStreamId = input.ReadInt64();
                    break;
                  }
                  case 16: {
                    CommittedOffset = input.ReadInt64();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Readed data.
      /// </summary>
      public sealed partial class BatchReadResponse : pb::IMessage<BatchReadResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<BatchReadResponse> _parser = new pb::MessageParser<BatchReadResponse>(() => new BatchReadResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BatchReadResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BatchReadResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BatchReadResponse(BatchReadResponse other) : this() {
          skipRange_ = other.skipRange_.Clone();
          partitions_ = other.partitions_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BatchReadResponse Clone() {
          return new BatchReadResponse(this);
        }

        /// <summary>Field number for the "skip_range" field.</summary>
        public const int SkipRangeFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.SkipRange> _repeated_skipRange_codec
            = pb::FieldCodec.ForMessage(10, global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.SkipRange.Parser);
        private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.SkipRange> skipRange_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.SkipRange>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.SkipRange> SkipRange {
          get { return skipRange_; }
        }

        /// <summary>Field number for the "partitions" field.</summary>
        public const int PartitionsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.PartitionData> _repeated_partitions_codec
            = pb::FieldCodec.ForMessage(18, global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.PartitionData.Parser);
        private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.PartitionData> partitions_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.PartitionData>();
        /// <summary>
        /// Per-partition data.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.PartitionData> Partitions {
          get { return partitions_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BatchReadResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BatchReadResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!skipRange_.Equals(other.skipRange_)) return false;
          if(!partitions_.Equals(other.partitions_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= skipRange_.GetHashCode();
          hash ^= partitions_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          skipRange_.WriteTo(output, _repeated_skipRange_codec);
          partitions_.WriteTo(output, _repeated_partitions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          skipRange_.WriteTo(ref output, _repeated_skipRange_codec);
          partitions_.WriteTo(ref output, _repeated_partitions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += skipRange_.CalculateSize(_repeated_skipRange_codec);
          size += partitions_.CalculateSize(_repeated_partitions_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BatchReadResponse other) {
          if (other == null) {
            return;
          }
          skipRange_.Add(other.skipRange_);
          partitions_.Add(other.partitions_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                skipRange_.AddEntriesFrom(input, _repeated_skipRange_codec);
                break;
              }
              case 18: {
                partitions_.AddEntriesFrom(input, _repeated_partitions_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                skipRange_.AddEntriesFrom(ref input, _repeated_skipRange_codec);
                break;
              }
              case 18: {
                partitions_.AddEntriesFrom(ref input, _repeated_partitions_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the BatchReadResponse message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// One client message representation.
          /// Client lib must send commit right now for all skipped data (from it's read offset till first offset in range).
          /// </summary>
          public sealed partial class PartitionData : pb::IMessage<PartitionData>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<PartitionData> _parser = new pb::MessageParser<PartitionData>(() => new PartitionData());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<PartitionData> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PartitionData() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PartitionData(PartitionData other) : this() {
              partitionStreamId_ = other.partitionStreamId_;
              offsets_ = other.offsets_.Clone();
              sequenceNumbers_ = other.sequenceNumbers_.Clone();
              createdAtMs_ = other.createdAtMs_.Clone();
              writtenAtMs_ = other.writtenAtMs_.Clone();
              messageGroupIds_ = other.messageGroupIds_.Clone();
              messageGroupIdIndexes_ = other.messageGroupIdIndexes_.Clone();
              ips_ = other.ips_.Clone();
              ipIndexes_ = other.ipIndexes_.Clone();
              messageSessionMeta_ = other.messageSessionMeta_.Clone();
              messageSessionMetaIndexes_ = other.messageSessionMetaIndexes_.Clone();
              messageSizes_ = other.messageSizes_.Clone();
              blocksOffsets_ = other.blocksOffsets_.Clone();
              blocksPartNumbers_ = other.blocksPartNumbers_.Clone();
              blocksMessageCounts_ = other.blocksMessageCounts_.Clone();
              blocksUncompressedSizes_ = other.blocksUncompressedSizes_.Clone();
              blocksHeaders_ = other.blocksHeaders_.Clone();
              blocksData_ = other.blocksData_.Clone();
              resumeCookie_ = other.resumeCookie_;
              readStatistics_ = other.readStatistics_ != null ? other.readStatistics_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PartitionData Clone() {
              return new PartitionData(this);
            }

            /// <summary>Field number for the "partition_stream_id" field.</summary>
            public const int PartitionStreamIdFieldNumber = 1;
            private long partitionStreamId_;
            /// <summary>
            /// Data inside this message is from partition stream with this identifier.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long PartitionStreamId {
              get { return partitionStreamId_; }
              set {
                partitionStreamId_ = value;
              }
            }

            /// <summary>Field number for the "offsets" field.</summary>
            public const int OffsetsFieldNumber = 2;
            private static readonly pb::FieldCodec<long> _repeated_offsets_codec
                = pb::FieldCodec.ForInt64(18);
            private readonly pbc::RepeatedField<long> offsets_ = new pbc::RepeatedField<long>();
            /// <summary>
            /// Offsets in partition that assigned for messages.
            /// Unique value for clientside deduplication - (topic, cluster, partition_id, offset).
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<long> Offsets {
              get { return offsets_; }
            }

            /// <summary>Field number for the "sequence_numbers" field.</summary>
            public const int SequenceNumbersFieldNumber = 3;
            private static readonly pb::FieldCodec<long> _repeated_sequenceNumbers_codec
                = pb::FieldCodec.ForInt64(26);
            private readonly pbc::RepeatedField<long> sequenceNumbers_ = new pbc::RepeatedField<long>();
            /// <summary>
            /// Sequence numbers that provided with messages on write from client.
            /// Same size as offsets.
            /// Unique value for clientside deduplication - (topic, cluster, message_group_id, sequence_number).
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<long> SequenceNumbers {
              get { return sequenceNumbers_; }
            }

            /// <summary>Field number for the "created_at_ms" field.</summary>
            public const int CreatedAtMsFieldNumber = 4;
            private static readonly pb::FieldCodec<long> _repeated_createdAtMs_codec
                = pb::FieldCodec.ForInt64(34);
            private readonly pbc::RepeatedField<long> createdAtMs_ = new pbc::RepeatedField<long>();
            /// <summary>
            /// Timestamps of creation of messages provided on write from client.
            /// Same size as offsets.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<long> CreatedAtMs {
              get { return createdAtMs_; }
            }

            /// <summary>Field number for the "written_at_ms" field.</summary>
            public const int WrittenAtMsFieldNumber = 5;
            private static readonly pb::FieldCodec<long> _repeated_writtenAtMs_codec
                = pb::FieldCodec.ForInt64(42);
            private readonly pbc::RepeatedField<long> writtenAtMs_ = new pbc::RepeatedField<long>();
            /// <summary>
            /// Timestamps of writing in partition for client messages.
            /// Same size as offsets.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<long> WrittenAtMs {
              get { return writtenAtMs_; }
            }

            /// <summary>Field number for the "message_group_ids" field.</summary>
            public const int MessageGroupIdsFieldNumber = 6;
            private static readonly pb::FieldCodec<string> _repeated_messageGroupIds_codec
                = pb::FieldCodec.ForString(50);
            private readonly pbc::RepeatedField<string> messageGroupIds_ = new pbc::RepeatedField<string>();
            /// <summary>
            /// New messageGroupIds for updating cache.
            /// Size of vector is the same as number of negative values in message_group_id_indexes.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> MessageGroupIds {
              get { return messageGroupIds_; }
            }

            /// <summary>Field number for the "message_group_id_indexes" field.</summary>
            public const int MessageGroupIdIndexesFieldNumber = 7;
            private static readonly pb::FieldCodec<long> _repeated_messageGroupIdIndexes_codec
                = pb::FieldCodec.ForSInt64(58);
            private readonly pbc::RepeatedField<long> messageGroupIdIndexes_ = new pbc::RepeatedField<long>();
            /// <summary>
            /// Indexes of messageGroupIds.
            /// same size as offsets.
            /// Negative values (-X) means - put first not used messageGroupId from message_group_ids on index X in cache and use it for this client message.
            /// Positive values (X) means -use element by index X from cache for this client message. Do not change state of cache.
            /// Assumptions:
            ///      - Server will use positive values only for proposed before indexes.
            ///      - Each value is from 1 to max_meta_cache_size by abs.
            ///      - Do not make assumptions about choosing algorihm.
            ///      - There is separate caches of size max_meta_cache_size for different partition and different metadata fileds - message_group_id, ip and session_meta_data.
            ///      - Number of negative values in message_group_id_indexes vector is the same as length of message_group_ids vector.
            /// Example:
            ///                max_meta_cache_size :  2
            ///                      Cache indexes :  1  2
            ///      Cache state before processing :  s0,? // ? means not set yet.
            ///
            ///                  message_group_ids :  s1 s2 s3 s1
            ///           message_group_id_indexes :  -1    -2    1     2     1     1     -1    2     -2
            ///                        cache state :  s1,?  s1,s2 s1,s2 s1,s2 s1,s2 s1,s2 s3,s2 s3,s2 s3,s1
            ///             real message group ids :  s1    s2    s1    s2    s1    s1    s3    s2    s1
            ///                      Cache indexes :  1  2
            ///       Cache state after processing :  s3,s1
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<long> MessageGroupIdIndexes {
              get { return messageGroupIdIndexes_; }
            }

            /// <summary>Field number for the "ips" field.</summary>
            public const int IpsFieldNumber = 8;
            private static readonly pb::FieldCodec<string> _repeated_ips_codec
                = pb::FieldCodec.ForString(66);
            private readonly pbc::RepeatedField<string> ips_ = new pbc::RepeatedField<string>();
            /// <summary>
            /// New ips for updating ip cache.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> Ips {
              get { return ips_; }
            }

            /// <summary>Field number for the "ip_indexes" field.</summary>
            public const int IpIndexesFieldNumber = 9;
            private static readonly pb::FieldCodec<long> _repeated_ipIndexes_codec
                = pb::FieldCodec.ForSInt64(74);
            private readonly pbc::RepeatedField<long> ipIndexes_ = new pbc::RepeatedField<long>();
            /// <summary>
            /// Same as message_group_id_indexes but for ips.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<long> IpIndexes {
              get { return ipIndexes_; }
            }

            /// <summary>Field number for the "message_session_meta" field.</summary>
            public const int MessageSessionMetaFieldNumber = 10;
            private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.SessionMetaValue> _repeated_messageSessionMeta_codec
                = pb::FieldCodec.ForMessage(82, global::Ydb.PersQueue.V1.SessionMetaValue.Parser);
            private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.SessionMetaValue> messageSessionMeta_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.SessionMetaValue>();
            /// <summary>
            /// New session meta datas for updating cache.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Ydb.PersQueue.V1.SessionMetaValue> MessageSessionMeta {
              get { return messageSessionMeta_; }
            }

            /// <summary>Field number for the "message_session_meta_indexes" field.</summary>
            public const int MessageSessionMetaIndexesFieldNumber = 11;
            private static readonly pb::FieldCodec<long> _repeated_messageSessionMetaIndexes_codec
                = pb::FieldCodec.ForSInt64(90);
            private readonly pbc::RepeatedField<long> messageSessionMetaIndexes_ = new pbc::RepeatedField<long>();
            /// <summary>
            /// Same as message_group_id_indexes but for session meta data.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<long> MessageSessionMetaIndexes {
              get { return messageSessionMetaIndexes_; }
            }

            /// <summary>Field number for the "message_sizes" field.</summary>
            public const int MessageSizesFieldNumber = 12;
            private static readonly pb::FieldCodec<long> _repeated_messageSizes_codec
                = pb::FieldCodec.ForInt64(98);
            private readonly pbc::RepeatedField<long> messageSizes_ = new pbc::RepeatedField<long>();
            /// <summary>
            /// Client messages sizes.
            /// Same size as offsets.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<long> MessageSizes {
              get { return messageSizes_; }
            }

            /// <summary>Field number for the "blocks_offsets" field.</summary>
            public const int BlocksOffsetsFieldNumber = 13;
            private static readonly pb::FieldCodec<long> _repeated_blocksOffsets_codec
                = pb::FieldCodec.ForInt64(106);
            private readonly pbc::RepeatedField<long> blocksOffsets_ = new pbc::RepeatedField<long>();
            /// <summary>
            /// Block must contain whole client message when it's size is not bigger that max_block_size.
            /// If message is bigger than max_block_size - it will be transferred as SIZE/max_block_size blocks. All of this blocks will be with block_count = 0 but not the last one - last one's block_count will be 0;
            /// Blocks can be reordered upto provided by client uncompressed free buffer size.
            /// blocks:      A A A B B B CDE
            /// offset:      1 1 1 4 4 4 6
            /// part_number: 0 1 2 0 1 2 0
            /// count:       0 0 1 0 0 1 3
            /// Offset will be the same as in Offsets.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<long> BlocksOffsets {
              get { return blocksOffsets_; }
            }

            /// <summary>Field number for the "blocks_part_numbers" field.</summary>
            public const int BlocksPartNumbersFieldNumber = 14;
            private static readonly pb::FieldCodec<long> _repeated_blocksPartNumbers_codec
                = pb::FieldCodec.ForInt64(114);
            private readonly pbc::RepeatedField<long> blocksPartNumbers_ = new pbc::RepeatedField<long>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<long> BlocksPartNumbers {
              get { return blocksPartNumbers_; }
            }

            /// <summary>Field number for the "blocks_message_counts" field.</summary>
            public const int BlocksMessageCountsFieldNumber = 15;
            private static readonly pb::FieldCodec<long> _repeated_blocksMessageCounts_codec
                = pb::FieldCodec.ForInt64(122);
            private readonly pbc::RepeatedField<long> blocksMessageCounts_ = new pbc::RepeatedField<long>();
            /// <summary>
            /// How many complete messages and imcomplete messages end parts (one at most) this block contains
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<long> BlocksMessageCounts {
              get { return blocksMessageCounts_; }
            }

            /// <summary>Field number for the "blocks_uncompressed_sizes" field.</summary>
            public const int BlocksUncompressedSizesFieldNumber = 16;
            private static readonly pb::FieldCodec<long> _repeated_blocksUncompressedSizes_codec
                = pb::FieldCodec.ForInt64(130);
            private readonly pbc::RepeatedField<long> blocksUncompressedSizes_ = new pbc::RepeatedField<long>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<long> BlocksUncompressedSizes {
              get { return blocksUncompressedSizes_; }
            }

            /// <summary>Field number for the "blocks_headers" field.</summary>
            public const int BlocksHeadersFieldNumber = 17;
            private static readonly pb::FieldCodec<pb::ByteString> _repeated_blocksHeaders_codec
                = pb::FieldCodec.ForBytes(138);
            private readonly pbc::RepeatedField<pb::ByteString> blocksHeaders_ = new pbc::RepeatedField<pb::ByteString>();
            /// <summary>
            /// In block format version 0 each byte contains only block codec identifier
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<pb::ByteString> BlocksHeaders {
              get { return blocksHeaders_; }
            }

            /// <summary>Field number for the "blocks_data" field.</summary>
            public const int BlocksDataFieldNumber = 18;
            private static readonly pb::FieldCodec<pb::ByteString> _repeated_blocksData_codec
                = pb::FieldCodec.ForBytes(146);
            private readonly pbc::RepeatedField<pb::ByteString> blocksData_ = new pbc::RepeatedField<pb::ByteString>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<pb::ByteString> BlocksData {
              get { return blocksData_; }
            }

            /// <summary>Field number for the "resume_cookie" field.</summary>
            public const int ResumeCookieFieldNumber = 50;
            private long resumeCookie_;
            /// <summary>
            /// Zero if this is not first portion of data after resume or provided by client cookie otherwise.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long ResumeCookie {
              get { return resumeCookie_; }
              set {
                resumeCookie_ = value;
              }
            }

            /// <summary>Field number for the "read_statistics" field.</summary>
            public const int ReadStatisticsFieldNumber = 100;
            private global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.PartitionData.Types.ReadStatistics readStatistics_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.PartitionData.Types.ReadStatistics ReadStatistics {
              get { return readStatistics_; }
              set {
                readStatistics_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as PartitionData);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(PartitionData other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (PartitionStreamId != other.PartitionStreamId) return false;
              if(!offsets_.Equals(other.offsets_)) return false;
              if(!sequenceNumbers_.Equals(other.sequenceNumbers_)) return false;
              if(!createdAtMs_.Equals(other.createdAtMs_)) return false;
              if(!writtenAtMs_.Equals(other.writtenAtMs_)) return false;
              if(!messageGroupIds_.Equals(other.messageGroupIds_)) return false;
              if(!messageGroupIdIndexes_.Equals(other.messageGroupIdIndexes_)) return false;
              if(!ips_.Equals(other.ips_)) return false;
              if(!ipIndexes_.Equals(other.ipIndexes_)) return false;
              if(!messageSessionMeta_.Equals(other.messageSessionMeta_)) return false;
              if(!messageSessionMetaIndexes_.Equals(other.messageSessionMetaIndexes_)) return false;
              if(!messageSizes_.Equals(other.messageSizes_)) return false;
              if(!blocksOffsets_.Equals(other.blocksOffsets_)) return false;
              if(!blocksPartNumbers_.Equals(other.blocksPartNumbers_)) return false;
              if(!blocksMessageCounts_.Equals(other.blocksMessageCounts_)) return false;
              if(!blocksUncompressedSizes_.Equals(other.blocksUncompressedSizes_)) return false;
              if(!blocksHeaders_.Equals(other.blocksHeaders_)) return false;
              if(!blocksData_.Equals(other.blocksData_)) return false;
              if (ResumeCookie != other.ResumeCookie) return false;
              if (!object.Equals(ReadStatistics, other.ReadStatistics)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (PartitionStreamId != 0L) hash ^= PartitionStreamId.GetHashCode();
              hash ^= offsets_.GetHashCode();
              hash ^= sequenceNumbers_.GetHashCode();
              hash ^= createdAtMs_.GetHashCode();
              hash ^= writtenAtMs_.GetHashCode();
              hash ^= messageGroupIds_.GetHashCode();
              hash ^= messageGroupIdIndexes_.GetHashCode();
              hash ^= ips_.GetHashCode();
              hash ^= ipIndexes_.GetHashCode();
              hash ^= messageSessionMeta_.GetHashCode();
              hash ^= messageSessionMetaIndexes_.GetHashCode();
              hash ^= messageSizes_.GetHashCode();
              hash ^= blocksOffsets_.GetHashCode();
              hash ^= blocksPartNumbers_.GetHashCode();
              hash ^= blocksMessageCounts_.GetHashCode();
              hash ^= blocksUncompressedSizes_.GetHashCode();
              hash ^= blocksHeaders_.GetHashCode();
              hash ^= blocksData_.GetHashCode();
              if (ResumeCookie != 0L) hash ^= ResumeCookie.GetHashCode();
              if (readStatistics_ != null) hash ^= ReadStatistics.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (PartitionStreamId != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(PartitionStreamId);
              }
              offsets_.WriteTo(output, _repeated_offsets_codec);
              sequenceNumbers_.WriteTo(output, _repeated_sequenceNumbers_codec);
              createdAtMs_.WriteTo(output, _repeated_createdAtMs_codec);
              writtenAtMs_.WriteTo(output, _repeated_writtenAtMs_codec);
              messageGroupIds_.WriteTo(output, _repeated_messageGroupIds_codec);
              messageGroupIdIndexes_.WriteTo(output, _repeated_messageGroupIdIndexes_codec);
              ips_.WriteTo(output, _repeated_ips_codec);
              ipIndexes_.WriteTo(output, _repeated_ipIndexes_codec);
              messageSessionMeta_.WriteTo(output, _repeated_messageSessionMeta_codec);
              messageSessionMetaIndexes_.WriteTo(output, _repeated_messageSessionMetaIndexes_codec);
              messageSizes_.WriteTo(output, _repeated_messageSizes_codec);
              blocksOffsets_.WriteTo(output, _repeated_blocksOffsets_codec);
              blocksPartNumbers_.WriteTo(output, _repeated_blocksPartNumbers_codec);
              blocksMessageCounts_.WriteTo(output, _repeated_blocksMessageCounts_codec);
              blocksUncompressedSizes_.WriteTo(output, _repeated_blocksUncompressedSizes_codec);
              blocksHeaders_.WriteTo(output, _repeated_blocksHeaders_codec);
              blocksData_.WriteTo(output, _repeated_blocksData_codec);
              if (ResumeCookie != 0L) {
                output.WriteRawTag(144, 3);
                output.WriteInt64(ResumeCookie);
              }
              if (readStatistics_ != null) {
                output.WriteRawTag(162, 6);
                output.WriteMessage(ReadStatistics);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (PartitionStreamId != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(PartitionStreamId);
              }
              offsets_.WriteTo(ref output, _repeated_offsets_codec);
              sequenceNumbers_.WriteTo(ref output, _repeated_sequenceNumbers_codec);
              createdAtMs_.WriteTo(ref output, _repeated_createdAtMs_codec);
              writtenAtMs_.WriteTo(ref output, _repeated_writtenAtMs_codec);
              messageGroupIds_.WriteTo(ref output, _repeated_messageGroupIds_codec);
              messageGroupIdIndexes_.WriteTo(ref output, _repeated_messageGroupIdIndexes_codec);
              ips_.WriteTo(ref output, _repeated_ips_codec);
              ipIndexes_.WriteTo(ref output, _repeated_ipIndexes_codec);
              messageSessionMeta_.WriteTo(ref output, _repeated_messageSessionMeta_codec);
              messageSessionMetaIndexes_.WriteTo(ref output, _repeated_messageSessionMetaIndexes_codec);
              messageSizes_.WriteTo(ref output, _repeated_messageSizes_codec);
              blocksOffsets_.WriteTo(ref output, _repeated_blocksOffsets_codec);
              blocksPartNumbers_.WriteTo(ref output, _repeated_blocksPartNumbers_codec);
              blocksMessageCounts_.WriteTo(ref output, _repeated_blocksMessageCounts_codec);
              blocksUncompressedSizes_.WriteTo(ref output, _repeated_blocksUncompressedSizes_codec);
              blocksHeaders_.WriteTo(ref output, _repeated_blocksHeaders_codec);
              blocksData_.WriteTo(ref output, _repeated_blocksData_codec);
              if (ResumeCookie != 0L) {
                output.WriteRawTag(144, 3);
                output.WriteInt64(ResumeCookie);
              }
              if (readStatistics_ != null) {
                output.WriteRawTag(162, 6);
                output.WriteMessage(ReadStatistics);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (PartitionStreamId != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(PartitionStreamId);
              }
              size += offsets_.CalculateSize(_repeated_offsets_codec);
              size += sequenceNumbers_.CalculateSize(_repeated_sequenceNumbers_codec);
              size += createdAtMs_.CalculateSize(_repeated_createdAtMs_codec);
              size += writtenAtMs_.CalculateSize(_repeated_writtenAtMs_codec);
              size += messageGroupIds_.CalculateSize(_repeated_messageGroupIds_codec);
              size += messageGroupIdIndexes_.CalculateSize(_repeated_messageGroupIdIndexes_codec);
              size += ips_.CalculateSize(_repeated_ips_codec);
              size += ipIndexes_.CalculateSize(_repeated_ipIndexes_codec);
              size += messageSessionMeta_.CalculateSize(_repeated_messageSessionMeta_codec);
              size += messageSessionMetaIndexes_.CalculateSize(_repeated_messageSessionMetaIndexes_codec);
              size += messageSizes_.CalculateSize(_repeated_messageSizes_codec);
              size += blocksOffsets_.CalculateSize(_repeated_blocksOffsets_codec);
              size += blocksPartNumbers_.CalculateSize(_repeated_blocksPartNumbers_codec);
              size += blocksMessageCounts_.CalculateSize(_repeated_blocksMessageCounts_codec);
              size += blocksUncompressedSizes_.CalculateSize(_repeated_blocksUncompressedSizes_codec);
              size += blocksHeaders_.CalculateSize(_repeated_blocksHeaders_codec);
              size += blocksData_.CalculateSize(_repeated_blocksData_codec);
              if (ResumeCookie != 0L) {
                size += 2 + pb::CodedOutputStream.ComputeInt64Size(ResumeCookie);
              }
              if (readStatistics_ != null) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReadStatistics);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(PartitionData other) {
              if (other == null) {
                return;
              }
              if (other.PartitionStreamId != 0L) {
                PartitionStreamId = other.PartitionStreamId;
              }
              offsets_.Add(other.offsets_);
              sequenceNumbers_.Add(other.sequenceNumbers_);
              createdAtMs_.Add(other.createdAtMs_);
              writtenAtMs_.Add(other.writtenAtMs_);
              messageGroupIds_.Add(other.messageGroupIds_);
              messageGroupIdIndexes_.Add(other.messageGroupIdIndexes_);
              ips_.Add(other.ips_);
              ipIndexes_.Add(other.ipIndexes_);
              messageSessionMeta_.Add(other.messageSessionMeta_);
              messageSessionMetaIndexes_.Add(other.messageSessionMetaIndexes_);
              messageSizes_.Add(other.messageSizes_);
              blocksOffsets_.Add(other.blocksOffsets_);
              blocksPartNumbers_.Add(other.blocksPartNumbers_);
              blocksMessageCounts_.Add(other.blocksMessageCounts_);
              blocksUncompressedSizes_.Add(other.blocksUncompressedSizes_);
              blocksHeaders_.Add(other.blocksHeaders_);
              blocksData_.Add(other.blocksData_);
              if (other.ResumeCookie != 0L) {
                ResumeCookie = other.ResumeCookie;
              }
              if (other.readStatistics_ != null) {
                if (readStatistics_ == null) {
                  ReadStatistics = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.PartitionData.Types.ReadStatistics();
                }
                ReadStatistics.MergeFrom(other.ReadStatistics);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    PartitionStreamId = input.ReadInt64();
                    break;
                  }
                  case 18:
                  case 16: {
                    offsets_.AddEntriesFrom(input, _repeated_offsets_codec);
                    break;
                  }
                  case 26:
                  case 24: {
                    sequenceNumbers_.AddEntriesFrom(input, _repeated_sequenceNumbers_codec);
                    break;
                  }
                  case 34:
                  case 32: {
                    createdAtMs_.AddEntriesFrom(input, _repeated_createdAtMs_codec);
                    break;
                  }
                  case 42:
                  case 40: {
                    writtenAtMs_.AddEntriesFrom(input, _repeated_writtenAtMs_codec);
                    break;
                  }
                  case 50: {
                    messageGroupIds_.AddEntriesFrom(input, _repeated_messageGroupIds_codec);
                    break;
                  }
                  case 58:
                  case 56: {
                    messageGroupIdIndexes_.AddEntriesFrom(input, _repeated_messageGroupIdIndexes_codec);
                    break;
                  }
                  case 66: {
                    ips_.AddEntriesFrom(input, _repeated_ips_codec);
                    break;
                  }
                  case 74:
                  case 72: {
                    ipIndexes_.AddEntriesFrom(input, _repeated_ipIndexes_codec);
                    break;
                  }
                  case 82: {
                    messageSessionMeta_.AddEntriesFrom(input, _repeated_messageSessionMeta_codec);
                    break;
                  }
                  case 90:
                  case 88: {
                    messageSessionMetaIndexes_.AddEntriesFrom(input, _repeated_messageSessionMetaIndexes_codec);
                    break;
                  }
                  case 98:
                  case 96: {
                    messageSizes_.AddEntriesFrom(input, _repeated_messageSizes_codec);
                    break;
                  }
                  case 106:
                  case 104: {
                    blocksOffsets_.AddEntriesFrom(input, _repeated_blocksOffsets_codec);
                    break;
                  }
                  case 114:
                  case 112: {
                    blocksPartNumbers_.AddEntriesFrom(input, _repeated_blocksPartNumbers_codec);
                    break;
                  }
                  case 122:
                  case 120: {
                    blocksMessageCounts_.AddEntriesFrom(input, _repeated_blocksMessageCounts_codec);
                    break;
                  }
                  case 130:
                  case 128: {
                    blocksUncompressedSizes_.AddEntriesFrom(input, _repeated_blocksUncompressedSizes_codec);
                    break;
                  }
                  case 138: {
                    blocksHeaders_.AddEntriesFrom(input, _repeated_blocksHeaders_codec);
                    break;
                  }
                  case 146: {
                    blocksData_.AddEntriesFrom(input, _repeated_blocksData_codec);
                    break;
                  }
                  case 400: {
                    ResumeCookie = input.ReadInt64();
                    break;
                  }
                  case 802: {
                    if (readStatistics_ == null) {
                      ReadStatistics = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.PartitionData.Types.ReadStatistics();
                    }
                    input.ReadMessage(ReadStatistics);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    PartitionStreamId = input.ReadInt64();
                    break;
                  }
                  case 18:
                  case 16: {
                    offsets_.AddEntriesFrom(ref input, _repeated_offsets_codec);
                    break;
                  }
                  case 26:
                  case 24: {
                    sequenceNumbers_.AddEntriesFrom(ref input, _repeated_sequenceNumbers_codec);
                    break;
                  }
                  case 34:
                  case 32: {
                    createdAtMs_.AddEntriesFrom(ref input, _repeated_createdAtMs_codec);
                    break;
                  }
                  case 42:
                  case 40: {
                    writtenAtMs_.AddEntriesFrom(ref input, _repeated_writtenAtMs_codec);
                    break;
                  }
                  case 50: {
                    messageGroupIds_.AddEntriesFrom(ref input, _repeated_messageGroupIds_codec);
                    break;
                  }
                  case 58:
                  case 56: {
                    messageGroupIdIndexes_.AddEntriesFrom(ref input, _repeated_messageGroupIdIndexes_codec);
                    break;
                  }
                  case 66: {
                    ips_.AddEntriesFrom(ref input, _repeated_ips_codec);
                    break;
                  }
                  case 74:
                  case 72: {
                    ipIndexes_.AddEntriesFrom(ref input, _repeated_ipIndexes_codec);
                    break;
                  }
                  case 82: {
                    messageSessionMeta_.AddEntriesFrom(ref input, _repeated_messageSessionMeta_codec);
                    break;
                  }
                  case 90:
                  case 88: {
                    messageSessionMetaIndexes_.AddEntriesFrom(ref input, _repeated_messageSessionMetaIndexes_codec);
                    break;
                  }
                  case 98:
                  case 96: {
                    messageSizes_.AddEntriesFrom(ref input, _repeated_messageSizes_codec);
                    break;
                  }
                  case 106:
                  case 104: {
                    blocksOffsets_.AddEntriesFrom(ref input, _repeated_blocksOffsets_codec);
                    break;
                  }
                  case 114:
                  case 112: {
                    blocksPartNumbers_.AddEntriesFrom(ref input, _repeated_blocksPartNumbers_codec);
                    break;
                  }
                  case 122:
                  case 120: {
                    blocksMessageCounts_.AddEntriesFrom(ref input, _repeated_blocksMessageCounts_codec);
                    break;
                  }
                  case 130:
                  case 128: {
                    blocksUncompressedSizes_.AddEntriesFrom(ref input, _repeated_blocksUncompressedSizes_codec);
                    break;
                  }
                  case 138: {
                    blocksHeaders_.AddEntriesFrom(ref input, _repeated_blocksHeaders_codec);
                    break;
                  }
                  case 146: {
                    blocksData_.AddEntriesFrom(ref input, _repeated_blocksData_codec);
                    break;
                  }
                  case 400: {
                    ResumeCookie = input.ReadInt64();
                    break;
                  }
                  case 802: {
                    if (readStatistics_ == null) {
                      ReadStatistics = new global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.PartitionData.Types.ReadStatistics();
                    }
                    input.ReadMessage(ReadStatistics);
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the PartitionData message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public sealed partial class ReadStatistics : pb::IMessage<ReadStatistics>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<ReadStatistics> _parser = new pb::MessageParser<ReadStatistics>(() => new ReadStatistics());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<ReadStatistics> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Types.PartitionData.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ReadStatistics() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ReadStatistics(ReadStatistics other) : this() {
                  blobsFromCache_ = other.blobsFromCache_;
                  blobsFromDisk_ = other.blobsFromDisk_;
                  bytesFromHead_ = other.bytesFromHead_;
                  bytesFromCache_ = other.bytesFromCache_;
                  bytesFromDisk_ = other.bytesFromDisk_;
                  repackDurationMs_ = other.repackDurationMs_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ReadStatistics Clone() {
                  return new ReadStatistics(this);
                }

                /// <summary>Field number for the "blobs_from_cache" field.</summary>
                public const int BlobsFromCacheFieldNumber = 1;
                private long blobsFromCache_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public long BlobsFromCache {
                  get { return blobsFromCache_; }
                  set {
                    blobsFromCache_ = value;
                  }
                }

                /// <summary>Field number for the "blobs_from_disk" field.</summary>
                public const int BlobsFromDiskFieldNumber = 2;
                private long blobsFromDisk_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public long BlobsFromDisk {
                  get { return blobsFromDisk_; }
                  set {
                    blobsFromDisk_ = value;
                  }
                }

                /// <summary>Field number for the "bytes_from_head" field.</summary>
                public const int BytesFromHeadFieldNumber = 3;
                private long bytesFromHead_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public long BytesFromHead {
                  get { return bytesFromHead_; }
                  set {
                    bytesFromHead_ = value;
                  }
                }

                /// <summary>Field number for the "bytes_from_cache" field.</summary>
                public const int BytesFromCacheFieldNumber = 4;
                private long bytesFromCache_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public long BytesFromCache {
                  get { return bytesFromCache_; }
                  set {
                    bytesFromCache_ = value;
                  }
                }

                /// <summary>Field number for the "bytes_from_disk" field.</summary>
                public const int BytesFromDiskFieldNumber = 5;
                private long bytesFromDisk_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public long BytesFromDisk {
                  get { return bytesFromDisk_; }
                  set {
                    bytesFromDisk_ = value;
                  }
                }

                /// <summary>Field number for the "repack_duration_ms" field.</summary>
                public const int RepackDurationMsFieldNumber = 6;
                private long repackDurationMs_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public long RepackDurationMs {
                  get { return repackDurationMs_; }
                  set {
                    repackDurationMs_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as ReadStatistics);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(ReadStatistics other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (BlobsFromCache != other.BlobsFromCache) return false;
                  if (BlobsFromDisk != other.BlobsFromDisk) return false;
                  if (BytesFromHead != other.BytesFromHead) return false;
                  if (BytesFromCache != other.BytesFromCache) return false;
                  if (BytesFromDisk != other.BytesFromDisk) return false;
                  if (RepackDurationMs != other.RepackDurationMs) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (BlobsFromCache != 0L) hash ^= BlobsFromCache.GetHashCode();
                  if (BlobsFromDisk != 0L) hash ^= BlobsFromDisk.GetHashCode();
                  if (BytesFromHead != 0L) hash ^= BytesFromHead.GetHashCode();
                  if (BytesFromCache != 0L) hash ^= BytesFromCache.GetHashCode();
                  if (BytesFromDisk != 0L) hash ^= BytesFromDisk.GetHashCode();
                  if (RepackDurationMs != 0L) hash ^= RepackDurationMs.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (BlobsFromCache != 0L) {
                    output.WriteRawTag(8);
                    output.WriteInt64(BlobsFromCache);
                  }
                  if (BlobsFromDisk != 0L) {
                    output.WriteRawTag(16);
                    output.WriteInt64(BlobsFromDisk);
                  }
                  if (BytesFromHead != 0L) {
                    output.WriteRawTag(24);
                    output.WriteInt64(BytesFromHead);
                  }
                  if (BytesFromCache != 0L) {
                    output.WriteRawTag(32);
                    output.WriteInt64(BytesFromCache);
                  }
                  if (BytesFromDisk != 0L) {
                    output.WriteRawTag(40);
                    output.WriteInt64(BytesFromDisk);
                  }
                  if (RepackDurationMs != 0L) {
                    output.WriteRawTag(48);
                    output.WriteInt64(RepackDurationMs);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (BlobsFromCache != 0L) {
                    output.WriteRawTag(8);
                    output.WriteInt64(BlobsFromCache);
                  }
                  if (BlobsFromDisk != 0L) {
                    output.WriteRawTag(16);
                    output.WriteInt64(BlobsFromDisk);
                  }
                  if (BytesFromHead != 0L) {
                    output.WriteRawTag(24);
                    output.WriteInt64(BytesFromHead);
                  }
                  if (BytesFromCache != 0L) {
                    output.WriteRawTag(32);
                    output.WriteInt64(BytesFromCache);
                  }
                  if (BytesFromDisk != 0L) {
                    output.WriteRawTag(40);
                    output.WriteInt64(BytesFromDisk);
                  }
                  if (RepackDurationMs != 0L) {
                    output.WriteRawTag(48);
                    output.WriteInt64(RepackDurationMs);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (BlobsFromCache != 0L) {
                    size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlobsFromCache);
                  }
                  if (BlobsFromDisk != 0L) {
                    size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlobsFromDisk);
                  }
                  if (BytesFromHead != 0L) {
                    size += 1 + pb::CodedOutputStream.ComputeInt64Size(BytesFromHead);
                  }
                  if (BytesFromCache != 0L) {
                    size += 1 + pb::CodedOutputStream.ComputeInt64Size(BytesFromCache);
                  }
                  if (BytesFromDisk != 0L) {
                    size += 1 + pb::CodedOutputStream.ComputeInt64Size(BytesFromDisk);
                  }
                  if (RepackDurationMs != 0L) {
                    size += 1 + pb::CodedOutputStream.ComputeInt64Size(RepackDurationMs);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(ReadStatistics other) {
                  if (other == null) {
                    return;
                  }
                  if (other.BlobsFromCache != 0L) {
                    BlobsFromCache = other.BlobsFromCache;
                  }
                  if (other.BlobsFromDisk != 0L) {
                    BlobsFromDisk = other.BlobsFromDisk;
                  }
                  if (other.BytesFromHead != 0L) {
                    BytesFromHead = other.BytesFromHead;
                  }
                  if (other.BytesFromCache != 0L) {
                    BytesFromCache = other.BytesFromCache;
                  }
                  if (other.BytesFromDisk != 0L) {
                    BytesFromDisk = other.BytesFromDisk;
                  }
                  if (other.RepackDurationMs != 0L) {
                    RepackDurationMs = other.RepackDurationMs;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        BlobsFromCache = input.ReadInt64();
                        break;
                      }
                      case 16: {
                        BlobsFromDisk = input.ReadInt64();
                        break;
                      }
                      case 24: {
                        BytesFromHead = input.ReadInt64();
                        break;
                      }
                      case 32: {
                        BytesFromCache = input.ReadInt64();
                        break;
                      }
                      case 40: {
                        BytesFromDisk = input.ReadInt64();
                        break;
                      }
                      case 48: {
                        RepackDurationMs = input.ReadInt64();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        BlobsFromCache = input.ReadInt64();
                        break;
                      }
                      case 16: {
                        BlobsFromDisk = input.ReadInt64();
                        break;
                      }
                      case 24: {
                        BytesFromHead = input.ReadInt64();
                        break;
                      }
                      case 32: {
                        BytesFromCache = input.ReadInt64();
                        break;
                      }
                      case 40: {
                        BytesFromDisk = input.ReadInt64();
                        break;
                      }
                      case 48: {
                        RepackDurationMs = input.ReadInt64();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

            }
            #endregion

          }

          public sealed partial class SkipRange : pb::IMessage<SkipRange>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<SkipRange> _parser = new pb::MessageParser<SkipRange>(() => new SkipRange());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<SkipRange> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Types.BatchReadResponse.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SkipRange() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SkipRange(SkipRange other) : this() {
              partitionStreamId_ = other.partitionStreamId_;
              skipRange_ = other.skipRange_ != null ? other.skipRange_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SkipRange Clone() {
              return new SkipRange(this);
            }

            /// <summary>Field number for the "partition_stream_id" field.</summary>
            public const int PartitionStreamIdFieldNumber = 1;
            private long partitionStreamId_;
            /// <summary>
            /// Partition Stream identifier.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long PartitionStreamId {
              get { return partitionStreamId_; }
              set {
                partitionStreamId_ = value;
              }
            }

            /// <summary>Field number for the "skip_range" field.</summary>
            public const int SkipRange_FieldNumber = 2;
            private global::Ydb.PersQueue.V1.OffsetsRange skipRange_;
            /// <summary>
            /// When some data is skipped by client parameters (read_timestamp_ms for example) then range of skipped offsets is sended to client.
            /// Client lib must commit this range and change read_offset to end of this range.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Ydb.PersQueue.V1.OffsetsRange SkipRange_ {
              get { return skipRange_; }
              set {
                skipRange_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as SkipRange);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(SkipRange other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (PartitionStreamId != other.PartitionStreamId) return false;
              if (!object.Equals(SkipRange_, other.SkipRange_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (PartitionStreamId != 0L) hash ^= PartitionStreamId.GetHashCode();
              if (skipRange_ != null) hash ^= SkipRange_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (PartitionStreamId != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(PartitionStreamId);
              }
              if (skipRange_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(SkipRange_);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (PartitionStreamId != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(PartitionStreamId);
              }
              if (skipRange_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(SkipRange_);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (PartitionStreamId != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(PartitionStreamId);
              }
              if (skipRange_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SkipRange_);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(SkipRange other) {
              if (other == null) {
                return;
              }
              if (other.PartitionStreamId != 0L) {
                PartitionStreamId = other.PartitionStreamId;
              }
              if (other.skipRange_ != null) {
                if (skipRange_ == null) {
                  SkipRange_ = new global::Ydb.PersQueue.V1.OffsetsRange();
                }
                SkipRange_.MergeFrom(other.SkipRange_);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    PartitionStreamId = input.ReadInt64();
                    break;
                  }
                  case 18: {
                    if (skipRange_ == null) {
                      SkipRange_ = new global::Ydb.PersQueue.V1.OffsetsRange();
                    }
                    input.ReadMessage(SkipRange_);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    PartitionStreamId = input.ReadInt64();
                    break;
                  }
                  case 18: {
                    if (skipRange_ == null) {
                      SkipRange_ = new global::Ydb.PersQueue.V1.OffsetsRange();
                    }
                    input.ReadMessage(SkipRange_);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Response for status requst.
      /// </summary>
      public sealed partial class PartitionStreamStatusResponse : pb::IMessage<PartitionStreamStatusResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PartitionStreamStatusResponse> _parser = new pb::MessageParser<PartitionStreamStatusResponse>(() => new PartitionStreamStatusResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PartitionStreamStatusResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PartitionStreamStatusResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PartitionStreamStatusResponse(PartitionStreamStatusResponse other) : this() {
          partitionStreamId_ = other.partitionStreamId_;
          committedOffset_ = other.committedOffset_;
          endOffset_ = other.endOffset_;
          writtenAtWatermarkMs_ = other.writtenAtWatermarkMs_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PartitionStreamStatusResponse Clone() {
          return new PartitionStreamStatusResponse(this);
        }

        /// <summary>Field number for the "partition_stream_id" field.</summary>
        public const int PartitionStreamIdFieldNumber = 1;
        private long partitionStreamId_;
        /// <summary>
        /// Identifier of partition partition stream that is ready to be closed by server.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long PartitionStreamId {
          get { return partitionStreamId_; }
          set {
            partitionStreamId_ = value;
          }
        }

        /// <summary>Field number for the "committed_offset" field.</summary>
        public const int CommittedOffsetFieldNumber = 2;
        private long committedOffset_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long CommittedOffset {
          get { return committedOffset_; }
          set {
            committedOffset_ = value;
          }
        }

        /// <summary>Field number for the "end_offset" field.</summary>
        public const int EndOffsetFieldNumber = 3;
        private long endOffset_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long EndOffset {
          get { return endOffset_; }
          set {
            endOffset_ = value;
          }
        }

        /// <summary>Field number for the "written_at_watermark_ms" field.</summary>
        public const int WrittenAtWatermarkMsFieldNumber = 4;
        private long writtenAtWatermarkMs_;
        /// <summary>
        /// WriteTimestamp of next message (and end_offset) will be not less that WriteWatermarkMs.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long WrittenAtWatermarkMs {
          get { return writtenAtWatermarkMs_; }
          set {
            writtenAtWatermarkMs_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PartitionStreamStatusResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PartitionStreamStatusResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PartitionStreamId != other.PartitionStreamId) return false;
          if (CommittedOffset != other.CommittedOffset) return false;
          if (EndOffset != other.EndOffset) return false;
          if (WrittenAtWatermarkMs != other.WrittenAtWatermarkMs) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PartitionStreamId != 0L) hash ^= PartitionStreamId.GetHashCode();
          if (CommittedOffset != 0L) hash ^= CommittedOffset.GetHashCode();
          if (EndOffset != 0L) hash ^= EndOffset.GetHashCode();
          if (WrittenAtWatermarkMs != 0L) hash ^= WrittenAtWatermarkMs.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (PartitionStreamId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(PartitionStreamId);
          }
          if (CommittedOffset != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(CommittedOffset);
          }
          if (EndOffset != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(EndOffset);
          }
          if (WrittenAtWatermarkMs != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(WrittenAtWatermarkMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (PartitionStreamId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(PartitionStreamId);
          }
          if (CommittedOffset != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(CommittedOffset);
          }
          if (EndOffset != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(EndOffset);
          }
          if (WrittenAtWatermarkMs != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(WrittenAtWatermarkMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PartitionStreamId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(PartitionStreamId);
          }
          if (CommittedOffset != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommittedOffset);
          }
          if (EndOffset != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndOffset);
          }
          if (WrittenAtWatermarkMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(WrittenAtWatermarkMs);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PartitionStreamStatusResponse other) {
          if (other == null) {
            return;
          }
          if (other.PartitionStreamId != 0L) {
            PartitionStreamId = other.PartitionStreamId;
          }
          if (other.CommittedOffset != 0L) {
            CommittedOffset = other.CommittedOffset;
          }
          if (other.EndOffset != 0L) {
            EndOffset = other.EndOffset;
          }
          if (other.WrittenAtWatermarkMs != 0L) {
            WrittenAtWatermarkMs = other.WrittenAtWatermarkMs;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PartitionStreamId = input.ReadInt64();
                break;
              }
              case 16: {
                CommittedOffset = input.ReadInt64();
                break;
              }
              case 24: {
                EndOffset = input.ReadInt64();
                break;
              }
              case 32: {
                WrittenAtWatermarkMs = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                PartitionStreamId = input.ReadInt64();
                break;
              }
              case 16: {
                CommittedOffset = input.ReadInt64();
                break;
              }
              case 24: {
                EndOffset = input.ReadInt64();
                break;
              }
              case 32: {
                WrittenAtWatermarkMs = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class StopReadResponse : pb::IMessage<StopReadResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<StopReadResponse> _parser = new pb::MessageParser<StopReadResponse>(() => new StopReadResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StopReadResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StopReadResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StopReadResponse(StopReadResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StopReadResponse Clone() {
          return new StopReadResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as StopReadResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StopReadResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StopReadResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class ResumeReadResponse : pb::IMessage<ResumeReadResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ResumeReadResponse> _parser = new pb::MessageParser<ResumeReadResponse>(() => new ResumeReadResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ResumeReadResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResumeReadResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResumeReadResponse(ResumeReadResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResumeReadResponse Clone() {
          return new ResumeReadResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ResumeReadResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ResumeReadResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ResumeReadResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class AddTopicResponse : pb::IMessage<AddTopicResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AddTopicResponse> _parser = new pb::MessageParser<AddTopicResponse>(() => new AddTopicResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AddTopicResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AddTopicResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AddTopicResponse(AddTopicResponse other) : this() {
          blockFormatVersion_ = other.blockFormatVersion_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AddTopicResponse Clone() {
          return new AddTopicResponse(this);
        }

        /// <summary>Field number for the "block_format_version" field.</summary>
        public const int BlockFormatVersionFieldNumber = 1;
        private long blockFormatVersion_;
        /// <summary>
        /// Block format version of data client will receive from the topic.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long BlockFormatVersion {
          get { return blockFormatVersion_; }
          set {
            blockFormatVersion_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AddTopicResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AddTopicResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (BlockFormatVersion != other.BlockFormatVersion) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (BlockFormatVersion != 0L) hash ^= BlockFormatVersion.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (BlockFormatVersion != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(BlockFormatVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (BlockFormatVersion != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(BlockFormatVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (BlockFormatVersion != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlockFormatVersion);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AddTopicResponse other) {
          if (other == null) {
            return;
          }
          if (other.BlockFormatVersion != 0L) {
            BlockFormatVersion = other.BlockFormatVersion;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                BlockFormatVersion = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                BlockFormatVersion = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class RemoveTopicResponse : pb::IMessage<RemoveTopicResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RemoveTopicResponse> _parser = new pb::MessageParser<RemoveTopicResponse>(() => new RemoveTopicResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RemoveTopicResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.StreamingReadServerMessageNew.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RemoveTopicResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RemoveTopicResponse(RemoveTopicResponse other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RemoveTopicResponse Clone() {
          return new RemoveTopicResponse(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RemoveTopicResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RemoveTopicResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RemoveTopicResponse other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  ///*
  /// Message that represens concrete partition partition stream.
  /// </summary>
  public sealed partial class PartitionStream : pb::IMessage<PartitionStream>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PartitionStream> _parser = new pb::MessageParser<PartitionStream>(() => new PartitionStream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PartitionStream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionStream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionStream(PartitionStream other) : this() {
      topic_ = other.topic_;
      cluster_ = other.cluster_;
      partitionId_ = other.partitionId_;
      partitionGroupId_ = other.partitionGroupId_;
      partitionStreamId_ = other.partitionStreamId_;
      connectionMeta_ = other.connectionMeta_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionStream Clone() {
      return new PartitionStream(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private string topic_ = "";
    /// <summary>
    /// Topic path of partition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster" field.</summary>
    public const int ClusterFieldNumber = 2;
    private string cluster_ = "";
    /// <summary>
    /// Cluster of topic instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cluster {
      get { return cluster_; }
      set {
        cluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partition_id" field.</summary>
    public const int PartitionIdFieldNumber = 3;
    private long partitionId_;
    /// <summary>
    /// Partition identifier. Explicit only for debug purposes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PartitionId {
      get { return partitionId_; }
      set {
        partitionId_ = value;
      }
    }

    /// <summary>Field number for the "partition_group_id" field.</summary>
    public const int PartitionGroupIdFieldNumber = 4;
    private long partitionGroupId_;
    /// <summary>
    /// Partition group identifier. Explicit only for debug purposes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PartitionGroupId {
      get { return partitionGroupId_; }
      set {
        partitionGroupId_ = value;
      }
    }

    /// <summary>Field number for the "partition_stream_id" field.</summary>
    public const int PartitionStreamIdFieldNumber = 6;
    private long partitionStreamId_;
    /// <summary>
    /// Identitifier of partition stream. Unique inside one RPC call.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PartitionStreamId {
      get { return partitionStreamId_; }
      set {
        partitionStreamId_ = value;
      }
    }

    /// <summary>Field number for the "connection_meta" field.</summary>
    public const int ConnectionMetaFieldNumber = 7;
    private pb::ByteString connectionMeta_ = pb::ByteString.Empty;
    /// <summary>
    /// Opaque blob. Provide it with partition stream in state for session reconnects.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ConnectionMeta {
      get { return connectionMeta_; }
      set {
        connectionMeta_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PartitionStream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PartitionStream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Topic != other.Topic) return false;
      if (Cluster != other.Cluster) return false;
      if (PartitionId != other.PartitionId) return false;
      if (PartitionGroupId != other.PartitionGroupId) return false;
      if (PartitionStreamId != other.PartitionStreamId) return false;
      if (ConnectionMeta != other.ConnectionMeta) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (Cluster.Length != 0) hash ^= Cluster.GetHashCode();
      if (PartitionId != 0L) hash ^= PartitionId.GetHashCode();
      if (PartitionGroupId != 0L) hash ^= PartitionGroupId.GetHashCode();
      if (PartitionStreamId != 0L) hash ^= PartitionStreamId.GetHashCode();
      if (ConnectionMeta.Length != 0) hash ^= ConnectionMeta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Topic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Topic);
      }
      if (Cluster.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cluster);
      }
      if (PartitionId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PartitionId);
      }
      if (PartitionGroupId != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(PartitionGroupId);
      }
      if (PartitionStreamId != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(PartitionStreamId);
      }
      if (ConnectionMeta.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(ConnectionMeta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Topic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Topic);
      }
      if (Cluster.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cluster);
      }
      if (PartitionId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PartitionId);
      }
      if (PartitionGroupId != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(PartitionGroupId);
      }
      if (PartitionStreamId != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(PartitionStreamId);
      }
      if (ConnectionMeta.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(ConnectionMeta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (Cluster.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cluster);
      }
      if (PartitionId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PartitionId);
      }
      if (PartitionGroupId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PartitionGroupId);
      }
      if (PartitionStreamId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PartitionStreamId);
      }
      if (ConnectionMeta.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ConnectionMeta);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PartitionStream other) {
      if (other == null) {
        return;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      if (other.Cluster.Length != 0) {
        Cluster = other.Cluster;
      }
      if (other.PartitionId != 0L) {
        PartitionId = other.PartitionId;
      }
      if (other.PartitionGroupId != 0L) {
        PartitionGroupId = other.PartitionGroupId;
      }
      if (other.PartitionStreamId != 0L) {
        PartitionStreamId = other.PartitionStreamId;
      }
      if (other.ConnectionMeta.Length != 0) {
        ConnectionMeta = other.ConnectionMeta;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Topic = input.ReadString();
            break;
          }
          case 18: {
            Cluster = input.ReadString();
            break;
          }
          case 24: {
            PartitionId = input.ReadInt64();
            break;
          }
          case 32: {
            PartitionGroupId = input.ReadInt64();
            break;
          }
          case 48: {
            PartitionStreamId = input.ReadInt64();
            break;
          }
          case 58: {
            ConnectionMeta = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Topic = input.ReadString();
            break;
          }
          case 18: {
            Cluster = input.ReadString();
            break;
          }
          case 24: {
            PartitionId = input.ReadInt64();
            break;
          }
          case 32: {
            PartitionGroupId = input.ReadInt64();
            break;
          }
          case 48: {
            PartitionStreamId = input.ReadInt64();
            break;
          }
          case 58: {
            ConnectionMeta = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MigrationStreamingReadClientMessage : pb::IMessage<MigrationStreamingReadClientMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MigrationStreamingReadClientMessage> _parser = new pb::MessageParser<MigrationStreamingReadClientMessage>(() => new MigrationStreamingReadClientMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MigrationStreamingReadClientMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MigrationStreamingReadClientMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MigrationStreamingReadClientMessage(MigrationStreamingReadClientMessage other) : this() {
      token_ = other.token_;
      switch (other.RequestCase) {
        case RequestOneofCase.InitRequest:
          InitRequest = other.InitRequest.Clone();
          break;
        case RequestOneofCase.Read:
          Read = other.Read.Clone();
          break;
        case RequestOneofCase.StartRead:
          StartRead = other.StartRead.Clone();
          break;
        case RequestOneofCase.Commit:
          Commit = other.Commit.Clone();
          break;
        case RequestOneofCase.Released:
          Released = other.Released.Clone();
          break;
        case RequestOneofCase.Status:
          Status = other.Status.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MigrationStreamingReadClientMessage Clone() {
      return new MigrationStreamingReadClientMessage(this);
    }

    /// <summary>Field number for the "init_request" field.</summary>
    public const int InitRequestFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest InitRequest {
      get { return requestCase_ == RequestOneofCase.InitRequest ? (global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.InitRequest;
      }
    }

    /// <summary>Field number for the "read" field.</summary>
    public const int ReadFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Read Read {
      get { return requestCase_ == RequestOneofCase.Read ? (global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Read) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Read;
      }
    }

    /// <summary>Field number for the "start_read" field.</summary>
    public const int StartReadFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.StartRead StartRead {
      get { return requestCase_ == RequestOneofCase.StartRead ? (global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.StartRead) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.StartRead;
      }
    }

    /// <summary>Field number for the "commit" field.</summary>
    public const int CommitFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Commit Commit {
      get { return requestCase_ == RequestOneofCase.Commit ? (global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Commit) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Commit;
      }
    }

    /// <summary>Field number for the "released" field.</summary>
    public const int ReleasedFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Released Released {
      get { return requestCase_ == RequestOneofCase.Released ? (global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Released) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Released;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Status Status {
      get { return requestCase_ == RequestOneofCase.Status ? (global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Status) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Status;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 20;
    private pb::ByteString token_ = pb::ByteString.Empty;
    /// <summary>
    /// User credentials if update is needed or empty string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object request_;
    /// <summary>Enum of possible cases for the "request" oneof.</summary>
    public enum RequestOneofCase {
      None = 0,
      InitRequest = 1,
      Read = 2,
      StartRead = 3,
      Commit = 4,
      Released = 5,
      Status = 6,
    }
    private RequestOneofCase requestCase_ = RequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestOneofCase RequestCase {
      get { return requestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequest() {
      requestCase_ = RequestOneofCase.None;
      request_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MigrationStreamingReadClientMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MigrationStreamingReadClientMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InitRequest, other.InitRequest)) return false;
      if (!object.Equals(Read, other.Read)) return false;
      if (!object.Equals(StartRead, other.StartRead)) return false;
      if (!object.Equals(Commit, other.Commit)) return false;
      if (!object.Equals(Released, other.Released)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if (Token != other.Token) return false;
      if (RequestCase != other.RequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (requestCase_ == RequestOneofCase.InitRequest) hash ^= InitRequest.GetHashCode();
      if (requestCase_ == RequestOneofCase.Read) hash ^= Read.GetHashCode();
      if (requestCase_ == RequestOneofCase.StartRead) hash ^= StartRead.GetHashCode();
      if (requestCase_ == RequestOneofCase.Commit) hash ^= Commit.GetHashCode();
      if (requestCase_ == RequestOneofCase.Released) hash ^= Released.GetHashCode();
      if (requestCase_ == RequestOneofCase.Status) hash ^= Status.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      hash ^= (int) requestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (requestCase_ == RequestOneofCase.InitRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(InitRequest);
      }
      if (requestCase_ == RequestOneofCase.Read) {
        output.WriteRawTag(18);
        output.WriteMessage(Read);
      }
      if (requestCase_ == RequestOneofCase.StartRead) {
        output.WriteRawTag(26);
        output.WriteMessage(StartRead);
      }
      if (requestCase_ == RequestOneofCase.Commit) {
        output.WriteRawTag(34);
        output.WriteMessage(Commit);
      }
      if (requestCase_ == RequestOneofCase.Released) {
        output.WriteRawTag(42);
        output.WriteMessage(Released);
      }
      if (requestCase_ == RequestOneofCase.Status) {
        output.WriteRawTag(50);
        output.WriteMessage(Status);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteBytes(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (requestCase_ == RequestOneofCase.InitRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(InitRequest);
      }
      if (requestCase_ == RequestOneofCase.Read) {
        output.WriteRawTag(18);
        output.WriteMessage(Read);
      }
      if (requestCase_ == RequestOneofCase.StartRead) {
        output.WriteRawTag(26);
        output.WriteMessage(StartRead);
      }
      if (requestCase_ == RequestOneofCase.Commit) {
        output.WriteRawTag(34);
        output.WriteMessage(Commit);
      }
      if (requestCase_ == RequestOneofCase.Released) {
        output.WriteRawTag(42);
        output.WriteMessage(Released);
      }
      if (requestCase_ == RequestOneofCase.Status) {
        output.WriteRawTag(50);
        output.WriteMessage(Status);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteBytes(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (requestCase_ == RequestOneofCase.InitRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InitRequest);
      }
      if (requestCase_ == RequestOneofCase.Read) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Read);
      }
      if (requestCase_ == RequestOneofCase.StartRead) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartRead);
      }
      if (requestCase_ == RequestOneofCase.Commit) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Commit);
      }
      if (requestCase_ == RequestOneofCase.Released) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Released);
      }
      if (requestCase_ == RequestOneofCase.Status) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (Token.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MigrationStreamingReadClientMessage other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      switch (other.RequestCase) {
        case RequestOneofCase.InitRequest:
          if (InitRequest == null) {
            InitRequest = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest();
          }
          InitRequest.MergeFrom(other.InitRequest);
          break;
        case RequestOneofCase.Read:
          if (Read == null) {
            Read = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Read();
          }
          Read.MergeFrom(other.Read);
          break;
        case RequestOneofCase.StartRead:
          if (StartRead == null) {
            StartRead = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.StartRead();
          }
          StartRead.MergeFrom(other.StartRead);
          break;
        case RequestOneofCase.Commit:
          if (Commit == null) {
            Commit = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Commit();
          }
          Commit.MergeFrom(other.Commit);
          break;
        case RequestOneofCase.Released:
          if (Released == null) {
            Released = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Released();
          }
          Released.MergeFrom(other.Released);
          break;
        case RequestOneofCase.Status:
          if (Status == null) {
            Status = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Status();
          }
          Status.MergeFrom(other.Status);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest();
            if (requestCase_ == RequestOneofCase.InitRequest) {
              subBuilder.MergeFrom(InitRequest);
            }
            input.ReadMessage(subBuilder);
            InitRequest = subBuilder;
            break;
          }
          case 18: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Read subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Read();
            if (requestCase_ == RequestOneofCase.Read) {
              subBuilder.MergeFrom(Read);
            }
            input.ReadMessage(subBuilder);
            Read = subBuilder;
            break;
          }
          case 26: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.StartRead subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.StartRead();
            if (requestCase_ == RequestOneofCase.StartRead) {
              subBuilder.MergeFrom(StartRead);
            }
            input.ReadMessage(subBuilder);
            StartRead = subBuilder;
            break;
          }
          case 34: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Commit subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Commit();
            if (requestCase_ == RequestOneofCase.Commit) {
              subBuilder.MergeFrom(Commit);
            }
            input.ReadMessage(subBuilder);
            Commit = subBuilder;
            break;
          }
          case 42: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Released subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Released();
            if (requestCase_ == RequestOneofCase.Released) {
              subBuilder.MergeFrom(Released);
            }
            input.ReadMessage(subBuilder);
            Released = subBuilder;
            break;
          }
          case 50: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Status subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Status();
            if (requestCase_ == RequestOneofCase.Status) {
              subBuilder.MergeFrom(Status);
            }
            input.ReadMessage(subBuilder);
            Status = subBuilder;
            break;
          }
          case 162: {
            Token = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest();
            if (requestCase_ == RequestOneofCase.InitRequest) {
              subBuilder.MergeFrom(InitRequest);
            }
            input.ReadMessage(subBuilder);
            InitRequest = subBuilder;
            break;
          }
          case 18: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Read subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Read();
            if (requestCase_ == RequestOneofCase.Read) {
              subBuilder.MergeFrom(Read);
            }
            input.ReadMessage(subBuilder);
            Read = subBuilder;
            break;
          }
          case 26: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.StartRead subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.StartRead();
            if (requestCase_ == RequestOneofCase.StartRead) {
              subBuilder.MergeFrom(StartRead);
            }
            input.ReadMessage(subBuilder);
            StartRead = subBuilder;
            break;
          }
          case 34: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Commit subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Commit();
            if (requestCase_ == RequestOneofCase.Commit) {
              subBuilder.MergeFrom(Commit);
            }
            input.ReadMessage(subBuilder);
            Commit = subBuilder;
            break;
          }
          case 42: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Released subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Released();
            if (requestCase_ == RequestOneofCase.Released) {
              subBuilder.MergeFrom(Released);
            }
            input.ReadMessage(subBuilder);
            Released = subBuilder;
            break;
          }
          case 50: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Status subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.Status();
            if (requestCase_ == RequestOneofCase.Status) {
              subBuilder.MergeFrom(Status);
            }
            input.ReadMessage(subBuilder);
            Status = subBuilder;
            break;
          }
          case 162: {
            Token = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MigrationStreamingReadClientMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class TopicReadSettings : pb::IMessage<TopicReadSettings>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TopicReadSettings> _parser = new pb::MessageParser<TopicReadSettings>(() => new TopicReadSettings());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TopicReadSettings> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TopicReadSettings() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TopicReadSettings(TopicReadSettings other) : this() {
          topic_ = other.topic_;
          partitionGroupIds_ = other.partitionGroupIds_.Clone();
          startFromWrittenAtMs_ = other.startFromWrittenAtMs_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TopicReadSettings Clone() {
          return new TopicReadSettings(this);
        }

        /// <summary>Field number for the "topic" field.</summary>
        public const int TopicFieldNumber = 1;
        private string topic_ = "";
        /// <summary>
        /// Topic path.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Topic {
          get { return topic_; }
          set {
            topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "partition_group_ids" field.</summary>
        public const int PartitionGroupIdsFieldNumber = 2;
        private static readonly pb::FieldCodec<long> _repeated_partitionGroupIds_codec
            = pb::FieldCodec.ForInt64(18);
        private readonly pbc::RepeatedField<long> partitionGroupIds_ = new pbc::RepeatedField<long>();
        /// <summary>
        /// Partition groups that will be read by this session.
        /// If list is empty - then session will read all partition groups.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> PartitionGroupIds {
          get { return partitionGroupIds_; }
        }

        /// <summary>Field number for the "start_from_written_at_ms" field.</summary>
        public const int StartFromWrittenAtMsFieldNumber = 3;
        private long startFromWrittenAtMs_;
        /// <summary>
        /// Read data only after this timestamp from this topic.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long StartFromWrittenAtMs {
          get { return startFromWrittenAtMs_; }
          set {
            startFromWrittenAtMs_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TopicReadSettings);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TopicReadSettings other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Topic != other.Topic) return false;
          if(!partitionGroupIds_.Equals(other.partitionGroupIds_)) return false;
          if (StartFromWrittenAtMs != other.StartFromWrittenAtMs) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Topic.Length != 0) hash ^= Topic.GetHashCode();
          hash ^= partitionGroupIds_.GetHashCode();
          if (StartFromWrittenAtMs != 0L) hash ^= StartFromWrittenAtMs.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Topic.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Topic);
          }
          partitionGroupIds_.WriteTo(output, _repeated_partitionGroupIds_codec);
          if (StartFromWrittenAtMs != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(StartFromWrittenAtMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Topic.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Topic);
          }
          partitionGroupIds_.WriteTo(ref output, _repeated_partitionGroupIds_codec);
          if (StartFromWrittenAtMs != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(StartFromWrittenAtMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Topic.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
          }
          size += partitionGroupIds_.CalculateSize(_repeated_partitionGroupIds_codec);
          if (StartFromWrittenAtMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartFromWrittenAtMs);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TopicReadSettings other) {
          if (other == null) {
            return;
          }
          if (other.Topic.Length != 0) {
            Topic = other.Topic;
          }
          partitionGroupIds_.Add(other.partitionGroupIds_);
          if (other.StartFromWrittenAtMs != 0L) {
            StartFromWrittenAtMs = other.StartFromWrittenAtMs;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Topic = input.ReadString();
                break;
              }
              case 18:
              case 16: {
                partitionGroupIds_.AddEntriesFrom(input, _repeated_partitionGroupIds_codec);
                break;
              }
              case 24: {
                StartFromWrittenAtMs = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Topic = input.ReadString();
                break;
              }
              case 18:
              case 16: {
                partitionGroupIds_.AddEntriesFrom(ref input, _repeated_partitionGroupIds_codec);
                break;
              }
              case 24: {
                StartFromWrittenAtMs = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Handshake request.
      /// </summary>
      public sealed partial class InitRequest : pb::IMessage<InitRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InitRequest> _parser = new pb::MessageParser<InitRequest>(() => new InitRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InitRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitRequest(InitRequest other) : this() {
          topicsReadSettings_ = other.topicsReadSettings_.Clone();
          readOnlyOriginal_ = other.readOnlyOriginal_;
          consumer_ = other.consumer_;
          maxLagDurationMs_ = other.maxLagDurationMs_;
          startFromWrittenAtMs_ = other.startFromWrittenAtMs_;
          maxSupportedBlockFormatVersion_ = other.maxSupportedBlockFormatVersion_;
          maxMetaCacheSize_ = other.maxMetaCacheSize_;
          sessionId_ = other.sessionId_;
          connectionAttempt_ = other.connectionAttempt_;
          state_ = other.state_ != null ? other.state_.Clone() : null;
          idleTimeoutMs_ = other.idleTimeoutMs_;
          readParams_ = other.readParams_ != null ? other.readParams_.Clone() : null;
          rangesMode_ = other.rangesMode_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitRequest Clone() {
          return new InitRequest(this);
        }

        /// <summary>Field number for the "topics_read_settings" field.</summary>
        public const int TopicsReadSettingsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.TopicReadSettings> _repeated_topicsReadSettings_codec
            = pb::FieldCodec.ForMessage(10, global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.TopicReadSettings.Parser);
        private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.TopicReadSettings> topicsReadSettings_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.TopicReadSettings>();
        /// <summary>
        /// Message that describes topic to read.
        /// Topics that will be read by this session.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.TopicReadSettings> TopicsReadSettings {
          get { return topicsReadSettings_; }
        }

        /// <summary>Field number for the "read_only_original" field.</summary>
        public const int ReadOnlyOriginalFieldNumber = 2;
        private bool readOnlyOriginal_;
        /// <summary>
        /// Flag that indicates reading only of original topics in cluster or all including mirrored.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ReadOnlyOriginal {
          get { return readOnlyOriginal_; }
          set {
            readOnlyOriginal_ = value;
          }
        }

        /// <summary>Field number for the "consumer" field.</summary>
        public const int ConsumerFieldNumber = 3;
        private string consumer_ = "";
        /// <summary>
        /// Path of consumer that is used for reading by this session.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Consumer {
          get { return consumer_; }
          set {
            consumer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "max_lag_duration_ms" field.</summary>
        public const int MaxLagDurationMsFieldNumber = 4;
        private long maxLagDurationMs_;
        /// <summary>
        /// Skip all messages that has write timestamp smaller than now - max_time_lag_ms.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MaxLagDurationMs {
          get { return maxLagDurationMs_; }
          set {
            maxLagDurationMs_ = value;
          }
        }

        /// <summary>Field number for the "start_from_written_at_ms" field.</summary>
        public const int StartFromWrittenAtMsFieldNumber = 5;
        private long startFromWrittenAtMs_;
        /// <summary>
        /// Read data only after this timestamp from all topics.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long StartFromWrittenAtMs {
          get { return startFromWrittenAtMs_; }
          set {
            startFromWrittenAtMs_ = value;
          }
        }

        /// <summary>Field number for the "max_supported_block_format_version" field.</summary>
        public const int MaxSupportedBlockFormatVersionFieldNumber = 6;
        private long maxSupportedBlockFormatVersion_;
        /// <summary>
        /// Maximum block format version supported by the client. Server will asses this parameter and return actual data blocks version in
        /// StreamingReadServerMessage.InitResponse.block_format_version_by_topic (and StreamingReadServerMessage.AddTopicResponse.block_format_version)
        /// or error if client will not be able to read data.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MaxSupportedBlockFormatVersion {
          get { return maxSupportedBlockFormatVersion_; }
          set {
            maxSupportedBlockFormatVersion_ = value;
          }
        }

        /// <summary>Field number for the "max_meta_cache_size" field.</summary>
        public const int MaxMetaCacheSizeFieldNumber = 10;
        private long maxMetaCacheSize_;
        /// <summary>
        /// Maximal size of client cache for message_group_id, ip and meta, per partition.
        /// There is separate caches for each partition partition streams.
        /// There is separate caches for message group identifiers, ip and meta inside one partition partition stream.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MaxMetaCacheSize {
          get { return maxMetaCacheSize_; }
          set {
            maxMetaCacheSize_ = value;
          }
        }

        /// <summary>Field number for the "session_id" field.</summary>
        public const int SessionIdFieldNumber = 100;
        private string sessionId_ = "";
        /// <summary>
        /// Session identifier for retries. Must be the same as session_id from Inited server response. If this is first connect, not retry - do not use this field.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SessionId {
          get { return sessionId_; }
          set {
            sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "connection_attempt" field.</summary>
        public const int ConnectionAttemptFieldNumber = 101;
        private long connectionAttempt_;
        /// <summary>
        /// 0 for first init message and incremental value for connect retries.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ConnectionAttempt {
          get { return connectionAttempt_; }
          set {
            connectionAttempt_ = value;
          }
        }

        /// <summary>Field number for the "state" field.</summary>
        public const int StateFieldNumber = 102;
        private global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State state_;
        /// <summary>
        /// Formed state for retries. If not retry - do not use this field.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State State {
          get { return state_; }
          set {
            state_ = value;
          }
        }

        /// <summary>Field number for the "idle_timeout_ms" field.</summary>
        public const int IdleTimeoutMsFieldNumber = 200;
        private long idleTimeoutMs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long IdleTimeoutMs {
          get { return idleTimeoutMs_; }
          set {
            idleTimeoutMs_ = value;
          }
        }

        /// <summary>Field number for the "read_params" field.</summary>
        public const int ReadParamsFieldNumber = 42;
        private global::Ydb.PersQueue.V1.ReadParams readParams_;
        /// <summary>
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// TODO: remove after refactoring
        /// Single read request params.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.PersQueue.V1.ReadParams ReadParams {
          get { return readParams_; }
          set {
            readParams_ = value;
          }
        }

        /// <summary>Field number for the "ranges_mode" field.</summary>
        public const int RangesModeFieldNumber = 442;
        private bool rangesMode_;
        /// <summary>
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool RangesMode {
          get { return rangesMode_; }
          set {
            rangesMode_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InitRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InitRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!topicsReadSettings_.Equals(other.topicsReadSettings_)) return false;
          if (ReadOnlyOriginal != other.ReadOnlyOriginal) return false;
          if (Consumer != other.Consumer) return false;
          if (MaxLagDurationMs != other.MaxLagDurationMs) return false;
          if (StartFromWrittenAtMs != other.StartFromWrittenAtMs) return false;
          if (MaxSupportedBlockFormatVersion != other.MaxSupportedBlockFormatVersion) return false;
          if (MaxMetaCacheSize != other.MaxMetaCacheSize) return false;
          if (SessionId != other.SessionId) return false;
          if (ConnectionAttempt != other.ConnectionAttempt) return false;
          if (!object.Equals(State, other.State)) return false;
          if (IdleTimeoutMs != other.IdleTimeoutMs) return false;
          if (!object.Equals(ReadParams, other.ReadParams)) return false;
          if (RangesMode != other.RangesMode) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= topicsReadSettings_.GetHashCode();
          if (ReadOnlyOriginal != false) hash ^= ReadOnlyOriginal.GetHashCode();
          if (Consumer.Length != 0) hash ^= Consumer.GetHashCode();
          if (MaxLagDurationMs != 0L) hash ^= MaxLagDurationMs.GetHashCode();
          if (StartFromWrittenAtMs != 0L) hash ^= StartFromWrittenAtMs.GetHashCode();
          if (MaxSupportedBlockFormatVersion != 0L) hash ^= MaxSupportedBlockFormatVersion.GetHashCode();
          if (MaxMetaCacheSize != 0L) hash ^= MaxMetaCacheSize.GetHashCode();
          if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
          if (ConnectionAttempt != 0L) hash ^= ConnectionAttempt.GetHashCode();
          if (state_ != null) hash ^= State.GetHashCode();
          if (IdleTimeoutMs != 0L) hash ^= IdleTimeoutMs.GetHashCode();
          if (readParams_ != null) hash ^= ReadParams.GetHashCode();
          if (RangesMode != false) hash ^= RangesMode.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          topicsReadSettings_.WriteTo(output, _repeated_topicsReadSettings_codec);
          if (ReadOnlyOriginal != false) {
            output.WriteRawTag(16);
            output.WriteBool(ReadOnlyOriginal);
          }
          if (Consumer.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Consumer);
          }
          if (MaxLagDurationMs != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(MaxLagDurationMs);
          }
          if (StartFromWrittenAtMs != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(StartFromWrittenAtMs);
          }
          if (MaxSupportedBlockFormatVersion != 0L) {
            output.WriteRawTag(48);
            output.WriteInt64(MaxSupportedBlockFormatVersion);
          }
          if (MaxMetaCacheSize != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(MaxMetaCacheSize);
          }
          if (readParams_ != null) {
            output.WriteRawTag(210, 2);
            output.WriteMessage(ReadParams);
          }
          if (SessionId.Length != 0) {
            output.WriteRawTag(162, 6);
            output.WriteString(SessionId);
          }
          if (ConnectionAttempt != 0L) {
            output.WriteRawTag(168, 6);
            output.WriteInt64(ConnectionAttempt);
          }
          if (state_ != null) {
            output.WriteRawTag(178, 6);
            output.WriteMessage(State);
          }
          if (IdleTimeoutMs != 0L) {
            output.WriteRawTag(192, 12);
            output.WriteInt64(IdleTimeoutMs);
          }
          if (RangesMode != false) {
            output.WriteRawTag(208, 27);
            output.WriteBool(RangesMode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          topicsReadSettings_.WriteTo(ref output, _repeated_topicsReadSettings_codec);
          if (ReadOnlyOriginal != false) {
            output.WriteRawTag(16);
            output.WriteBool(ReadOnlyOriginal);
          }
          if (Consumer.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Consumer);
          }
          if (MaxLagDurationMs != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(MaxLagDurationMs);
          }
          if (StartFromWrittenAtMs != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(StartFromWrittenAtMs);
          }
          if (MaxSupportedBlockFormatVersion != 0L) {
            output.WriteRawTag(48);
            output.WriteInt64(MaxSupportedBlockFormatVersion);
          }
          if (MaxMetaCacheSize != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(MaxMetaCacheSize);
          }
          if (readParams_ != null) {
            output.WriteRawTag(210, 2);
            output.WriteMessage(ReadParams);
          }
          if (SessionId.Length != 0) {
            output.WriteRawTag(162, 6);
            output.WriteString(SessionId);
          }
          if (ConnectionAttempt != 0L) {
            output.WriteRawTag(168, 6);
            output.WriteInt64(ConnectionAttempt);
          }
          if (state_ != null) {
            output.WriteRawTag(178, 6);
            output.WriteMessage(State);
          }
          if (IdleTimeoutMs != 0L) {
            output.WriteRawTag(192, 12);
            output.WriteInt64(IdleTimeoutMs);
          }
          if (RangesMode != false) {
            output.WriteRawTag(208, 27);
            output.WriteBool(RangesMode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += topicsReadSettings_.CalculateSize(_repeated_topicsReadSettings_codec);
          if (ReadOnlyOriginal != false) {
            size += 1 + 1;
          }
          if (Consumer.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Consumer);
          }
          if (MaxLagDurationMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxLagDurationMs);
          }
          if (StartFromWrittenAtMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartFromWrittenAtMs);
          }
          if (MaxSupportedBlockFormatVersion != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxSupportedBlockFormatVersion);
          }
          if (MaxMetaCacheSize != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxMetaCacheSize);
          }
          if (SessionId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(SessionId);
          }
          if (ConnectionAttempt != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(ConnectionAttempt);
          }
          if (state_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(State);
          }
          if (IdleTimeoutMs != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(IdleTimeoutMs);
          }
          if (readParams_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReadParams);
          }
          if (RangesMode != false) {
            size += 2 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InitRequest other) {
          if (other == null) {
            return;
          }
          topicsReadSettings_.Add(other.topicsReadSettings_);
          if (other.ReadOnlyOriginal != false) {
            ReadOnlyOriginal = other.ReadOnlyOriginal;
          }
          if (other.Consumer.Length != 0) {
            Consumer = other.Consumer;
          }
          if (other.MaxLagDurationMs != 0L) {
            MaxLagDurationMs = other.MaxLagDurationMs;
          }
          if (other.StartFromWrittenAtMs != 0L) {
            StartFromWrittenAtMs = other.StartFromWrittenAtMs;
          }
          if (other.MaxSupportedBlockFormatVersion != 0L) {
            MaxSupportedBlockFormatVersion = other.MaxSupportedBlockFormatVersion;
          }
          if (other.MaxMetaCacheSize != 0L) {
            MaxMetaCacheSize = other.MaxMetaCacheSize;
          }
          if (other.SessionId.Length != 0) {
            SessionId = other.SessionId;
          }
          if (other.ConnectionAttempt != 0L) {
            ConnectionAttempt = other.ConnectionAttempt;
          }
          if (other.state_ != null) {
            if (state_ == null) {
              State = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State();
            }
            State.MergeFrom(other.State);
          }
          if (other.IdleTimeoutMs != 0L) {
            IdleTimeoutMs = other.IdleTimeoutMs;
          }
          if (other.readParams_ != null) {
            if (readParams_ == null) {
              ReadParams = new global::Ydb.PersQueue.V1.ReadParams();
            }
            ReadParams.MergeFrom(other.ReadParams);
          }
          if (other.RangesMode != false) {
            RangesMode = other.RangesMode;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                topicsReadSettings_.AddEntriesFrom(input, _repeated_topicsReadSettings_codec);
                break;
              }
              case 16: {
                ReadOnlyOriginal = input.ReadBool();
                break;
              }
              case 26: {
                Consumer = input.ReadString();
                break;
              }
              case 32: {
                MaxLagDurationMs = input.ReadInt64();
                break;
              }
              case 40: {
                StartFromWrittenAtMs = input.ReadInt64();
                break;
              }
              case 48: {
                MaxSupportedBlockFormatVersion = input.ReadInt64();
                break;
              }
              case 80: {
                MaxMetaCacheSize = input.ReadInt64();
                break;
              }
              case 338: {
                if (readParams_ == null) {
                  ReadParams = new global::Ydb.PersQueue.V1.ReadParams();
                }
                input.ReadMessage(ReadParams);
                break;
              }
              case 802: {
                SessionId = input.ReadString();
                break;
              }
              case 808: {
                ConnectionAttempt = input.ReadInt64();
                break;
              }
              case 818: {
                if (state_ == null) {
                  State = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State();
                }
                input.ReadMessage(State);
                break;
              }
              case 1600: {
                IdleTimeoutMs = input.ReadInt64();
                break;
              }
              case 3536: {
                RangesMode = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                topicsReadSettings_.AddEntriesFrom(ref input, _repeated_topicsReadSettings_codec);
                break;
              }
              case 16: {
                ReadOnlyOriginal = input.ReadBool();
                break;
              }
              case 26: {
                Consumer = input.ReadString();
                break;
              }
              case 32: {
                MaxLagDurationMs = input.ReadInt64();
                break;
              }
              case 40: {
                StartFromWrittenAtMs = input.ReadInt64();
                break;
              }
              case 48: {
                MaxSupportedBlockFormatVersion = input.ReadInt64();
                break;
              }
              case 80: {
                MaxMetaCacheSize = input.ReadInt64();
                break;
              }
              case 338: {
                if (readParams_ == null) {
                  ReadParams = new global::Ydb.PersQueue.V1.ReadParams();
                }
                input.ReadMessage(ReadParams);
                break;
              }
              case 802: {
                SessionId = input.ReadString();
                break;
              }
              case 808: {
                ConnectionAttempt = input.ReadInt64();
                break;
              }
              case 818: {
                if (state_ == null) {
                  State = new global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State();
                }
                input.ReadMessage(State);
                break;
              }
              case 1600: {
                IdleTimeoutMs = input.ReadInt64();
                break;
              }
              case 3536: {
                RangesMode = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the InitRequest message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// State of client read session. Could be provided to server for retries.
          /// </summary>
          public sealed partial class State : pb::IMessage<State>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<State> _parser = new pb::MessageParser<State>(() => new State());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<State> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public State() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public State(State other) : this() {
              partitionStreamsStates_ = other.partitionStreamsStates_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public State Clone() {
              return new State(this);
            }

            /// <summary>Field number for the "partition_streams_states" field.</summary>
            public const int PartitionStreamsStatesFieldNumber = 1;
            private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Types.PartitionStreamState> _repeated_partitionStreamsStates_codec
                = pb::FieldCodec.ForMessage(10, global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Types.PartitionStreamState.Parser);
            private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Types.PartitionStreamState> partitionStreamsStates_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Types.PartitionStreamState>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Types.PartitionStreamState> PartitionStreamsStates {
              get { return partitionStreamsStates_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as State);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(State other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!partitionStreamsStates_.Equals(other.partitionStreamsStates_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= partitionStreamsStates_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              partitionStreamsStates_.WriteTo(output, _repeated_partitionStreamsStates_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              partitionStreamsStates_.WriteTo(ref output, _repeated_partitionStreamsStates_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += partitionStreamsStates_.CalculateSize(_repeated_partitionStreamsStates_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(State other) {
              if (other == null) {
                return;
              }
              partitionStreamsStates_.Add(other.partitionStreamsStates_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    partitionStreamsStates_.AddEntriesFrom(input, _repeated_partitionStreamsStates_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    partitionStreamsStates_.AddEntriesFrom(ref input, _repeated_partitionStreamsStates_codec);
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the State message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public sealed partial class PartitionStreamState : pb::IMessage<PartitionStreamState>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<PartitionStreamState> _parser = new pb::MessageParser<PartitionStreamState>(() => new PartitionStreamState());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<PartitionStreamState> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public PartitionStreamState() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public PartitionStreamState(PartitionStreamState other) : this() {
                  partitionStream_ = other.partitionStream_ != null ? other.partitionStream_.Clone() : null;
                  readOffset_ = other.readOffset_;
                  offsetRanges_ = other.offsetRanges_.Clone();
                  status_ = other.status_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public PartitionStreamState Clone() {
                  return new PartitionStreamState(this);
                }

                /// <summary>Field number for the "partition_stream" field.</summary>
                public const int PartitionStreamFieldNumber = 1;
                private global::Ydb.PersQueue.V1.PartitionStream partitionStream_;
                /// <summary>
                /// Partition partition stream.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::Ydb.PersQueue.V1.PartitionStream PartitionStream {
                  get { return partitionStream_; }
                  set {
                    partitionStream_ = value;
                  }
                }

                /// <summary>Field number for the "read_offset" field.</summary>
                public const int ReadOffsetFieldNumber = 2;
                private long readOffset_;
                /// <summary>
                /// Current read offset if has one. Actual for states DESTROYING, READING and STOPPED.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public long ReadOffset {
                  get { return readOffset_; }
                  set {
                    readOffset_ = value;
                  }
                }

                /// <summary>Field number for the "offset_ranges" field.</summary>
                public const int OffsetRangesFieldNumber = 3;
                private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.OffsetsRange> _repeated_offsetRanges_codec
                    = pb::FieldCodec.ForMessage(26, global::Ydb.PersQueue.V1.OffsetsRange.Parser);
                private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.OffsetsRange> offsetRanges_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.OffsetsRange>();
                /// <summary>
                /// Ranges of committed by client offsets.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<global::Ydb.PersQueue.V1.OffsetsRange> OffsetRanges {
                  get { return offsetRanges_; }
                }

                /// <summary>Field number for the "status" field.</summary>
                public const int StatusFieldNumber = 4;
                private global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status status_ = global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status.Unspecified;
                /// <summary>
                /// Status of partition stream.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status Status {
                  get { return status_; }
                  set {
                    status_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as PartitionStreamState);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(PartitionStreamState other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(PartitionStream, other.PartitionStream)) return false;
                  if (ReadOffset != other.ReadOffset) return false;
                  if(!offsetRanges_.Equals(other.offsetRanges_)) return false;
                  if (Status != other.Status) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (partitionStream_ != null) hash ^= PartitionStream.GetHashCode();
                  if (ReadOffset != 0L) hash ^= ReadOffset.GetHashCode();
                  hash ^= offsetRanges_.GetHashCode();
                  if (Status != global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status.Unspecified) hash ^= Status.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (partitionStream_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(PartitionStream);
                  }
                  if (ReadOffset != 0L) {
                    output.WriteRawTag(16);
                    output.WriteInt64(ReadOffset);
                  }
                  offsetRanges_.WriteTo(output, _repeated_offsetRanges_codec);
                  if (Status != global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status.Unspecified) {
                    output.WriteRawTag(32);
                    output.WriteEnum((int) Status);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (partitionStream_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(PartitionStream);
                  }
                  if (ReadOffset != 0L) {
                    output.WriteRawTag(16);
                    output.WriteInt64(ReadOffset);
                  }
                  offsetRanges_.WriteTo(ref output, _repeated_offsetRanges_codec);
                  if (Status != global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status.Unspecified) {
                    output.WriteRawTag(32);
                    output.WriteEnum((int) Status);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (partitionStream_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartitionStream);
                  }
                  if (ReadOffset != 0L) {
                    size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReadOffset);
                  }
                  size += offsetRanges_.CalculateSize(_repeated_offsetRanges_codec);
                  if (Status != global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status.Unspecified) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(PartitionStreamState other) {
                  if (other == null) {
                    return;
                  }
                  if (other.partitionStream_ != null) {
                    if (partitionStream_ == null) {
                      PartitionStream = new global::Ydb.PersQueue.V1.PartitionStream();
                    }
                    PartitionStream.MergeFrom(other.PartitionStream);
                  }
                  if (other.ReadOffset != 0L) {
                    ReadOffset = other.ReadOffset;
                  }
                  offsetRanges_.Add(other.offsetRanges_);
                  if (other.Status != global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status.Unspecified) {
                    Status = other.Status;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (partitionStream_ == null) {
                          PartitionStream = new global::Ydb.PersQueue.V1.PartitionStream();
                        }
                        input.ReadMessage(PartitionStream);
                        break;
                      }
                      case 16: {
                        ReadOffset = input.ReadInt64();
                        break;
                      }
                      case 26: {
                        offsetRanges_.AddEntriesFrom(input, _repeated_offsetRanges_codec);
                        break;
                      }
                      case 32: {
                        Status = (global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status) input.ReadEnum();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        if (partitionStream_ == null) {
                          PartitionStream = new global::Ydb.PersQueue.V1.PartitionStream();
                        }
                        input.ReadMessage(PartitionStream);
                        break;
                      }
                      case 16: {
                        ReadOffset = input.ReadInt64();
                        break;
                      }
                      case 26: {
                        offsetRanges_.AddEntriesFrom(ref input, _repeated_offsetRanges_codec);
                        break;
                      }
                      case 32: {
                        Status = (global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Types.InitRequest.Types.State.Types.PartitionStreamState.Types.Status) input.ReadEnum();
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the PartitionStreamState message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static partial class Types {
                  public enum Status {
                    /// <summary>
                    /// Not used state.
                    /// </summary>
                    [pbr::OriginalName("STATUS_UNSPECIFIED")] Unspecified = 0,
                    /// <summary>
                    /// Client seen Create message but not yet responded to server with Created message.
                    /// </summary>
                    [pbr::OriginalName("CREATING")] Creating = 1,
                    /// <summary>
                    /// Client seen Destroy message but not yet responded with Released message.
                    /// </summary>
                    [pbr::OriginalName("DESTROYING")] Destroying = 2,
                    /// <summary>
                    /// Client sent Created or ResumeReadRequest message to server for this partition stream.
                    /// </summary>
                    [pbr::OriginalName("READING")] Reading = 3,
                    /// <summary>
                    /// Client sent StopReadRequest for this partition stream.
                    /// </summary>
                    [pbr::OriginalName("STOPPED")] Stopped = 4,
                  }

                }
                #endregion

              }

            }
            #endregion

          }

        }
        #endregion

      }

      /// <summary>
      /// Request of single read.
      /// </summary>
      public sealed partial class Read : pb::IMessage<Read>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Read> _parser = new pb::MessageParser<Read>(() => new Read());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Read> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Read() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Read(Read other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Read Clone() {
          return new Read(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Read);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Read other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Read other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class StartRead : pb::IMessage<StartRead>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<StartRead> _parser = new pb::MessageParser<StartRead>(() => new StartRead());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StartRead> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StartRead() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StartRead(StartRead other) : this() {
          topic_ = other.topic_ != null ? other.topic_.Clone() : null;
          cluster_ = other.cluster_;
          partition_ = other.partition_;
          assignId_ = other.assignId_;
          readOffset_ = other.readOffset_;
          commitOffset_ = other.commitOffset_;
          verifyReadOffset_ = other.verifyReadOffset_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StartRead Clone() {
          return new StartRead(this);
        }

        /// <summary>Field number for the "topic" field.</summary>
        public const int TopicFieldNumber = 1;
        private global::Ydb.PersQueue.V1.Path topic_;
        /// <summary>
        /// Topic path of partition.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.PersQueue.V1.Path Topic {
          get { return topic_; }
          set {
            topic_ = value;
          }
        }

        /// <summary>Field number for the "cluster" field.</summary>
        public const int ClusterFieldNumber = 2;
        private string cluster_ = "";
        /// <summary>
        /// Cluster of topic instance.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Cluster {
          get { return cluster_; }
          set {
            cluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "partition" field.</summary>
        public const int PartitionFieldNumber = 3;
        private ulong partition_;
        /// <summary>
        /// Partition identifier. Explicit only for debug purposes.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Partition {
          get { return partition_; }
          set {
            partition_ = value;
          }
        }

        /// <summary>Field number for the "assign_id" field.</summary>
        public const int AssignIdFieldNumber = 5;
        private ulong assignId_;
        /// <summary>
        /// Assign identifier of Assign request from server. Used for mathing Assign requests from server with StartRead responses from client.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong AssignId {
          get { return assignId_; }
          set {
            assignId_ = value;
          }
        }

        /// <summary>Field number for the "read_offset" field.</summary>
        public const int ReadOffsetFieldNumber = 6;
        private ulong readOffset_;
        /// <summary>
        /// Start reading from partition offset that is not less than read_offset.
        /// ReadParams.max_time_lag_ms and ReadParams.read_timestamp_ms could lead to skip of more messages.
        /// The same with actual committed offset. Regardless of set read_offset server will return data from maximal offset from read_offset, actual committed offset
        /// and offsets calculated from ReadParams.max_time_lag_ms and ReadParams.read_timestamp_ms.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ReadOffset {
          get { return readOffset_; }
          set {
            readOffset_ = value;
          }
        }

        /// <summary>Field number for the "commit_offset" field.</summary>
        public const int CommitOffsetFieldNumber = 7;
        private ulong commitOffset_;
        /// <summary>
        /// All messages with offset less than commit_offset are processed by client. Server will commit this position if this is not done yet.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong CommitOffset {
          get { return commitOffset_; }
          set {
            commitOffset_ = value;
          }
        }

        /// <summary>Field number for the "verify_read_offset" field.</summary>
        public const int VerifyReadOffsetFieldNumber = 8;
        private bool verifyReadOffset_;
        /// <summary>
        /// This option will enable sanity check on server for read_offset. Server will verify that read_offset is no less that actual committed offset.
        /// If verification will fail then server will kill this read session and client will find out error in reading logic.
        /// If client is not setting read_offset, sanity check will fail so do not set verify_read_offset if you not setting correct read_offset.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool VerifyReadOffset {
          get { return verifyReadOffset_; }
          set {
            verifyReadOffset_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as StartRead);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StartRead other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Topic, other.Topic)) return false;
          if (Cluster != other.Cluster) return false;
          if (Partition != other.Partition) return false;
          if (AssignId != other.AssignId) return false;
          if (ReadOffset != other.ReadOffset) return false;
          if (CommitOffset != other.CommitOffset) return false;
          if (VerifyReadOffset != other.VerifyReadOffset) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (topic_ != null) hash ^= Topic.GetHashCode();
          if (Cluster.Length != 0) hash ^= Cluster.GetHashCode();
          if (Partition != 0UL) hash ^= Partition.GetHashCode();
          if (AssignId != 0UL) hash ^= AssignId.GetHashCode();
          if (ReadOffset != 0UL) hash ^= ReadOffset.GetHashCode();
          if (CommitOffset != 0UL) hash ^= CommitOffset.GetHashCode();
          if (VerifyReadOffset != false) hash ^= VerifyReadOffset.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (topic_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Topic);
          }
          if (Cluster.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Cluster);
          }
          if (Partition != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(Partition);
          }
          if (AssignId != 0UL) {
            output.WriteRawTag(40);
            output.WriteUInt64(AssignId);
          }
          if (ReadOffset != 0UL) {
            output.WriteRawTag(48);
            output.WriteUInt64(ReadOffset);
          }
          if (CommitOffset != 0UL) {
            output.WriteRawTag(56);
            output.WriteUInt64(CommitOffset);
          }
          if (VerifyReadOffset != false) {
            output.WriteRawTag(64);
            output.WriteBool(VerifyReadOffset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (topic_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Topic);
          }
          if (Cluster.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Cluster);
          }
          if (Partition != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(Partition);
          }
          if (AssignId != 0UL) {
            output.WriteRawTag(40);
            output.WriteUInt64(AssignId);
          }
          if (ReadOffset != 0UL) {
            output.WriteRawTag(48);
            output.WriteUInt64(ReadOffset);
          }
          if (CommitOffset != 0UL) {
            output.WriteRawTag(56);
            output.WriteUInt64(CommitOffset);
          }
          if (VerifyReadOffset != false) {
            output.WriteRawTag(64);
            output.WriteBool(VerifyReadOffset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (topic_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
          }
          if (Cluster.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Cluster);
          }
          if (Partition != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Partition);
          }
          if (AssignId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AssignId);
          }
          if (ReadOffset != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReadOffset);
          }
          if (CommitOffset != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CommitOffset);
          }
          if (VerifyReadOffset != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StartRead other) {
          if (other == null) {
            return;
          }
          if (other.topic_ != null) {
            if (topic_ == null) {
              Topic = new global::Ydb.PersQueue.V1.Path();
            }
            Topic.MergeFrom(other.Topic);
          }
          if (other.Cluster.Length != 0) {
            Cluster = other.Cluster;
          }
          if (other.Partition != 0UL) {
            Partition = other.Partition;
          }
          if (other.AssignId != 0UL) {
            AssignId = other.AssignId;
          }
          if (other.ReadOffset != 0UL) {
            ReadOffset = other.ReadOffset;
          }
          if (other.CommitOffset != 0UL) {
            CommitOffset = other.CommitOffset;
          }
          if (other.VerifyReadOffset != false) {
            VerifyReadOffset = other.VerifyReadOffset;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (topic_ == null) {
                  Topic = new global::Ydb.PersQueue.V1.Path();
                }
                input.ReadMessage(Topic);
                break;
              }
              case 18: {
                Cluster = input.ReadString();
                break;
              }
              case 24: {
                Partition = input.ReadUInt64();
                break;
              }
              case 40: {
                AssignId = input.ReadUInt64();
                break;
              }
              case 48: {
                ReadOffset = input.ReadUInt64();
                break;
              }
              case 56: {
                CommitOffset = input.ReadUInt64();
                break;
              }
              case 64: {
                VerifyReadOffset = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (topic_ == null) {
                  Topic = new global::Ydb.PersQueue.V1.Path();
                }
                input.ReadMessage(Topic);
                break;
              }
              case 18: {
                Cluster = input.ReadString();
                break;
              }
              case 24: {
                Partition = input.ReadUInt64();
                break;
              }
              case 40: {
                AssignId = input.ReadUInt64();
                break;
              }
              case 48: {
                ReadOffset = input.ReadUInt64();
                break;
              }
              case 56: {
                CommitOffset = input.ReadUInt64();
                break;
              }
              case 64: {
                VerifyReadOffset = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Signal for server that client finished working with this partition. Must be sent only after corresponding Release request from server.
      /// Server will give this partition to other read session only after Released signal.
      /// </summary>
      public sealed partial class Released : pb::IMessage<Released>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Released> _parser = new pb::MessageParser<Released>(() => new Released());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Released> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Released() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Released(Released other) : this() {
          topic_ = other.topic_ != null ? other.topic_.Clone() : null;
          cluster_ = other.cluster_;
          partition_ = other.partition_;
          assignId_ = other.assignId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Released Clone() {
          return new Released(this);
        }

        /// <summary>Field number for the "topic" field.</summary>
        public const int TopicFieldNumber = 1;
        private global::Ydb.PersQueue.V1.Path topic_;
        /// <summary>
        /// Topic path of partition.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.PersQueue.V1.Path Topic {
          get { return topic_; }
          set {
            topic_ = value;
          }
        }

        /// <summary>Field number for the "cluster" field.</summary>
        public const int ClusterFieldNumber = 2;
        private string cluster_ = "";
        /// <summary>
        /// Cluster of topic instance.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Cluster {
          get { return cluster_; }
          set {
            cluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "partition" field.</summary>
        public const int PartitionFieldNumber = 3;
        private ulong partition_;
        /// <summary>
        /// Partition identifier. Explicit only for debug purposes.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Partition {
          get { return partition_; }
          set {
            partition_ = value;
          }
        }

        /// <summary>Field number for the "assign_id" field.</summary>
        public const int AssignIdFieldNumber = 5;
        private ulong assignId_;
        /// <summary>
        /// Assign identifier of Assign request from server. Used for mathing Assign requests from server with Released responses from client.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong AssignId {
          get { return assignId_; }
          set {
            assignId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Released);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Released other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Topic, other.Topic)) return false;
          if (Cluster != other.Cluster) return false;
          if (Partition != other.Partition) return false;
          if (AssignId != other.AssignId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (topic_ != null) hash ^= Topic.GetHashCode();
          if (Cluster.Length != 0) hash ^= Cluster.GetHashCode();
          if (Partition != 0UL) hash ^= Partition.GetHashCode();
          if (AssignId != 0UL) hash ^= AssignId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (topic_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Topic);
          }
          if (Cluster.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Cluster);
          }
          if (Partition != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(Partition);
          }
          if (AssignId != 0UL) {
            output.WriteRawTag(40);
            output.WriteUInt64(AssignId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (topic_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Topic);
          }
          if (Cluster.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Cluster);
          }
          if (Partition != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(Partition);
          }
          if (AssignId != 0UL) {
            output.WriteRawTag(40);
            output.WriteUInt64(AssignId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (topic_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
          }
          if (Cluster.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Cluster);
          }
          if (Partition != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Partition);
          }
          if (AssignId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AssignId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Released other) {
          if (other == null) {
            return;
          }
          if (other.topic_ != null) {
            if (topic_ == null) {
              Topic = new global::Ydb.PersQueue.V1.Path();
            }
            Topic.MergeFrom(other.Topic);
          }
          if (other.Cluster.Length != 0) {
            Cluster = other.Cluster;
          }
          if (other.Partition != 0UL) {
            Partition = other.Partition;
          }
          if (other.AssignId != 0UL) {
            AssignId = other.AssignId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (topic_ == null) {
                  Topic = new global::Ydb.PersQueue.V1.Path();
                }
                input.ReadMessage(Topic);
                break;
              }
              case 18: {
                Cluster = input.ReadString();
                break;
              }
              case 24: {
                Partition = input.ReadUInt64();
                break;
              }
              case 40: {
                AssignId = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (topic_ == null) {
                  Topic = new global::Ydb.PersQueue.V1.Path();
                }
                input.ReadMessage(Topic);
                break;
              }
              case 18: {
                Cluster = input.ReadString();
                break;
              }
              case 24: {
                Partition = input.ReadUInt64();
                break;
              }
              case 40: {
                AssignId = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Signal for server that client processed some read data.
      /// </summary>
      public sealed partial class Commit : pb::IMessage<Commit>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Commit> _parser = new pb::MessageParser<Commit>(() => new Commit());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Commit> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Commit() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Commit(Commit other) : this() {
          cookies_ = other.cookies_.Clone();
          offsetRanges_ = other.offsetRanges_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Commit Clone() {
          return new Commit(this);
        }

        /// <summary>Field number for the "cookies" field.</summary>
        public const int CookiesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.CommitCookie> _repeated_cookies_codec
            = pb::FieldCodec.ForMessage(10, global::Ydb.PersQueue.V1.CommitCookie.Parser);
        private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.CommitCookie> cookies_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.CommitCookie>();
        /// <summary>
        /// Partition read cookies that indicates processed data.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.PersQueue.V1.CommitCookie> Cookies {
          get { return cookies_; }
        }

        /// <summary>Field number for the "offset_ranges" field.</summary>
        public const int OffsetRangesFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.CommitOffsetRange> _repeated_offsetRanges_codec
            = pb::FieldCodec.ForMessage(18, global::Ydb.PersQueue.V1.CommitOffsetRange.Parser);
        private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.CommitOffsetRange> offsetRanges_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.CommitOffsetRange>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.PersQueue.V1.CommitOffsetRange> OffsetRanges {
          get { return offsetRanges_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Commit);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Commit other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!cookies_.Equals(other.cookies_)) return false;
          if(!offsetRanges_.Equals(other.offsetRanges_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= cookies_.GetHashCode();
          hash ^= offsetRanges_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          cookies_.WriteTo(output, _repeated_cookies_codec);
          offsetRanges_.WriteTo(output, _repeated_offsetRanges_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          cookies_.WriteTo(ref output, _repeated_cookies_codec);
          offsetRanges_.WriteTo(ref output, _repeated_offsetRanges_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += cookies_.CalculateSize(_repeated_cookies_codec);
          size += offsetRanges_.CalculateSize(_repeated_offsetRanges_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Commit other) {
          if (other == null) {
            return;
          }
          cookies_.Add(other.cookies_);
          offsetRanges_.Add(other.offsetRanges_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                cookies_.AddEntriesFrom(input, _repeated_cookies_codec);
                break;
              }
              case 18: {
                offsetRanges_.AddEntriesFrom(input, _repeated_offsetRanges_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                cookies_.AddEntriesFrom(ref input, _repeated_cookies_codec);
                break;
              }
              case 18: {
                offsetRanges_.AddEntriesFrom(ref input, _repeated_offsetRanges_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Status : pb::IMessage<Status>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Status> _parser = new pb::MessageParser<Status>(() => new Status());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Status> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.MigrationStreamingReadClientMessage.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Status() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Status(Status other) : this() {
          topic_ = other.topic_ != null ? other.topic_.Clone() : null;
          cluster_ = other.cluster_;
          partition_ = other.partition_;
          assignId_ = other.assignId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Status Clone() {
          return new Status(this);
        }

        /// <summary>Field number for the "topic" field.</summary>
        public const int TopicFieldNumber = 1;
        private global::Ydb.PersQueue.V1.Path topic_;
        /// <summary>
        /// Topic path of partition.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.PersQueue.V1.Path Topic {
          get { return topic_; }
          set {
            topic_ = value;
          }
        }

        /// <summary>Field number for the "cluster" field.</summary>
        public const int ClusterFieldNumber = 2;
        private string cluster_ = "";
        /// <summary>
        /// Cluster of topic instance.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Cluster {
          get { return cluster_; }
          set {
            cluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "partition" field.</summary>
        public const int PartitionFieldNumber = 3;
        private ulong partition_;
        /// <summary>
        /// Partition identifier. Explicit only for debug purposes.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Partition {
          get { return partition_; }
          set {
            partition_ = value;
          }
        }

        /// <summary>Field number for the "assign_id" field.</summary>
        public const int AssignIdFieldNumber = 5;
        private ulong assignId_;
        /// <summary>
        /// Assign identifier of Assign request from server. Used for mathing Assign requests from server with Released responses from client.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong AssignId {
          get { return assignId_; }
          set {
            assignId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Status);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Status other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Topic, other.Topic)) return false;
          if (Cluster != other.Cluster) return false;
          if (Partition != other.Partition) return false;
          if (AssignId != other.AssignId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (topic_ != null) hash ^= Topic.GetHashCode();
          if (Cluster.Length != 0) hash ^= Cluster.GetHashCode();
          if (Partition != 0UL) hash ^= Partition.GetHashCode();
          if (AssignId != 0UL) hash ^= AssignId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (topic_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Topic);
          }
          if (Cluster.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Cluster);
          }
          if (Partition != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(Partition);
          }
          if (AssignId != 0UL) {
            output.WriteRawTag(40);
            output.WriteUInt64(AssignId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (topic_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Topic);
          }
          if (Cluster.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Cluster);
          }
          if (Partition != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(Partition);
          }
          if (AssignId != 0UL) {
            output.WriteRawTag(40);
            output.WriteUInt64(AssignId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (topic_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
          }
          if (Cluster.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Cluster);
          }
          if (Partition != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Partition);
          }
          if (AssignId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AssignId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Status other) {
          if (other == null) {
            return;
          }
          if (other.topic_ != null) {
            if (topic_ == null) {
              Topic = new global::Ydb.PersQueue.V1.Path();
            }
            Topic.MergeFrom(other.Topic);
          }
          if (other.Cluster.Length != 0) {
            Cluster = other.Cluster;
          }
          if (other.Partition != 0UL) {
            Partition = other.Partition;
          }
          if (other.AssignId != 0UL) {
            AssignId = other.AssignId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (topic_ == null) {
                  Topic = new global::Ydb.PersQueue.V1.Path();
                }
                input.ReadMessage(Topic);
                break;
              }
              case 18: {
                Cluster = input.ReadString();
                break;
              }
              case 24: {
                Partition = input.ReadUInt64();
                break;
              }
              case 40: {
                AssignId = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (topic_ == null) {
                  Topic = new global::Ydb.PersQueue.V1.Path();
                }
                input.ReadMessage(Topic);
                break;
              }
              case 18: {
                Cluster = input.ReadString();
                break;
              }
              case 24: {
                Partition = input.ReadUInt64();
                break;
              }
              case 40: {
                AssignId = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class MigrationStreamingReadServerMessage : pb::IMessage<MigrationStreamingReadServerMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MigrationStreamingReadServerMessage> _parser = new pb::MessageParser<MigrationStreamingReadServerMessage>(() => new MigrationStreamingReadServerMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MigrationStreamingReadServerMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MigrationStreamingReadServerMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MigrationStreamingReadServerMessage(MigrationStreamingReadServerMessage other) : this() {
      status_ = other.status_;
      issues_ = other.issues_.Clone();
      switch (other.ResponseCase) {
        case ResponseOneofCase.InitResponse:
          InitResponse = other.InitResponse.Clone();
          break;
        case ResponseOneofCase.DataBatch:
          DataBatch = other.DataBatch.Clone();
          break;
        case ResponseOneofCase.Assigned:
          Assigned = other.Assigned.Clone();
          break;
        case ResponseOneofCase.Release:
          Release = other.Release.Clone();
          break;
        case ResponseOneofCase.Committed:
          Committed = other.Committed.Clone();
          break;
        case ResponseOneofCase.PartitionStatus:
          PartitionStatus = other.PartitionStatus.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MigrationStreamingReadServerMessage Clone() {
      return new MigrationStreamingReadServerMessage(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Ydb.StatusIds.Types.StatusCode status_ = global::Ydb.StatusIds.Types.StatusCode.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.StatusIds.Types.StatusCode Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "issues" field.</summary>
    public const int IssuesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Ydb.Issue.IssueMessage> _repeated_issues_codec
        = pb::FieldCodec.ForMessage(18, global::Ydb.Issue.IssueMessage.Parser);
    private readonly pbc::RepeatedField<global::Ydb.Issue.IssueMessage> issues_ = new pbc::RepeatedField<global::Ydb.Issue.IssueMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.Issue.IssueMessage> Issues {
      get { return issues_; }
    }

    /// <summary>Field number for the "init_response" field.</summary>
    public const int InitResponseFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.InitResponse InitResponse {
      get { return responseCase_ == ResponseOneofCase.InitResponse ? (global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.InitResponse) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.InitResponse;
      }
    }

    /// <summary>Field number for the "data_batch" field.</summary>
    public const int DataBatchFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch DataBatch {
      get { return responseCase_ == ResponseOneofCase.DataBatch ? (global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.DataBatch;
      }
    }

    /// <summary>Field number for the "assigned" field.</summary>
    public const int AssignedFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Assigned Assigned {
      get { return responseCase_ == ResponseOneofCase.Assigned ? (global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Assigned) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Assigned;
      }
    }

    /// <summary>Field number for the "release" field.</summary>
    public const int ReleaseFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Release Release {
      get { return responseCase_ == ResponseOneofCase.Release ? (global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Release) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Release;
      }
    }

    /// <summary>Field number for the "committed" field.</summary>
    public const int CommittedFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Committed Committed {
      get { return responseCase_ == ResponseOneofCase.Committed ? (global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Committed) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Committed;
      }
    }

    /// <summary>Field number for the "partition_status" field.</summary>
    public const int PartitionStatusFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.PartitionStatus PartitionStatus {
      get { return responseCase_ == ResponseOneofCase.PartitionStatus ? (global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.PartitionStatus) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.PartitionStatus;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      InitResponse = 3,
      DataBatch = 4,
      Assigned = 5,
      Release = 6,
      Committed = 7,
      PartitionStatus = 8,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MigrationStreamingReadServerMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MigrationStreamingReadServerMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if(!issues_.Equals(other.issues_)) return false;
      if (!object.Equals(InitResponse, other.InitResponse)) return false;
      if (!object.Equals(DataBatch, other.DataBatch)) return false;
      if (!object.Equals(Assigned, other.Assigned)) return false;
      if (!object.Equals(Release, other.Release)) return false;
      if (!object.Equals(Committed, other.Committed)) return false;
      if (!object.Equals(PartitionStatus, other.PartitionStatus)) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) hash ^= Status.GetHashCode();
      hash ^= issues_.GetHashCode();
      if (responseCase_ == ResponseOneofCase.InitResponse) hash ^= InitResponse.GetHashCode();
      if (responseCase_ == ResponseOneofCase.DataBatch) hash ^= DataBatch.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Assigned) hash ^= Assigned.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Release) hash ^= Release.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Committed) hash ^= Committed.GetHashCode();
      if (responseCase_ == ResponseOneofCase.PartitionStatus) hash ^= PartitionStatus.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      issues_.WriteTo(output, _repeated_issues_codec);
      if (responseCase_ == ResponseOneofCase.InitResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(InitResponse);
      }
      if (responseCase_ == ResponseOneofCase.DataBatch) {
        output.WriteRawTag(34);
        output.WriteMessage(DataBatch);
      }
      if (responseCase_ == ResponseOneofCase.Assigned) {
        output.WriteRawTag(42);
        output.WriteMessage(Assigned);
      }
      if (responseCase_ == ResponseOneofCase.Release) {
        output.WriteRawTag(50);
        output.WriteMessage(Release);
      }
      if (responseCase_ == ResponseOneofCase.Committed) {
        output.WriteRawTag(58);
        output.WriteMessage(Committed);
      }
      if (responseCase_ == ResponseOneofCase.PartitionStatus) {
        output.WriteRawTag(66);
        output.WriteMessage(PartitionStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      issues_.WriteTo(ref output, _repeated_issues_codec);
      if (responseCase_ == ResponseOneofCase.InitResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(InitResponse);
      }
      if (responseCase_ == ResponseOneofCase.DataBatch) {
        output.WriteRawTag(34);
        output.WriteMessage(DataBatch);
      }
      if (responseCase_ == ResponseOneofCase.Assigned) {
        output.WriteRawTag(42);
        output.WriteMessage(Assigned);
      }
      if (responseCase_ == ResponseOneofCase.Release) {
        output.WriteRawTag(50);
        output.WriteMessage(Release);
      }
      if (responseCase_ == ResponseOneofCase.Committed) {
        output.WriteRawTag(58);
        output.WriteMessage(Committed);
      }
      if (responseCase_ == ResponseOneofCase.PartitionStatus) {
        output.WriteRawTag(66);
        output.WriteMessage(PartitionStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += issues_.CalculateSize(_repeated_issues_codec);
      if (responseCase_ == ResponseOneofCase.InitResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InitResponse);
      }
      if (responseCase_ == ResponseOneofCase.DataBatch) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataBatch);
      }
      if (responseCase_ == ResponseOneofCase.Assigned) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Assigned);
      }
      if (responseCase_ == ResponseOneofCase.Release) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Release);
      }
      if (responseCase_ == ResponseOneofCase.Committed) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Committed);
      }
      if (responseCase_ == ResponseOneofCase.PartitionStatus) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartitionStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MigrationStreamingReadServerMessage other) {
      if (other == null) {
        return;
      }
      if (other.Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
        Status = other.Status;
      }
      issues_.Add(other.issues_);
      switch (other.ResponseCase) {
        case ResponseOneofCase.InitResponse:
          if (InitResponse == null) {
            InitResponse = new global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.InitResponse();
          }
          InitResponse.MergeFrom(other.InitResponse);
          break;
        case ResponseOneofCase.DataBatch:
          if (DataBatch == null) {
            DataBatch = new global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch();
          }
          DataBatch.MergeFrom(other.DataBatch);
          break;
        case ResponseOneofCase.Assigned:
          if (Assigned == null) {
            Assigned = new global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Assigned();
          }
          Assigned.MergeFrom(other.Assigned);
          break;
        case ResponseOneofCase.Release:
          if (Release == null) {
            Release = new global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Release();
          }
          Release.MergeFrom(other.Release);
          break;
        case ResponseOneofCase.Committed:
          if (Committed == null) {
            Committed = new global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Committed();
          }
          Committed.MergeFrom(other.Committed);
          break;
        case ResponseOneofCase.PartitionStatus:
          if (PartitionStatus == null) {
            PartitionStatus = new global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.PartitionStatus();
          }
          PartitionStatus.MergeFrom(other.PartitionStatus);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
            break;
          }
          case 18: {
            issues_.AddEntriesFrom(input, _repeated_issues_codec);
            break;
          }
          case 26: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.InitResponse subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.InitResponse();
            if (responseCase_ == ResponseOneofCase.InitResponse) {
              subBuilder.MergeFrom(InitResponse);
            }
            input.ReadMessage(subBuilder);
            InitResponse = subBuilder;
            break;
          }
          case 34: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch();
            if (responseCase_ == ResponseOneofCase.DataBatch) {
              subBuilder.MergeFrom(DataBatch);
            }
            input.ReadMessage(subBuilder);
            DataBatch = subBuilder;
            break;
          }
          case 42: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Assigned subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Assigned();
            if (responseCase_ == ResponseOneofCase.Assigned) {
              subBuilder.MergeFrom(Assigned);
            }
            input.ReadMessage(subBuilder);
            Assigned = subBuilder;
            break;
          }
          case 50: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Release subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Release();
            if (responseCase_ == ResponseOneofCase.Release) {
              subBuilder.MergeFrom(Release);
            }
            input.ReadMessage(subBuilder);
            Release = subBuilder;
            break;
          }
          case 58: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Committed subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Committed();
            if (responseCase_ == ResponseOneofCase.Committed) {
              subBuilder.MergeFrom(Committed);
            }
            input.ReadMessage(subBuilder);
            Committed = subBuilder;
            break;
          }
          case 66: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.PartitionStatus subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.PartitionStatus();
            if (responseCase_ == ResponseOneofCase.PartitionStatus) {
              subBuilder.MergeFrom(PartitionStatus);
            }
            input.ReadMessage(subBuilder);
            PartitionStatus = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
            break;
          }
          case 18: {
            issues_.AddEntriesFrom(ref input, _repeated_issues_codec);
            break;
          }
          case 26: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.InitResponse subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.InitResponse();
            if (responseCase_ == ResponseOneofCase.InitResponse) {
              subBuilder.MergeFrom(InitResponse);
            }
            input.ReadMessage(subBuilder);
            InitResponse = subBuilder;
            break;
          }
          case 34: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch();
            if (responseCase_ == ResponseOneofCase.DataBatch) {
              subBuilder.MergeFrom(DataBatch);
            }
            input.ReadMessage(subBuilder);
            DataBatch = subBuilder;
            break;
          }
          case 42: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Assigned subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Assigned();
            if (responseCase_ == ResponseOneofCase.Assigned) {
              subBuilder.MergeFrom(Assigned);
            }
            input.ReadMessage(subBuilder);
            Assigned = subBuilder;
            break;
          }
          case 50: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Release subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Release();
            if (responseCase_ == ResponseOneofCase.Release) {
              subBuilder.MergeFrom(Release);
            }
            input.ReadMessage(subBuilder);
            Release = subBuilder;
            break;
          }
          case 58: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Committed subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.Committed();
            if (responseCase_ == ResponseOneofCase.Committed) {
              subBuilder.MergeFrom(Committed);
            }
            input.ReadMessage(subBuilder);
            Committed = subBuilder;
            break;
          }
          case 66: {
            global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.PartitionStatus subBuilder = new global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.PartitionStatus();
            if (responseCase_ == ResponseOneofCase.PartitionStatus) {
              subBuilder.MergeFrom(PartitionStatus);
            }
            input.ReadMessage(subBuilder);
            PartitionStatus = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MigrationStreamingReadServerMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Handshake response.
      /// </summary>
      public sealed partial class InitResponse : pb::IMessage<InitResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InitResponse> _parser = new pb::MessageParser<InitResponse>(() => new InitResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InitResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitResponse(InitResponse other) : this() {
          sessionId_ = other.sessionId_;
          blockFormatVersionByTopic_ = other.blockFormatVersionByTopic_.Clone();
          maxMetaCacheSize_ = other.maxMetaCacheSize_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InitResponse Clone() {
          return new InitResponse(this);
        }

        /// <summary>Field number for the "session_id" field.</summary>
        public const int SessionIdFieldNumber = 1;
        private string sessionId_ = "";
        /// <summary>
        /// Read session identifier for debug purposes.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SessionId {
          get { return sessionId_; }
          set {
            sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "block_format_version_by_topic" field.</summary>
        public const int BlockFormatVersionByTopicFieldNumber = 2;
        private static readonly pbc::MapField<string, long>.Codec _map_blockFormatVersionByTopic_codec
            = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 18);
        private readonly pbc::MapField<string, long> blockFormatVersionByTopic_ = new pbc::MapField<string, long>();
        /// <summary>
        /// Block format version of data client will receive from topics.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, long> BlockFormatVersionByTopic {
          get { return blockFormatVersionByTopic_; }
        }

        /// <summary>Field number for the "max_meta_cache_size" field.</summary>
        public const int MaxMetaCacheSizeFieldNumber = 10;
        private long maxMetaCacheSize_;
        /// <summary>
        /// Choosed maximan cache size by server.
        /// Client must use cache of this size. Could change on retries - reduce size of cache in this case.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MaxMetaCacheSize {
          get { return maxMetaCacheSize_; }
          set {
            maxMetaCacheSize_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InitResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InitResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SessionId != other.SessionId) return false;
          if (!BlockFormatVersionByTopic.Equals(other.BlockFormatVersionByTopic)) return false;
          if (MaxMetaCacheSize != other.MaxMetaCacheSize) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
          hash ^= BlockFormatVersionByTopic.GetHashCode();
          if (MaxMetaCacheSize != 0L) hash ^= MaxMetaCacheSize.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SessionId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SessionId);
          }
          blockFormatVersionByTopic_.WriteTo(output, _map_blockFormatVersionByTopic_codec);
          if (MaxMetaCacheSize != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(MaxMetaCacheSize);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SessionId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SessionId);
          }
          blockFormatVersionByTopic_.WriteTo(ref output, _map_blockFormatVersionByTopic_codec);
          if (MaxMetaCacheSize != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(MaxMetaCacheSize);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (SessionId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
          }
          size += blockFormatVersionByTopic_.CalculateSize(_map_blockFormatVersionByTopic_codec);
          if (MaxMetaCacheSize != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxMetaCacheSize);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InitResponse other) {
          if (other == null) {
            return;
          }
          if (other.SessionId.Length != 0) {
            SessionId = other.SessionId;
          }
          blockFormatVersionByTopic_.Add(other.blockFormatVersionByTopic_);
          if (other.MaxMetaCacheSize != 0L) {
            MaxMetaCacheSize = other.MaxMetaCacheSize;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                SessionId = input.ReadString();
                break;
              }
              case 18: {
                blockFormatVersionByTopic_.AddEntriesFrom(input, _map_blockFormatVersionByTopic_codec);
                break;
              }
              case 80: {
                MaxMetaCacheSize = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                SessionId = input.ReadString();
                break;
              }
              case 18: {
                blockFormatVersionByTopic_.AddEntriesFrom(ref input, _map_blockFormatVersionByTopic_codec);
                break;
              }
              case 80: {
                MaxMetaCacheSize = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Signal that partition is assigned to this read session. Client must react on this signal by sending StartRead when ready.
      /// </summary>
      public sealed partial class Assigned : pb::IMessage<Assigned>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Assigned> _parser = new pb::MessageParser<Assigned>(() => new Assigned());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Assigned> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Assigned() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Assigned(Assigned other) : this() {
          topic_ = other.topic_ != null ? other.topic_.Clone() : null;
          cluster_ = other.cluster_;
          partition_ = other.partition_;
          assignId_ = other.assignId_;
          readOffset_ = other.readOffset_;
          endOffset_ = other.endOffset_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Assigned Clone() {
          return new Assigned(this);
        }

        /// <summary>Field number for the "topic" field.</summary>
        public const int TopicFieldNumber = 1;
        private global::Ydb.PersQueue.V1.Path topic_;
        /// <summary>
        /// Partition's topic path.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.PersQueue.V1.Path Topic {
          get { return topic_; }
          set {
            topic_ = value;
          }
        }

        /// <summary>Field number for the "cluster" field.</summary>
        public const int ClusterFieldNumber = 2;
        private string cluster_ = "";
        /// <summary>
        /// Topic's instance cluster name.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Cluster {
          get { return cluster_; }
          set {
            cluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "partition" field.</summary>
        public const int PartitionFieldNumber = 3;
        private ulong partition_;
        /// <summary>
        /// Partition identifier. topic:cluster:partition is unique addressing of partition.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Partition {
          get { return partition_; }
          set {
            partition_ = value;
          }
        }

        /// <summary>Field number for the "assign_id" field.</summary>
        public const int AssignIdFieldNumber = 5;
        private ulong assignId_;
        /// <summary>
        /// Assign idenfier. Is not unique between diffrent partitions. Used for matching Assigned request from server and StartRead response from client.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong AssignId {
          get { return assignId_; }
          set {
            assignId_ = value;
          }
        }

        /// <summary>Field number for the "read_offset" field.</summary>
        public const int ReadOffsetFieldNumber = 6;
        private ulong readOffset_;
        /// <summary>
        /// Actual read offset. Equeal to last committed offset.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ReadOffset {
          get { return readOffset_; }
          set {
            readOffset_ = value;
          }
        }

        /// <summary>Field number for the "end_offset" field.</summary>
        public const int EndOffsetFieldNumber = 7;
        private ulong endOffset_;
        /// <summary>
        /// Offset of first not existing message in partition at this time.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong EndOffset {
          get { return endOffset_; }
          set {
            endOffset_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Assigned);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Assigned other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Topic, other.Topic)) return false;
          if (Cluster != other.Cluster) return false;
          if (Partition != other.Partition) return false;
          if (AssignId != other.AssignId) return false;
          if (ReadOffset != other.ReadOffset) return false;
          if (EndOffset != other.EndOffset) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (topic_ != null) hash ^= Topic.GetHashCode();
          if (Cluster.Length != 0) hash ^= Cluster.GetHashCode();
          if (Partition != 0UL) hash ^= Partition.GetHashCode();
          if (AssignId != 0UL) hash ^= AssignId.GetHashCode();
          if (ReadOffset != 0UL) hash ^= ReadOffset.GetHashCode();
          if (EndOffset != 0UL) hash ^= EndOffset.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (topic_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Topic);
          }
          if (Cluster.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Cluster);
          }
          if (Partition != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(Partition);
          }
          if (AssignId != 0UL) {
            output.WriteRawTag(40);
            output.WriteUInt64(AssignId);
          }
          if (ReadOffset != 0UL) {
            output.WriteRawTag(48);
            output.WriteUInt64(ReadOffset);
          }
          if (EndOffset != 0UL) {
            output.WriteRawTag(56);
            output.WriteUInt64(EndOffset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (topic_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Topic);
          }
          if (Cluster.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Cluster);
          }
          if (Partition != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(Partition);
          }
          if (AssignId != 0UL) {
            output.WriteRawTag(40);
            output.WriteUInt64(AssignId);
          }
          if (ReadOffset != 0UL) {
            output.WriteRawTag(48);
            output.WriteUInt64(ReadOffset);
          }
          if (EndOffset != 0UL) {
            output.WriteRawTag(56);
            output.WriteUInt64(EndOffset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (topic_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
          }
          if (Cluster.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Cluster);
          }
          if (Partition != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Partition);
          }
          if (AssignId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AssignId);
          }
          if (ReadOffset != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReadOffset);
          }
          if (EndOffset != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EndOffset);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Assigned other) {
          if (other == null) {
            return;
          }
          if (other.topic_ != null) {
            if (topic_ == null) {
              Topic = new global::Ydb.PersQueue.V1.Path();
            }
            Topic.MergeFrom(other.Topic);
          }
          if (other.Cluster.Length != 0) {
            Cluster = other.Cluster;
          }
          if (other.Partition != 0UL) {
            Partition = other.Partition;
          }
          if (other.AssignId != 0UL) {
            AssignId = other.AssignId;
          }
          if (other.ReadOffset != 0UL) {
            ReadOffset = other.ReadOffset;
          }
          if (other.EndOffset != 0UL) {
            EndOffset = other.EndOffset;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (topic_ == null) {
                  Topic = new global::Ydb.PersQueue.V1.Path();
                }
                input.ReadMessage(Topic);
                break;
              }
              case 18: {
                Cluster = input.ReadString();
                break;
              }
              case 24: {
                Partition = input.ReadUInt64();
                break;
              }
              case 40: {
                AssignId = input.ReadUInt64();
                break;
              }
              case 48: {
                ReadOffset = input.ReadUInt64();
                break;
              }
              case 56: {
                EndOffset = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (topic_ == null) {
                  Topic = new global::Ydb.PersQueue.V1.Path();
                }
                input.ReadMessage(Topic);
                break;
              }
              case 18: {
                Cluster = input.ReadString();
                break;
              }
              case 24: {
                Partition = input.ReadUInt64();
                break;
              }
              case 40: {
                AssignId = input.ReadUInt64();
                break;
              }
              case 48: {
                ReadOffset = input.ReadUInt64();
                break;
              }
              case 56: {
                EndOffset = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Partition release request from server.
      /// </summary>
      public sealed partial class Release : pb::IMessage<Release>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Release> _parser = new pb::MessageParser<Release>(() => new Release());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Release> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Release() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Release(Release other) : this() {
          topic_ = other.topic_ != null ? other.topic_.Clone() : null;
          cluster_ = other.cluster_;
          partition_ = other.partition_;
          assignId_ = other.assignId_;
          forcefulRelease_ = other.forcefulRelease_;
          commitOffset_ = other.commitOffset_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Release Clone() {
          return new Release(this);
        }

        /// <summary>Field number for the "topic" field.</summary>
        public const int TopicFieldNumber = 1;
        private global::Ydb.PersQueue.V1.Path topic_;
        /// <summary>
        /// Partition's topic path.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.PersQueue.V1.Path Topic {
          get { return topic_; }
          set {
            topic_ = value;
          }
        }

        /// <summary>Field number for the "cluster" field.</summary>
        public const int ClusterFieldNumber = 2;
        private string cluster_ = "";
        /// <summary>
        /// Topic's instance cluster name.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Cluster {
          get { return cluster_; }
          set {
            cluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "partition" field.</summary>
        public const int PartitionFieldNumber = 3;
        private ulong partition_;
        /// <summary>
        /// Partition identifier. topic:cluster:partition is unique addressing of partition.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Partition {
          get { return partition_; }
          set {
            partition_ = value;
          }
        }

        /// <summary>Field number for the "assign_id" field.</summary>
        public const int AssignIdFieldNumber = 5;
        private ulong assignId_;
        /// <summary>
        /// Assign idenfier. Used for matching Assigned and Release requests from server.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong AssignId {
          get { return assignId_; }
          set {
            assignId_ = value;
          }
        }

        /// <summary>Field number for the "forceful_release" field.</summary>
        public const int ForcefulReleaseFieldNumber = 6;
        private bool forcefulRelease_;
        /// <summary>
        /// If False then server is waiting for Released signal from client before giving of this partition for other read session.
        /// If True then server gives partition for other session right now. All futher commits for this partition has no effect. Server is not waiting for Released signal.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ForcefulRelease {
          get { return forcefulRelease_; }
          set {
            forcefulRelease_ = value;
          }
        }

        /// <summary>Field number for the "commit_offset" field.</summary>
        public const int CommitOffsetFieldNumber = 7;
        private ulong commitOffset_;
        /// <summary>
        /// Last known committed offset.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong CommitOffset {
          get { return commitOffset_; }
          set {
            commitOffset_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Release);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Release other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Topic, other.Topic)) return false;
          if (Cluster != other.Cluster) return false;
          if (Partition != other.Partition) return false;
          if (AssignId != other.AssignId) return false;
          if (ForcefulRelease != other.ForcefulRelease) return false;
          if (CommitOffset != other.CommitOffset) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (topic_ != null) hash ^= Topic.GetHashCode();
          if (Cluster.Length != 0) hash ^= Cluster.GetHashCode();
          if (Partition != 0UL) hash ^= Partition.GetHashCode();
          if (AssignId != 0UL) hash ^= AssignId.GetHashCode();
          if (ForcefulRelease != false) hash ^= ForcefulRelease.GetHashCode();
          if (CommitOffset != 0UL) hash ^= CommitOffset.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (topic_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Topic);
          }
          if (Cluster.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Cluster);
          }
          if (Partition != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(Partition);
          }
          if (AssignId != 0UL) {
            output.WriteRawTag(40);
            output.WriteUInt64(AssignId);
          }
          if (ForcefulRelease != false) {
            output.WriteRawTag(48);
            output.WriteBool(ForcefulRelease);
          }
          if (CommitOffset != 0UL) {
            output.WriteRawTag(56);
            output.WriteUInt64(CommitOffset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (topic_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Topic);
          }
          if (Cluster.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Cluster);
          }
          if (Partition != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(Partition);
          }
          if (AssignId != 0UL) {
            output.WriteRawTag(40);
            output.WriteUInt64(AssignId);
          }
          if (ForcefulRelease != false) {
            output.WriteRawTag(48);
            output.WriteBool(ForcefulRelease);
          }
          if (CommitOffset != 0UL) {
            output.WriteRawTag(56);
            output.WriteUInt64(CommitOffset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (topic_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
          }
          if (Cluster.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Cluster);
          }
          if (Partition != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Partition);
          }
          if (AssignId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AssignId);
          }
          if (ForcefulRelease != false) {
            size += 1 + 1;
          }
          if (CommitOffset != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CommitOffset);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Release other) {
          if (other == null) {
            return;
          }
          if (other.topic_ != null) {
            if (topic_ == null) {
              Topic = new global::Ydb.PersQueue.V1.Path();
            }
            Topic.MergeFrom(other.Topic);
          }
          if (other.Cluster.Length != 0) {
            Cluster = other.Cluster;
          }
          if (other.Partition != 0UL) {
            Partition = other.Partition;
          }
          if (other.AssignId != 0UL) {
            AssignId = other.AssignId;
          }
          if (other.ForcefulRelease != false) {
            ForcefulRelease = other.ForcefulRelease;
          }
          if (other.CommitOffset != 0UL) {
            CommitOffset = other.CommitOffset;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (topic_ == null) {
                  Topic = new global::Ydb.PersQueue.V1.Path();
                }
                input.ReadMessage(Topic);
                break;
              }
              case 18: {
                Cluster = input.ReadString();
                break;
              }
              case 24: {
                Partition = input.ReadUInt64();
                break;
              }
              case 40: {
                AssignId = input.ReadUInt64();
                break;
              }
              case 48: {
                ForcefulRelease = input.ReadBool();
                break;
              }
              case 56: {
                CommitOffset = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (topic_ == null) {
                  Topic = new global::Ydb.PersQueue.V1.Path();
                }
                input.ReadMessage(Topic);
                break;
              }
              case 18: {
                Cluster = input.ReadString();
                break;
              }
              case 24: {
                Partition = input.ReadUInt64();
                break;
              }
              case 40: {
                AssignId = input.ReadUInt64();
                break;
              }
              case 48: {
                ForcefulRelease = input.ReadBool();
                break;
              }
              case 56: {
                CommitOffset = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Acknowledgement for commits.
      /// </summary>
      public sealed partial class Committed : pb::IMessage<Committed>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Committed> _parser = new pb::MessageParser<Committed>(() => new Committed());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Committed> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Committed() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Committed(Committed other) : this() {
          cookies_ = other.cookies_.Clone();
          offsetRanges_ = other.offsetRanges_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Committed Clone() {
          return new Committed(this);
        }

        /// <summary>Field number for the "cookies" field.</summary>
        public const int CookiesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.CommitCookie> _repeated_cookies_codec
            = pb::FieldCodec.ForMessage(10, global::Ydb.PersQueue.V1.CommitCookie.Parser);
        private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.CommitCookie> cookies_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.CommitCookie>();
        /// <summary>
        /// List of cookies that correspond to commit of processing read data.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.PersQueue.V1.CommitCookie> Cookies {
          get { return cookies_; }
        }

        /// <summary>Field number for the "offset_ranges" field.</summary>
        public const int OffsetRangesFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.CommitOffsetRange> _repeated_offsetRanges_codec
            = pb::FieldCodec.ForMessage(18, global::Ydb.PersQueue.V1.CommitOffsetRange.Parser);
        private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.CommitOffsetRange> offsetRanges_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.CommitOffsetRange>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.PersQueue.V1.CommitOffsetRange> OffsetRanges {
          get { return offsetRanges_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Committed);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Committed other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!cookies_.Equals(other.cookies_)) return false;
          if(!offsetRanges_.Equals(other.offsetRanges_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= cookies_.GetHashCode();
          hash ^= offsetRanges_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          cookies_.WriteTo(output, _repeated_cookies_codec);
          offsetRanges_.WriteTo(output, _repeated_offsetRanges_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          cookies_.WriteTo(ref output, _repeated_cookies_codec);
          offsetRanges_.WriteTo(ref output, _repeated_offsetRanges_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += cookies_.CalculateSize(_repeated_cookies_codec);
          size += offsetRanges_.CalculateSize(_repeated_offsetRanges_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Committed other) {
          if (other == null) {
            return;
          }
          cookies_.Add(other.cookies_);
          offsetRanges_.Add(other.offsetRanges_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                cookies_.AddEntriesFrom(input, _repeated_cookies_codec);
                break;
              }
              case 18: {
                offsetRanges_.AddEntriesFrom(input, _repeated_offsetRanges_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                cookies_.AddEntriesFrom(ref input, _repeated_cookies_codec);
                break;
              }
              case 18: {
                offsetRanges_.AddEntriesFrom(ref input, _repeated_offsetRanges_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Readed data.
      /// </summary>
      public sealed partial class DataBatch : pb::IMessage<DataBatch>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DataBatch> _parser = new pb::MessageParser<DataBatch>(() => new DataBatch());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DataBatch> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataBatch() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataBatch(DataBatch other) : this() {
          partitionData_ = other.partitionData_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataBatch Clone() {
          return new DataBatch(this);
        }

        /// <summary>Field number for the "partition_data" field.</summary>
        public const int PartitionDataFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.PartitionData> _repeated_partitionData_codec
            = pb::FieldCodec.ForMessage(10, global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.PartitionData.Parser);
        private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.PartitionData> partitionData_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.PartitionData>();
        /// <summary>
        /// Client messages, divided by partitions.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.PartitionData> PartitionData {
          get { return partitionData_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DataBatch);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DataBatch other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!partitionData_.Equals(other.partitionData_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= partitionData_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          partitionData_.WriteTo(output, _repeated_partitionData_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          partitionData_.WriteTo(ref output, _repeated_partitionData_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += partitionData_.CalculateSize(_repeated_partitionData_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DataBatch other) {
          if (other == null) {
            return;
          }
          partitionData_.Add(other.partitionData_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                partitionData_.AddEntriesFrom(input, _repeated_partitionData_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                partitionData_.AddEntriesFrom(ref input, _repeated_partitionData_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the DataBatch message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// One client message representation.
          /// </summary>
          public sealed partial class MessageData : pb::IMessage<MessageData>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<MessageData> _parser = new pb::MessageParser<MessageData>(() => new MessageData());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<MessageData> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MessageData() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MessageData(MessageData other) : this() {
              offset_ = other.offset_;
              seqNo_ = other.seqNo_;
              createTimestampMs_ = other.createTimestampMs_;
              codec_ = other.codec_;
              data_ = other.data_;
              uncompressedSize_ = other.uncompressedSize_;
              partitionKey_ = other.partitionKey_;
              explicitHash_ = other.explicitHash_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MessageData Clone() {
              return new MessageData(this);
            }

            /// <summary>Field number for the "offset" field.</summary>
            public const int OffsetFieldNumber = 1;
            private ulong offset_;
            /// <summary>
            /// Partition offset in partition that assigned for message.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong Offset {
              get { return offset_; }
              set {
                offset_ = value;
              }
            }

            /// <summary>Field number for the "seq_no" field.</summary>
            public const int SeqNoFieldNumber = 2;
            private ulong seqNo_;
            /// <summary>
            /// Sequence number that provided with message on write from client.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong SeqNo {
              get { return seqNo_; }
              set {
                seqNo_ = value;
              }
            }

            /// <summary>Field number for the "create_timestamp_ms" field.</summary>
            public const int CreateTimestampMsFieldNumber = 3;
            private ulong createTimestampMs_;
            /// <summary>
            /// Timestamp of creation of message provided on write from client.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong CreateTimestampMs {
              get { return createTimestampMs_; }
              set {
                createTimestampMs_ = value;
              }
            }

            /// <summary>Field number for the "codec" field.</summary>
            public const int CodecFieldNumber = 4;
            private global::Ydb.PersQueue.V1.Codec codec_ = global::Ydb.PersQueue.V1.Codec.Unspecified;
            /// <summary>
            /// Codec that is used for data compressing.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Ydb.PersQueue.V1.Codec Codec {
              get { return codec_; }
              set {
                codec_ = value;
              }
            }

            /// <summary>Field number for the "data" field.</summary>
            public const int DataFieldNumber = 5;
            private pb::ByteString data_ = pb::ByteString.Empty;
            /// <summary>
            /// Compressed client message body.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString Data {
              get { return data_; }
              set {
                data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "uncompressed_size" field.</summary>
            public const int UncompressedSizeFieldNumber = 6;
            private ulong uncompressedSize_;
            /// <summary>
            /// Uncompressed size of client message body.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong UncompressedSize {
              get { return uncompressedSize_; }
              set {
                uncompressedSize_ = value;
              }
            }

            /// <summary>Field number for the "partition_key" field.</summary>
            public const int PartitionKeyFieldNumber = 7;
            private string partitionKey_ = "";
            /// <summary>
            /// kinesis data
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string PartitionKey {
              get { return partitionKey_; }
              set {
                partitionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "explicit_hash" field.</summary>
            public const int ExplicitHashFieldNumber = 8;
            private pb::ByteString explicitHash_ = pb::ByteString.Empty;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString ExplicitHash {
              get { return explicitHash_; }
              set {
                explicitHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as MessageData);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(MessageData other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Offset != other.Offset) return false;
              if (SeqNo != other.SeqNo) return false;
              if (CreateTimestampMs != other.CreateTimestampMs) return false;
              if (Codec != other.Codec) return false;
              if (Data != other.Data) return false;
              if (UncompressedSize != other.UncompressedSize) return false;
              if (PartitionKey != other.PartitionKey) return false;
              if (ExplicitHash != other.ExplicitHash) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Offset != 0UL) hash ^= Offset.GetHashCode();
              if (SeqNo != 0UL) hash ^= SeqNo.GetHashCode();
              if (CreateTimestampMs != 0UL) hash ^= CreateTimestampMs.GetHashCode();
              if (Codec != global::Ydb.PersQueue.V1.Codec.Unspecified) hash ^= Codec.GetHashCode();
              if (Data.Length != 0) hash ^= Data.GetHashCode();
              if (UncompressedSize != 0UL) hash ^= UncompressedSize.GetHashCode();
              if (PartitionKey.Length != 0) hash ^= PartitionKey.GetHashCode();
              if (ExplicitHash.Length != 0) hash ^= ExplicitHash.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Offset != 0UL) {
                output.WriteRawTag(8);
                output.WriteUInt64(Offset);
              }
              if (SeqNo != 0UL) {
                output.WriteRawTag(16);
                output.WriteUInt64(SeqNo);
              }
              if (CreateTimestampMs != 0UL) {
                output.WriteRawTag(24);
                output.WriteUInt64(CreateTimestampMs);
              }
              if (Codec != global::Ydb.PersQueue.V1.Codec.Unspecified) {
                output.WriteRawTag(32);
                output.WriteEnum((int) Codec);
              }
              if (Data.Length != 0) {
                output.WriteRawTag(42);
                output.WriteBytes(Data);
              }
              if (UncompressedSize != 0UL) {
                output.WriteRawTag(48);
                output.WriteUInt64(UncompressedSize);
              }
              if (PartitionKey.Length != 0) {
                output.WriteRawTag(58);
                output.WriteString(PartitionKey);
              }
              if (ExplicitHash.Length != 0) {
                output.WriteRawTag(66);
                output.WriteBytes(ExplicitHash);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Offset != 0UL) {
                output.WriteRawTag(8);
                output.WriteUInt64(Offset);
              }
              if (SeqNo != 0UL) {
                output.WriteRawTag(16);
                output.WriteUInt64(SeqNo);
              }
              if (CreateTimestampMs != 0UL) {
                output.WriteRawTag(24);
                output.WriteUInt64(CreateTimestampMs);
              }
              if (Codec != global::Ydb.PersQueue.V1.Codec.Unspecified) {
                output.WriteRawTag(32);
                output.WriteEnum((int) Codec);
              }
              if (Data.Length != 0) {
                output.WriteRawTag(42);
                output.WriteBytes(Data);
              }
              if (UncompressedSize != 0UL) {
                output.WriteRawTag(48);
                output.WriteUInt64(UncompressedSize);
              }
              if (PartitionKey.Length != 0) {
                output.WriteRawTag(58);
                output.WriteString(PartitionKey);
              }
              if (ExplicitHash.Length != 0) {
                output.WriteRawTag(66);
                output.WriteBytes(ExplicitHash);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Offset != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Offset);
              }
              if (SeqNo != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SeqNo);
              }
              if (CreateTimestampMs != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CreateTimestampMs);
              }
              if (Codec != global::Ydb.PersQueue.V1.Codec.Unspecified) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Codec);
              }
              if (Data.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
              }
              if (UncompressedSize != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UncompressedSize);
              }
              if (PartitionKey.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(PartitionKey);
              }
              if (ExplicitHash.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(ExplicitHash);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(MessageData other) {
              if (other == null) {
                return;
              }
              if (other.Offset != 0UL) {
                Offset = other.Offset;
              }
              if (other.SeqNo != 0UL) {
                SeqNo = other.SeqNo;
              }
              if (other.CreateTimestampMs != 0UL) {
                CreateTimestampMs = other.CreateTimestampMs;
              }
              if (other.Codec != global::Ydb.PersQueue.V1.Codec.Unspecified) {
                Codec = other.Codec;
              }
              if (other.Data.Length != 0) {
                Data = other.Data;
              }
              if (other.UncompressedSize != 0UL) {
                UncompressedSize = other.UncompressedSize;
              }
              if (other.PartitionKey.Length != 0) {
                PartitionKey = other.PartitionKey;
              }
              if (other.ExplicitHash.Length != 0) {
                ExplicitHash = other.ExplicitHash;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Offset = input.ReadUInt64();
                    break;
                  }
                  case 16: {
                    SeqNo = input.ReadUInt64();
                    break;
                  }
                  case 24: {
                    CreateTimestampMs = input.ReadUInt64();
                    break;
                  }
                  case 32: {
                    Codec = (global::Ydb.PersQueue.V1.Codec) input.ReadEnum();
                    break;
                  }
                  case 42: {
                    Data = input.ReadBytes();
                    break;
                  }
                  case 48: {
                    UncompressedSize = input.ReadUInt64();
                    break;
                  }
                  case 58: {
                    PartitionKey = input.ReadString();
                    break;
                  }
                  case 66: {
                    ExplicitHash = input.ReadBytes();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    Offset = input.ReadUInt64();
                    break;
                  }
                  case 16: {
                    SeqNo = input.ReadUInt64();
                    break;
                  }
                  case 24: {
                    CreateTimestampMs = input.ReadUInt64();
                    break;
                  }
                  case 32: {
                    Codec = (global::Ydb.PersQueue.V1.Codec) input.ReadEnum();
                    break;
                  }
                  case 42: {
                    Data = input.ReadBytes();
                    break;
                  }
                  case 48: {
                    UncompressedSize = input.ReadUInt64();
                    break;
                  }
                  case 58: {
                    PartitionKey = input.ReadString();
                    break;
                  }
                  case 66: {
                    ExplicitHash = input.ReadBytes();
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// Representation of sequence of client messages from one write session.
          /// </summary>
          public sealed partial class Batch : pb::IMessage<Batch>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Batch> _parser = new pb::MessageParser<Batch>(() => new Batch());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Batch> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Batch() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Batch(Batch other) : this() {
              sourceId_ = other.sourceId_;
              extraFields_ = other.extraFields_.Clone();
              writeTimestampMs_ = other.writeTimestampMs_;
              ip_ = other.ip_;
              messageData_ = other.messageData_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Batch Clone() {
              return new Batch(this);
            }

            /// <summary>Field number for the "source_id" field.</summary>
            public const int SourceIdFieldNumber = 2;
            private pb::ByteString sourceId_ = pb::ByteString.Empty;
            /// <summary>
            /// Source identifier provided by client for this batch of client messages.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString SourceId {
              get { return sourceId_; }
              set {
                sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "extra_fields" field.</summary>
            public const int ExtraFieldsFieldNumber = 3;
            private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.KeyValue> _repeated_extraFields_codec
                = pb::FieldCodec.ForMessage(26, global::Ydb.PersQueue.V1.KeyValue.Parser);
            private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.KeyValue> extraFields_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.KeyValue>();
            /// <summary>
            /// Client metadata attached to write session, the same for all messages in batch.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Ydb.PersQueue.V1.KeyValue> ExtraFields {
              get { return extraFields_; }
            }

            /// <summary>Field number for the "write_timestamp_ms" field.</summary>
            public const int WriteTimestampMsFieldNumber = 4;
            private ulong writeTimestampMs_;
            /// <summary>
            /// Persist timestamp on server for batch.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong WriteTimestampMs {
              get { return writeTimestampMs_; }
              set {
                writeTimestampMs_ = value;
              }
            }

            /// <summary>Field number for the "ip" field.</summary>
            public const int IpFieldNumber = 5;
            private string ip_ = "";
            /// <summary>
            /// Peer address of node that created write session.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Ip {
              get { return ip_; }
              set {
                ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "message_data" field.</summary>
            public const int MessageDataFieldNumber = 1;
            private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.MessageData> _repeated_messageData_codec
                = pb::FieldCodec.ForMessage(10, global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.MessageData.Parser);
            private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.MessageData> messageData_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.MessageData>();
            /// <summary>
            /// List of client messages.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.MessageData> MessageData {
              get { return messageData_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Batch);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Batch other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (SourceId != other.SourceId) return false;
              if(!extraFields_.Equals(other.extraFields_)) return false;
              if (WriteTimestampMs != other.WriteTimestampMs) return false;
              if (Ip != other.Ip) return false;
              if(!messageData_.Equals(other.messageData_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (SourceId.Length != 0) hash ^= SourceId.GetHashCode();
              hash ^= extraFields_.GetHashCode();
              if (WriteTimestampMs != 0UL) hash ^= WriteTimestampMs.GetHashCode();
              if (Ip.Length != 0) hash ^= Ip.GetHashCode();
              hash ^= messageData_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              messageData_.WriteTo(output, _repeated_messageData_codec);
              if (SourceId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteBytes(SourceId);
              }
              extraFields_.WriteTo(output, _repeated_extraFields_codec);
              if (WriteTimestampMs != 0UL) {
                output.WriteRawTag(32);
                output.WriteUInt64(WriteTimestampMs);
              }
              if (Ip.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(Ip);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              messageData_.WriteTo(ref output, _repeated_messageData_codec);
              if (SourceId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteBytes(SourceId);
              }
              extraFields_.WriteTo(ref output, _repeated_extraFields_codec);
              if (WriteTimestampMs != 0UL) {
                output.WriteRawTag(32);
                output.WriteUInt64(WriteTimestampMs);
              }
              if (Ip.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(Ip);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (SourceId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(SourceId);
              }
              size += extraFields_.CalculateSize(_repeated_extraFields_codec);
              if (WriteTimestampMs != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WriteTimestampMs);
              }
              if (Ip.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
              }
              size += messageData_.CalculateSize(_repeated_messageData_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Batch other) {
              if (other == null) {
                return;
              }
              if (other.SourceId.Length != 0) {
                SourceId = other.SourceId;
              }
              extraFields_.Add(other.extraFields_);
              if (other.WriteTimestampMs != 0UL) {
                WriteTimestampMs = other.WriteTimestampMs;
              }
              if (other.Ip.Length != 0) {
                Ip = other.Ip;
              }
              messageData_.Add(other.messageData_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    messageData_.AddEntriesFrom(input, _repeated_messageData_codec);
                    break;
                  }
                  case 18: {
                    SourceId = input.ReadBytes();
                    break;
                  }
                  case 26: {
                    extraFields_.AddEntriesFrom(input, _repeated_extraFields_codec);
                    break;
                  }
                  case 32: {
                    WriteTimestampMs = input.ReadUInt64();
                    break;
                  }
                  case 42: {
                    Ip = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    messageData_.AddEntriesFrom(ref input, _repeated_messageData_codec);
                    break;
                  }
                  case 18: {
                    SourceId = input.ReadBytes();
                    break;
                  }
                  case 26: {
                    extraFields_.AddEntriesFrom(ref input, _repeated_extraFields_codec);
                    break;
                  }
                  case 32: {
                    WriteTimestampMs = input.ReadUInt64();
                    break;
                  }
                  case 42: {
                    Ip = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// Representation of sequence of messages from one partition.
          /// </summary>
          public sealed partial class PartitionData : pb::IMessage<PartitionData>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<PartitionData> _parser = new pb::MessageParser<PartitionData>(() => new PartitionData());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<PartitionData> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PartitionData() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PartitionData(PartitionData other) : this() {
              topic_ = other.topic_ != null ? other.topic_.Clone() : null;
              cluster_ = other.cluster_;
              partition_ = other.partition_;
              batches_ = other.batches_.Clone();
              cookie_ = other.cookie_ != null ? other.cookie_.Clone() : null;
              deprecatedTopic_ = other.deprecatedTopic_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PartitionData Clone() {
              return new PartitionData(this);
            }

            /// <summary>Field number for the "topic" field.</summary>
            public const int TopicFieldNumber = 1;
            private global::Ydb.PersQueue.V1.Path topic_;
            /// <summary>
            /// Partition's topic path.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Ydb.PersQueue.V1.Path Topic {
              get { return topic_; }
              set {
                topic_ = value;
              }
            }

            /// <summary>Field number for the "cluster" field.</summary>
            public const int ClusterFieldNumber = 2;
            private string cluster_ = "";
            /// <summary>
            /// Topic's instance cluster name.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Cluster {
              get { return cluster_; }
              set {
                cluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "partition" field.</summary>
            public const int PartitionFieldNumber = 3;
            private ulong partition_;
            /// <summary>
            /// Partition identifier. topic:cluster:partition is unique addressing for partition.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong Partition {
              get { return partition_; }
              set {
                partition_ = value;
              }
            }

            /// <summary>Field number for the "batches" field.</summary>
            public const int BatchesFieldNumber = 4;
            private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.Batch> _repeated_batches_codec
                = pb::FieldCodec.ForMessage(34, global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.Batch.Parser);
            private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.Batch> batches_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.Batch>();
            /// <summary>
            /// Client messages, divided by write sessions.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Types.DataBatch.Types.Batch> Batches {
              get { return batches_; }
            }

            /// <summary>Field number for the "cookie" field.</summary>
            public const int CookieFieldNumber = 5;
            private global::Ydb.PersQueue.V1.CommitCookie cookie_;
            /// <summary>
            /// Cookie for addressing this partition messages batch for committing.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Ydb.PersQueue.V1.CommitCookie Cookie {
              get { return cookie_; }
              set {
                cookie_ = value;
              }
            }

            /// <summary>Field number for the "deprecated_topic" field.</summary>
            public const int DeprecatedTopicFieldNumber = 10;
            private string deprecatedTopic_ = "";
            /// <summary>
            /// Old formatted topic name with cluster inside.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string DeprecatedTopic {
              get { return deprecatedTopic_; }
              set {
                deprecatedTopic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as PartitionData);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(PartitionData other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Topic, other.Topic)) return false;
              if (Cluster != other.Cluster) return false;
              if (Partition != other.Partition) return false;
              if(!batches_.Equals(other.batches_)) return false;
              if (!object.Equals(Cookie, other.Cookie)) return false;
              if (DeprecatedTopic != other.DeprecatedTopic) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (topic_ != null) hash ^= Topic.GetHashCode();
              if (Cluster.Length != 0) hash ^= Cluster.GetHashCode();
              if (Partition != 0UL) hash ^= Partition.GetHashCode();
              hash ^= batches_.GetHashCode();
              if (cookie_ != null) hash ^= Cookie.GetHashCode();
              if (DeprecatedTopic.Length != 0) hash ^= DeprecatedTopic.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (topic_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Topic);
              }
              if (Cluster.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Cluster);
              }
              if (Partition != 0UL) {
                output.WriteRawTag(24);
                output.WriteUInt64(Partition);
              }
              batches_.WriteTo(output, _repeated_batches_codec);
              if (cookie_ != null) {
                output.WriteRawTag(42);
                output.WriteMessage(Cookie);
              }
              if (DeprecatedTopic.Length != 0) {
                output.WriteRawTag(82);
                output.WriteString(DeprecatedTopic);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (topic_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Topic);
              }
              if (Cluster.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Cluster);
              }
              if (Partition != 0UL) {
                output.WriteRawTag(24);
                output.WriteUInt64(Partition);
              }
              batches_.WriteTo(ref output, _repeated_batches_codec);
              if (cookie_ != null) {
                output.WriteRawTag(42);
                output.WriteMessage(Cookie);
              }
              if (DeprecatedTopic.Length != 0) {
                output.WriteRawTag(82);
                output.WriteString(DeprecatedTopic);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (topic_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
              }
              if (Cluster.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Cluster);
              }
              if (Partition != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Partition);
              }
              size += batches_.CalculateSize(_repeated_batches_codec);
              if (cookie_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cookie);
              }
              if (DeprecatedTopic.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DeprecatedTopic);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(PartitionData other) {
              if (other == null) {
                return;
              }
              if (other.topic_ != null) {
                if (topic_ == null) {
                  Topic = new global::Ydb.PersQueue.V1.Path();
                }
                Topic.MergeFrom(other.Topic);
              }
              if (other.Cluster.Length != 0) {
                Cluster = other.Cluster;
              }
              if (other.Partition != 0UL) {
                Partition = other.Partition;
              }
              batches_.Add(other.batches_);
              if (other.cookie_ != null) {
                if (cookie_ == null) {
                  Cookie = new global::Ydb.PersQueue.V1.CommitCookie();
                }
                Cookie.MergeFrom(other.Cookie);
              }
              if (other.DeprecatedTopic.Length != 0) {
                DeprecatedTopic = other.DeprecatedTopic;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (topic_ == null) {
                      Topic = new global::Ydb.PersQueue.V1.Path();
                    }
                    input.ReadMessage(Topic);
                    break;
                  }
                  case 18: {
                    Cluster = input.ReadString();
                    break;
                  }
                  case 24: {
                    Partition = input.ReadUInt64();
                    break;
                  }
                  case 34: {
                    batches_.AddEntriesFrom(input, _repeated_batches_codec);
                    break;
                  }
                  case 42: {
                    if (cookie_ == null) {
                      Cookie = new global::Ydb.PersQueue.V1.CommitCookie();
                    }
                    input.ReadMessage(Cookie);
                    break;
                  }
                  case 82: {
                    DeprecatedTopic = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (topic_ == null) {
                      Topic = new global::Ydb.PersQueue.V1.Path();
                    }
                    input.ReadMessage(Topic);
                    break;
                  }
                  case 18: {
                    Cluster = input.ReadString();
                    break;
                  }
                  case 24: {
                    Partition = input.ReadUInt64();
                    break;
                  }
                  case 34: {
                    batches_.AddEntriesFrom(ref input, _repeated_batches_codec);
                    break;
                  }
                  case 42: {
                    if (cookie_ == null) {
                      Cookie = new global::Ydb.PersQueue.V1.CommitCookie();
                    }
                    input.ReadMessage(Cookie);
                    break;
                  }
                  case 82: {
                    DeprecatedTopic = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Response for status requst.
      /// </summary>
      public sealed partial class PartitionStatus : pb::IMessage<PartitionStatus>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PartitionStatus> _parser = new pb::MessageParser<PartitionStatus>(() => new PartitionStatus());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PartitionStatus> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.MigrationStreamingReadServerMessage.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PartitionStatus() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PartitionStatus(PartitionStatus other) : this() {
          topic_ = other.topic_ != null ? other.topic_.Clone() : null;
          cluster_ = other.cluster_;
          partition_ = other.partition_;
          assignId_ = other.assignId_;
          committedOffset_ = other.committedOffset_;
          endOffset_ = other.endOffset_;
          writeWatermarkMs_ = other.writeWatermarkMs_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PartitionStatus Clone() {
          return new PartitionStatus(this);
        }

        /// <summary>Field number for the "topic" field.</summary>
        public const int TopicFieldNumber = 1;
        private global::Ydb.PersQueue.V1.Path topic_;
        /// <summary>
        /// Partition's topic path.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.PersQueue.V1.Path Topic {
          get { return topic_; }
          set {
            topic_ = value;
          }
        }

        /// <summary>Field number for the "cluster" field.</summary>
        public const int ClusterFieldNumber = 2;
        private string cluster_ = "";
        /// <summary>
        /// Topic's instance cluster name.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Cluster {
          get { return cluster_; }
          set {
            cluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "partition" field.</summary>
        public const int PartitionFieldNumber = 3;
        private ulong partition_;
        /// <summary>
        /// Partition identifier. topic:cluster:partition is unique addressing of partition.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Partition {
          get { return partition_; }
          set {
            partition_ = value;
          }
        }

        /// <summary>Field number for the "assign_id" field.</summary>
        public const int AssignIdFieldNumber = 5;
        private ulong assignId_;
        /// <summary>
        /// Assign idenfier. Used for matching Assigned and Release requests from server.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong AssignId {
          get { return assignId_; }
          set {
            assignId_ = value;
          }
        }

        /// <summary>Field number for the "committed_offset" field.</summary>
        public const int CommittedOffsetFieldNumber = 6;
        private ulong committedOffset_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong CommittedOffset {
          get { return committedOffset_; }
          set {
            committedOffset_ = value;
          }
        }

        /// <summary>Field number for the "end_offset" field.</summary>
        public const int EndOffsetFieldNumber = 7;
        private ulong endOffset_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong EndOffset {
          get { return endOffset_; }
          set {
            endOffset_ = value;
          }
        }

        /// <summary>Field number for the "write_watermark_ms" field.</summary>
        public const int WriteWatermarkMsFieldNumber = 8;
        private ulong writeWatermarkMs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong WriteWatermarkMs {
          get { return writeWatermarkMs_; }
          set {
            writeWatermarkMs_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PartitionStatus);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PartitionStatus other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Topic, other.Topic)) return false;
          if (Cluster != other.Cluster) return false;
          if (Partition != other.Partition) return false;
          if (AssignId != other.AssignId) return false;
          if (CommittedOffset != other.CommittedOffset) return false;
          if (EndOffset != other.EndOffset) return false;
          if (WriteWatermarkMs != other.WriteWatermarkMs) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (topic_ != null) hash ^= Topic.GetHashCode();
          if (Cluster.Length != 0) hash ^= Cluster.GetHashCode();
          if (Partition != 0UL) hash ^= Partition.GetHashCode();
          if (AssignId != 0UL) hash ^= AssignId.GetHashCode();
          if (CommittedOffset != 0UL) hash ^= CommittedOffset.GetHashCode();
          if (EndOffset != 0UL) hash ^= EndOffset.GetHashCode();
          if (WriteWatermarkMs != 0UL) hash ^= WriteWatermarkMs.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (topic_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Topic);
          }
          if (Cluster.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Cluster);
          }
          if (Partition != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(Partition);
          }
          if (AssignId != 0UL) {
            output.WriteRawTag(40);
            output.WriteUInt64(AssignId);
          }
          if (CommittedOffset != 0UL) {
            output.WriteRawTag(48);
            output.WriteUInt64(CommittedOffset);
          }
          if (EndOffset != 0UL) {
            output.WriteRawTag(56);
            output.WriteUInt64(EndOffset);
          }
          if (WriteWatermarkMs != 0UL) {
            output.WriteRawTag(64);
            output.WriteUInt64(WriteWatermarkMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (topic_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Topic);
          }
          if (Cluster.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Cluster);
          }
          if (Partition != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(Partition);
          }
          if (AssignId != 0UL) {
            output.WriteRawTag(40);
            output.WriteUInt64(AssignId);
          }
          if (CommittedOffset != 0UL) {
            output.WriteRawTag(48);
            output.WriteUInt64(CommittedOffset);
          }
          if (EndOffset != 0UL) {
            output.WriteRawTag(56);
            output.WriteUInt64(EndOffset);
          }
          if (WriteWatermarkMs != 0UL) {
            output.WriteRawTag(64);
            output.WriteUInt64(WriteWatermarkMs);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (topic_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
          }
          if (Cluster.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Cluster);
          }
          if (Partition != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Partition);
          }
          if (AssignId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AssignId);
          }
          if (CommittedOffset != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CommittedOffset);
          }
          if (EndOffset != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EndOffset);
          }
          if (WriteWatermarkMs != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WriteWatermarkMs);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PartitionStatus other) {
          if (other == null) {
            return;
          }
          if (other.topic_ != null) {
            if (topic_ == null) {
              Topic = new global::Ydb.PersQueue.V1.Path();
            }
            Topic.MergeFrom(other.Topic);
          }
          if (other.Cluster.Length != 0) {
            Cluster = other.Cluster;
          }
          if (other.Partition != 0UL) {
            Partition = other.Partition;
          }
          if (other.AssignId != 0UL) {
            AssignId = other.AssignId;
          }
          if (other.CommittedOffset != 0UL) {
            CommittedOffset = other.CommittedOffset;
          }
          if (other.EndOffset != 0UL) {
            EndOffset = other.EndOffset;
          }
          if (other.WriteWatermarkMs != 0UL) {
            WriteWatermarkMs = other.WriteWatermarkMs;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (topic_ == null) {
                  Topic = new global::Ydb.PersQueue.V1.Path();
                }
                input.ReadMessage(Topic);
                break;
              }
              case 18: {
                Cluster = input.ReadString();
                break;
              }
              case 24: {
                Partition = input.ReadUInt64();
                break;
              }
              case 40: {
                AssignId = input.ReadUInt64();
                break;
              }
              case 48: {
                CommittedOffset = input.ReadUInt64();
                break;
              }
              case 56: {
                EndOffset = input.ReadUInt64();
                break;
              }
              case 64: {
                WriteWatermarkMs = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (topic_ == null) {
                  Topic = new global::Ydb.PersQueue.V1.Path();
                }
                input.ReadMessage(Topic);
                break;
              }
              case 18: {
                Cluster = input.ReadString();
                break;
              }
              case 24: {
                Partition = input.ReadUInt64();
                break;
              }
              case 40: {
                AssignId = input.ReadUInt64();
                break;
              }
              case 48: {
                CommittedOffset = input.ReadUInt64();
                break;
              }
              case 56: {
                EndOffset = input.ReadUInt64();
                break;
              }
              case 64: {
                WriteWatermarkMs = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class ReadInfoRequest : pb::IMessage<ReadInfoRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadInfoRequest> _parser = new pb::MessageParser<ReadInfoRequest>(() => new ReadInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadInfoRequest(ReadInfoRequest other) : this() {
      operationParams_ = other.operationParams_ != null ? other.operationParams_.Clone() : null;
      topics_ = other.topics_.Clone();
      getOnlyOriginal_ = other.getOnlyOriginal_;
      consumer_ = other.consumer_ != null ? other.consumer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadInfoRequest Clone() {
      return new ReadInfoRequest(this);
    }

    /// <summary>Field number for the "operation_params" field.</summary>
    public const int OperationParamsFieldNumber = 1;
    private global::Ydb.Operations.OperationParams operationParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.OperationParams OperationParams {
      get { return operationParams_; }
      set {
        operationParams_ = value;
      }
    }

    /// <summary>Field number for the "topics" field.</summary>
    public const int TopicsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.Path> _repeated_topics_codec
        = pb::FieldCodec.ForMessage(18, global::Ydb.PersQueue.V1.Path.Parser);
    private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.Path> topics_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.Path>();
    /// <summary>
    /// List of topics that are beeing read.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.PersQueue.V1.Path> Topics {
      get { return topics_; }
    }

    /// <summary>Field number for the "get_only_original" field.</summary>
    public const int GetOnlyOriginalFieldNumber = 3;
    private bool getOnlyOriginal_;
    /// <summary>
    /// If get_only_original == false then return info about mirrored topics too.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool GetOnlyOriginal {
      get { return getOnlyOriginal_; }
      set {
        getOnlyOriginal_ = value;
      }
    }

    /// <summary>Field number for the "consumer" field.</summary>
    public const int ConsumerFieldNumber = 4;
    private global::Ydb.PersQueue.V1.Path consumer_;
    /// <summary>
    /// Consumer path that is reading specified topics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.Path Consumer {
      get { return consumer_; }
      set {
        consumer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OperationParams, other.OperationParams)) return false;
      if(!topics_.Equals(other.topics_)) return false;
      if (GetOnlyOriginal != other.GetOnlyOriginal) return false;
      if (!object.Equals(Consumer, other.Consumer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operationParams_ != null) hash ^= OperationParams.GetHashCode();
      hash ^= topics_.GetHashCode();
      if (GetOnlyOriginal != false) hash ^= GetOnlyOriginal.GetHashCode();
      if (consumer_ != null) hash ^= Consumer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operationParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OperationParams);
      }
      topics_.WriteTo(output, _repeated_topics_codec);
      if (GetOnlyOriginal != false) {
        output.WriteRawTag(24);
        output.WriteBool(GetOnlyOriginal);
      }
      if (consumer_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Consumer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operationParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OperationParams);
      }
      topics_.WriteTo(ref output, _repeated_topics_codec);
      if (GetOnlyOriginal != false) {
        output.WriteRawTag(24);
        output.WriteBool(GetOnlyOriginal);
      }
      if (consumer_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Consumer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operationParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperationParams);
      }
      size += topics_.CalculateSize(_repeated_topics_codec);
      if (GetOnlyOriginal != false) {
        size += 1 + 1;
      }
      if (consumer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Consumer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.operationParams_ != null) {
        if (operationParams_ == null) {
          OperationParams = new global::Ydb.Operations.OperationParams();
        }
        OperationParams.MergeFrom(other.OperationParams);
      }
      topics_.Add(other.topics_);
      if (other.GetOnlyOriginal != false) {
        GetOnlyOriginal = other.GetOnlyOriginal;
      }
      if (other.consumer_ != null) {
        if (consumer_ == null) {
          Consumer = new global::Ydb.PersQueue.V1.Path();
        }
        Consumer.MergeFrom(other.Consumer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
          case 18: {
            topics_.AddEntriesFrom(input, _repeated_topics_codec);
            break;
          }
          case 24: {
            GetOnlyOriginal = input.ReadBool();
            break;
          }
          case 34: {
            if (consumer_ == null) {
              Consumer = new global::Ydb.PersQueue.V1.Path();
            }
            input.ReadMessage(Consumer);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
          case 18: {
            topics_.AddEntriesFrom(ref input, _repeated_topics_codec);
            break;
          }
          case 24: {
            GetOnlyOriginal = input.ReadBool();
            break;
          }
          case 34: {
            if (consumer_ == null) {
              Consumer = new global::Ydb.PersQueue.V1.Path();
            }
            input.ReadMessage(Consumer);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReadInfoResponse : pb::IMessage<ReadInfoResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadInfoResponse> _parser = new pb::MessageParser<ReadInfoResponse>(() => new ReadInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadInfoResponse(ReadInfoResponse other) : this() {
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadInfoResponse Clone() {
      return new ReadInfoResponse(this);
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 1;
    private global::Ydb.Operations.Operation operation_;
    /// <summary>
    /// Result of request will be inside operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.Operation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Operation, other.Operation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::Ydb.Operations.Operation();
        }
        Operation.MergeFrom(other.Operation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReadInfoResult : pb::IMessage<ReadInfoResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadInfoResult> _parser = new pb::MessageParser<ReadInfoResult>(() => new ReadInfoResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadInfoResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadInfoResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadInfoResult(ReadInfoResult other) : this() {
      topics_ = other.topics_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadInfoResult Clone() {
      return new ReadInfoResult(this);
    }

    /// <summary>Field number for the "topics" field.</summary>
    public const int TopicsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.ReadInfoResult.Types.TopicInfo> _repeated_topics_codec
        = pb::FieldCodec.ForMessage(10, global::Ydb.PersQueue.V1.ReadInfoResult.Types.TopicInfo.Parser);
    private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.ReadInfoResult.Types.TopicInfo> topics_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.ReadInfoResult.Types.TopicInfo>();
    /// <summary>
    /// List of topics info.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.PersQueue.V1.ReadInfoResult.Types.TopicInfo> Topics {
      get { return topics_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadInfoResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadInfoResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!topics_.Equals(other.topics_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= topics_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      topics_.WriteTo(output, _repeated_topics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      topics_.WriteTo(ref output, _repeated_topics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += topics_.CalculateSize(_repeated_topics_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadInfoResult other) {
      if (other == null) {
        return;
      }
      topics_.Add(other.topics_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            topics_.AddEntriesFrom(input, _repeated_topics_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            topics_.AddEntriesFrom(ref input, _repeated_topics_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ReadInfoResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Message containing information about concrete topic reading.
      /// </summary>
      public sealed partial class TopicInfo : pb::IMessage<TopicInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TopicInfo> _parser = new pb::MessageParser<TopicInfo>(() => new TopicInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TopicInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.ReadInfoResult.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TopicInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TopicInfo(TopicInfo other) : this() {
          topic_ = other.topic_ != null ? other.topic_.Clone() : null;
          cluster_ = other.cluster_;
          status_ = other.status_;
          issues_ = other.issues_.Clone();
          partitions_ = other.partitions_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TopicInfo Clone() {
          return new TopicInfo(this);
        }

        /// <summary>Field number for the "topic" field.</summary>
        public const int TopicFieldNumber = 1;
        private global::Ydb.PersQueue.V1.Path topic_;
        /// <summary>
        /// Topic path.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.PersQueue.V1.Path Topic {
          get { return topic_; }
          set {
            topic_ = value;
          }
        }

        /// <summary>Field number for the "cluster" field.</summary>
        public const int ClusterFieldNumber = 2;
        private string cluster_ = "";
        /// <summary>
        /// Topic original cluster.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Cluster {
          get { return cluster_; }
          set {
            cluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 3;
        private global::Ydb.StatusIds.Types.StatusCode status_ = global::Ydb.StatusIds.Types.StatusCode.Unspecified;
        /// <summary>
        /// Status of whole topic.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.StatusIds.Types.StatusCode Status {
          get { return status_; }
          set {
            status_ = value;
          }
        }

        /// <summary>Field number for the "issues" field.</summary>
        public const int IssuesFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Ydb.Issue.IssueMessage> _repeated_issues_codec
            = pb::FieldCodec.ForMessage(34, global::Ydb.Issue.IssueMessage.Parser);
        private readonly pbc::RepeatedField<global::Ydb.Issue.IssueMessage> issues_ = new pbc::RepeatedField<global::Ydb.Issue.IssueMessage>();
        /// <summary>
        /// Issues if any.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.Issue.IssueMessage> Issues {
          get { return issues_; }
        }

        /// <summary>Field number for the "partitions" field.</summary>
        public const int PartitionsFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.ReadInfoResult.Types.TopicInfo.Types.PartitionInfo> _repeated_partitions_codec
            = pb::FieldCodec.ForMessage(42, global::Ydb.PersQueue.V1.ReadInfoResult.Types.TopicInfo.Types.PartitionInfo.Parser);
        private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.ReadInfoResult.Types.TopicInfo.Types.PartitionInfo> partitions_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.ReadInfoResult.Types.TopicInfo.Types.PartitionInfo>();
        /// <summary>
        /// Reading info for partitions of this topic.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.PersQueue.V1.ReadInfoResult.Types.TopicInfo.Types.PartitionInfo> Partitions {
          get { return partitions_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TopicInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TopicInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Topic, other.Topic)) return false;
          if (Cluster != other.Cluster) return false;
          if (Status != other.Status) return false;
          if(!issues_.Equals(other.issues_)) return false;
          if(!partitions_.Equals(other.partitions_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (topic_ != null) hash ^= Topic.GetHashCode();
          if (Cluster.Length != 0) hash ^= Cluster.GetHashCode();
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) hash ^= Status.GetHashCode();
          hash ^= issues_.GetHashCode();
          hash ^= partitions_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (topic_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Topic);
          }
          if (Cluster.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Cluster);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Status);
          }
          issues_.WriteTo(output, _repeated_issues_codec);
          partitions_.WriteTo(output, _repeated_partitions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (topic_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Topic);
          }
          if (Cluster.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Cluster);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Status);
          }
          issues_.WriteTo(ref output, _repeated_issues_codec);
          partitions_.WriteTo(ref output, _repeated_partitions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (topic_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
          }
          if (Cluster.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Cluster);
          }
          if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
          }
          size += issues_.CalculateSize(_repeated_issues_codec);
          size += partitions_.CalculateSize(_repeated_partitions_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TopicInfo other) {
          if (other == null) {
            return;
          }
          if (other.topic_ != null) {
            if (topic_ == null) {
              Topic = new global::Ydb.PersQueue.V1.Path();
            }
            Topic.MergeFrom(other.Topic);
          }
          if (other.Cluster.Length != 0) {
            Cluster = other.Cluster;
          }
          if (other.Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
            Status = other.Status;
          }
          issues_.Add(other.issues_);
          partitions_.Add(other.partitions_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (topic_ == null) {
                  Topic = new global::Ydb.PersQueue.V1.Path();
                }
                input.ReadMessage(Topic);
                break;
              }
              case 18: {
                Cluster = input.ReadString();
                break;
              }
              case 24: {
                Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
                break;
              }
              case 34: {
                issues_.AddEntriesFrom(input, _repeated_issues_codec);
                break;
              }
              case 42: {
                partitions_.AddEntriesFrom(input, _repeated_partitions_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (topic_ == null) {
                  Topic = new global::Ydb.PersQueue.V1.Path();
                }
                input.ReadMessage(Topic);
                break;
              }
              case 18: {
                Cluster = input.ReadString();
                break;
              }
              case 24: {
                Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
                break;
              }
              case 34: {
                issues_.AddEntriesFrom(ref input, _repeated_issues_codec);
                break;
              }
              case 42: {
                partitions_.AddEntriesFrom(ref input, _repeated_partitions_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the TopicInfo message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Message containing information about concrete topic's partition reading.
          /// </summary>
          public sealed partial class PartitionInfo : pb::IMessage<PartitionInfo>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<PartitionInfo> _parser = new pb::MessageParser<PartitionInfo>(() => new PartitionInfo());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<PartitionInfo> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Ydb.PersQueue.V1.ReadInfoResult.Types.TopicInfo.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PartitionInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PartitionInfo(PartitionInfo other) : this() {
              partition_ = other.partition_;
              status_ = other.status_;
              issues_ = other.issues_.Clone();
              startOffset_ = other.startOffset_;
              endOffset_ = other.endOffset_;
              commitOffset_ = other.commitOffset_;
              commitTimeLagMs_ = other.commitTimeLagMs_;
              readOffset_ = other.readOffset_;
              readTimeLagMs_ = other.readTimeLagMs_;
              sessionId_ = other.sessionId_;
              clientNode_ = other.clientNode_;
              proxyNode_ = other.proxyNode_;
              tabletNode_ = other.tabletNode_;
              assignId_ = other.assignId_;
              assignTimestampMs_ = other.assignTimestampMs_;
              lastReadCookie_ = other.lastReadCookie_;
              committedReadCookie_ = other.committedReadCookie_;
              outOfOrderReadCookiesToCommit_ = other.outOfOrderReadCookiesToCommit_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PartitionInfo Clone() {
              return new PartitionInfo(this);
            }

            /// <summary>Field number for the "partition" field.</summary>
            public const int PartitionFieldNumber = 1;
            private ulong partition_;
            /// <summary>
            /// Patition identifier inside topic.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong Partition {
              get { return partition_; }
              set {
                partition_ = value;
              }
            }

            /// <summary>Field number for the "status" field.</summary>
            public const int StatusFieldNumber = 2;
            private global::Ydb.StatusIds.Types.StatusCode status_ = global::Ydb.StatusIds.Types.StatusCode.Unspecified;
            /// <summary>
            /// Request status of partition.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Ydb.StatusIds.Types.StatusCode Status {
              get { return status_; }
              set {
                status_ = value;
              }
            }

            /// <summary>Field number for the "issues" field.</summary>
            public const int IssuesFieldNumber = 3;
            private static readonly pb::FieldCodec<global::Ydb.Issue.IssueMessage> _repeated_issues_codec
                = pb::FieldCodec.ForMessage(26, global::Ydb.Issue.IssueMessage.Parser);
            private readonly pbc::RepeatedField<global::Ydb.Issue.IssueMessage> issues_ = new pbc::RepeatedField<global::Ydb.Issue.IssueMessage>();
            /// <summary>
            /// Issues if any.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Ydb.Issue.IssueMessage> Issues {
              get { return issues_; }
            }

            /// <summary>Field number for the "start_offset" field.</summary>
            public const int StartOffsetFieldNumber = 4;
            private ulong startOffset_;
            /// <summary>
            /// Offset of first message in partition.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong StartOffset {
              get { return startOffset_; }
              set {
                startOffset_ = value;
              }
            }

            /// <summary>Field number for the "end_offset" field.</summary>
            public const int EndOffsetFieldNumber = 5;
            private ulong endOffset_;
            /// <summary>
            /// Offset of next not yet existing message in partition.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong EndOffset {
              get { return endOffset_; }
              set {
                endOffset_ = value;
              }
            }

            /// <summary>Field number for the "commit_offset" field.</summary>
            public const int CommitOffsetFieldNumber = 6;
            private ulong commitOffset_;
            /// <summary>
            /// Offset of consumer committed message a.k.a. first not processed message.
            /// If commit_offset == end_offset then all messages from partition are processed.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong CommitOffset {
              get { return commitOffset_; }
              set {
                commitOffset_ = value;
              }
            }

            /// <summary>Field number for the "commit_time_lag_ms" field.</summary>
            public const int CommitTimeLagMsFieldNumber = 7;
            private ulong commitTimeLagMs_;
            /// <summary>
            /// Consumer lag in time between committed and last messages in partition.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong CommitTimeLagMs {
              get { return commitTimeLagMs_; }
              set {
                commitTimeLagMs_ = value;
              }
            }

            /// <summary>Field number for the "read_offset" field.</summary>
            public const int ReadOffsetFieldNumber = 8;
            private ulong readOffset_;
            /// <summary>
            /// Offset of first not read message by consumer from this partition.
            /// read_offset can be bigger that committed_offset - consumer could read some messages but not yet commit them.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong ReadOffset {
              get { return readOffset_; }
              set {
                readOffset_ = value;
              }
            }

            /// <summary>Field number for the "read_time_lag_ms" field.</summary>
            public const int ReadTimeLagMsFieldNumber = 9;
            private ulong readTimeLagMs_;
            /// <summary>
            /// Consumer lag in time between read and last messages in partition.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong ReadTimeLagMs {
              get { return readTimeLagMs_; }
              set {
                readTimeLagMs_ = value;
              }
            }

            /// <summary>Field number for the "session_id" field.</summary>
            public const int SessionIdFieldNumber = 10;
            private string sessionId_ = "";
            /// <summary>
            /// Session identifier that locked and reading this partition right now.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string SessionId {
              get { return sessionId_; }
              set {
                sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "client_node" field.</summary>
            public const int ClientNodeFieldNumber = 11;
            private string clientNode_ = "";
            /// <summary>
            /// Ip if node that created reading this session.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ClientNode {
              get { return clientNode_; }
              set {
                clientNode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "proxy_node" field.</summary>
            public const int ProxyNodeFieldNumber = 12;
            private string proxyNode_ = "";
            /// <summary>
            /// Host name of proxy node that processing this reading session.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ProxyNode {
              get { return proxyNode_; }
              set {
                proxyNode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "tablet_node" field.</summary>
            public const int TabletNodeFieldNumber = 13;
            private string tabletNode_ = "";
            /// <summary>
            /// Host name of node where partition master is running.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string TabletNode {
              get { return tabletNode_; }
              set {
                tabletNode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "assign_id" field.</summary>
            public const int AssignIdFieldNumber = 14;
            private ulong assignId_;
            /// <summary>
            /// Assign identifier of actual partition assignment.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong AssignId {
              get { return assignId_; }
              set {
                assignId_ = value;
              }
            }

            /// <summary>Field number for the "assign_timestamp_ms" field.</summary>
            public const int AssignTimestampMsFieldNumber = 15;
            private ulong assignTimestampMs_;
            /// <summary>
            /// Timestamp of assignment.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong AssignTimestampMs {
              get { return assignTimestampMs_; }
              set {
                assignTimestampMs_ = value;
              }
            }

            /// <summary>Field number for the "last_read_cookie" field.</summary>
            public const int LastReadCookieFieldNumber = 16;
            private ulong lastReadCookie_;
            /// <summary>
            /// Cookie of last performed read in session.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong LastReadCookie {
              get { return lastReadCookie_; }
              set {
                lastReadCookie_ = value;
              }
            }

            /// <summary>Field number for the "committed_read_cookie" field.</summary>
            public const int CommittedReadCookieFieldNumber = 17;
            private ulong committedReadCookie_;
            /// <summary>
            /// Cookie upto whitch commits done.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong CommittedReadCookie {
              get { return committedReadCookie_; }
              set {
                committedReadCookie_ = value;
              }
            }

            /// <summary>Field number for the "out_of_order_read_cookies_to_commit" field.</summary>
            public const int OutOfOrderReadCookiesToCommitFieldNumber = 18;
            private static readonly pb::FieldCodec<ulong> _repeated_outOfOrderReadCookiesToCommit_codec
                = pb::FieldCodec.ForUInt64(146);
            private readonly pbc::RepeatedField<ulong> outOfOrderReadCookiesToCommit_ = new pbc::RepeatedField<ulong>();
            /// <summary>
            /// Cookie that client wants to commit, but server is waiting for committed_read_cookie + 1.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<ulong> OutOfOrderReadCookiesToCommit {
              get { return outOfOrderReadCookiesToCommit_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as PartitionInfo);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(PartitionInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Partition != other.Partition) return false;
              if (Status != other.Status) return false;
              if(!issues_.Equals(other.issues_)) return false;
              if (StartOffset != other.StartOffset) return false;
              if (EndOffset != other.EndOffset) return false;
              if (CommitOffset != other.CommitOffset) return false;
              if (CommitTimeLagMs != other.CommitTimeLagMs) return false;
              if (ReadOffset != other.ReadOffset) return false;
              if (ReadTimeLagMs != other.ReadTimeLagMs) return false;
              if (SessionId != other.SessionId) return false;
              if (ClientNode != other.ClientNode) return false;
              if (ProxyNode != other.ProxyNode) return false;
              if (TabletNode != other.TabletNode) return false;
              if (AssignId != other.AssignId) return false;
              if (AssignTimestampMs != other.AssignTimestampMs) return false;
              if (LastReadCookie != other.LastReadCookie) return false;
              if (CommittedReadCookie != other.CommittedReadCookie) return false;
              if(!outOfOrderReadCookiesToCommit_.Equals(other.outOfOrderReadCookiesToCommit_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Partition != 0UL) hash ^= Partition.GetHashCode();
              if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) hash ^= Status.GetHashCode();
              hash ^= issues_.GetHashCode();
              if (StartOffset != 0UL) hash ^= StartOffset.GetHashCode();
              if (EndOffset != 0UL) hash ^= EndOffset.GetHashCode();
              if (CommitOffset != 0UL) hash ^= CommitOffset.GetHashCode();
              if (CommitTimeLagMs != 0UL) hash ^= CommitTimeLagMs.GetHashCode();
              if (ReadOffset != 0UL) hash ^= ReadOffset.GetHashCode();
              if (ReadTimeLagMs != 0UL) hash ^= ReadTimeLagMs.GetHashCode();
              if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
              if (ClientNode.Length != 0) hash ^= ClientNode.GetHashCode();
              if (ProxyNode.Length != 0) hash ^= ProxyNode.GetHashCode();
              if (TabletNode.Length != 0) hash ^= TabletNode.GetHashCode();
              if (AssignId != 0UL) hash ^= AssignId.GetHashCode();
              if (AssignTimestampMs != 0UL) hash ^= AssignTimestampMs.GetHashCode();
              if (LastReadCookie != 0UL) hash ^= LastReadCookie.GetHashCode();
              if (CommittedReadCookie != 0UL) hash ^= CommittedReadCookie.GetHashCode();
              hash ^= outOfOrderReadCookiesToCommit_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Partition != 0UL) {
                output.WriteRawTag(8);
                output.WriteUInt64(Partition);
              }
              if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
                output.WriteRawTag(16);
                output.WriteEnum((int) Status);
              }
              issues_.WriteTo(output, _repeated_issues_codec);
              if (StartOffset != 0UL) {
                output.WriteRawTag(32);
                output.WriteUInt64(StartOffset);
              }
              if (EndOffset != 0UL) {
                output.WriteRawTag(40);
                output.WriteUInt64(EndOffset);
              }
              if (CommitOffset != 0UL) {
                output.WriteRawTag(48);
                output.WriteUInt64(CommitOffset);
              }
              if (CommitTimeLagMs != 0UL) {
                output.WriteRawTag(56);
                output.WriteUInt64(CommitTimeLagMs);
              }
              if (ReadOffset != 0UL) {
                output.WriteRawTag(64);
                output.WriteUInt64(ReadOffset);
              }
              if (ReadTimeLagMs != 0UL) {
                output.WriteRawTag(72);
                output.WriteUInt64(ReadTimeLagMs);
              }
              if (SessionId.Length != 0) {
                output.WriteRawTag(82);
                output.WriteString(SessionId);
              }
              if (ClientNode.Length != 0) {
                output.WriteRawTag(90);
                output.WriteString(ClientNode);
              }
              if (ProxyNode.Length != 0) {
                output.WriteRawTag(98);
                output.WriteString(ProxyNode);
              }
              if (TabletNode.Length != 0) {
                output.WriteRawTag(106);
                output.WriteString(TabletNode);
              }
              if (AssignId != 0UL) {
                output.WriteRawTag(112);
                output.WriteUInt64(AssignId);
              }
              if (AssignTimestampMs != 0UL) {
                output.WriteRawTag(120);
                output.WriteUInt64(AssignTimestampMs);
              }
              if (LastReadCookie != 0UL) {
                output.WriteRawTag(128, 1);
                output.WriteUInt64(LastReadCookie);
              }
              if (CommittedReadCookie != 0UL) {
                output.WriteRawTag(136, 1);
                output.WriteUInt64(CommittedReadCookie);
              }
              outOfOrderReadCookiesToCommit_.WriteTo(output, _repeated_outOfOrderReadCookiesToCommit_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Partition != 0UL) {
                output.WriteRawTag(8);
                output.WriteUInt64(Partition);
              }
              if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
                output.WriteRawTag(16);
                output.WriteEnum((int) Status);
              }
              issues_.WriteTo(ref output, _repeated_issues_codec);
              if (StartOffset != 0UL) {
                output.WriteRawTag(32);
                output.WriteUInt64(StartOffset);
              }
              if (EndOffset != 0UL) {
                output.WriteRawTag(40);
                output.WriteUInt64(EndOffset);
              }
              if (CommitOffset != 0UL) {
                output.WriteRawTag(48);
                output.WriteUInt64(CommitOffset);
              }
              if (CommitTimeLagMs != 0UL) {
                output.WriteRawTag(56);
                output.WriteUInt64(CommitTimeLagMs);
              }
              if (ReadOffset != 0UL) {
                output.WriteRawTag(64);
                output.WriteUInt64(ReadOffset);
              }
              if (ReadTimeLagMs != 0UL) {
                output.WriteRawTag(72);
                output.WriteUInt64(ReadTimeLagMs);
              }
              if (SessionId.Length != 0) {
                output.WriteRawTag(82);
                output.WriteString(SessionId);
              }
              if (ClientNode.Length != 0) {
                output.WriteRawTag(90);
                output.WriteString(ClientNode);
              }
              if (ProxyNode.Length != 0) {
                output.WriteRawTag(98);
                output.WriteString(ProxyNode);
              }
              if (TabletNode.Length != 0) {
                output.WriteRawTag(106);
                output.WriteString(TabletNode);
              }
              if (AssignId != 0UL) {
                output.WriteRawTag(112);
                output.WriteUInt64(AssignId);
              }
              if (AssignTimestampMs != 0UL) {
                output.WriteRawTag(120);
                output.WriteUInt64(AssignTimestampMs);
              }
              if (LastReadCookie != 0UL) {
                output.WriteRawTag(128, 1);
                output.WriteUInt64(LastReadCookie);
              }
              if (CommittedReadCookie != 0UL) {
                output.WriteRawTag(136, 1);
                output.WriteUInt64(CommittedReadCookie);
              }
              outOfOrderReadCookiesToCommit_.WriteTo(ref output, _repeated_outOfOrderReadCookiesToCommit_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Partition != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Partition);
              }
              if (Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
              }
              size += issues_.CalculateSize(_repeated_issues_codec);
              if (StartOffset != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StartOffset);
              }
              if (EndOffset != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EndOffset);
              }
              if (CommitOffset != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CommitOffset);
              }
              if (CommitTimeLagMs != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CommitTimeLagMs);
              }
              if (ReadOffset != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReadOffset);
              }
              if (ReadTimeLagMs != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ReadTimeLagMs);
              }
              if (SessionId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
              }
              if (ClientNode.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientNode);
              }
              if (ProxyNode.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ProxyNode);
              }
              if (TabletNode.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TabletNode);
              }
              if (AssignId != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AssignId);
              }
              if (AssignTimestampMs != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AssignTimestampMs);
              }
              if (LastReadCookie != 0UL) {
                size += 2 + pb::CodedOutputStream.ComputeUInt64Size(LastReadCookie);
              }
              if (CommittedReadCookie != 0UL) {
                size += 2 + pb::CodedOutputStream.ComputeUInt64Size(CommittedReadCookie);
              }
              size += outOfOrderReadCookiesToCommit_.CalculateSize(_repeated_outOfOrderReadCookiesToCommit_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(PartitionInfo other) {
              if (other == null) {
                return;
              }
              if (other.Partition != 0UL) {
                Partition = other.Partition;
              }
              if (other.Status != global::Ydb.StatusIds.Types.StatusCode.Unspecified) {
                Status = other.Status;
              }
              issues_.Add(other.issues_);
              if (other.StartOffset != 0UL) {
                StartOffset = other.StartOffset;
              }
              if (other.EndOffset != 0UL) {
                EndOffset = other.EndOffset;
              }
              if (other.CommitOffset != 0UL) {
                CommitOffset = other.CommitOffset;
              }
              if (other.CommitTimeLagMs != 0UL) {
                CommitTimeLagMs = other.CommitTimeLagMs;
              }
              if (other.ReadOffset != 0UL) {
                ReadOffset = other.ReadOffset;
              }
              if (other.ReadTimeLagMs != 0UL) {
                ReadTimeLagMs = other.ReadTimeLagMs;
              }
              if (other.SessionId.Length != 0) {
                SessionId = other.SessionId;
              }
              if (other.ClientNode.Length != 0) {
                ClientNode = other.ClientNode;
              }
              if (other.ProxyNode.Length != 0) {
                ProxyNode = other.ProxyNode;
              }
              if (other.TabletNode.Length != 0) {
                TabletNode = other.TabletNode;
              }
              if (other.AssignId != 0UL) {
                AssignId = other.AssignId;
              }
              if (other.AssignTimestampMs != 0UL) {
                AssignTimestampMs = other.AssignTimestampMs;
              }
              if (other.LastReadCookie != 0UL) {
                LastReadCookie = other.LastReadCookie;
              }
              if (other.CommittedReadCookie != 0UL) {
                CommittedReadCookie = other.CommittedReadCookie;
              }
              outOfOrderReadCookiesToCommit_.Add(other.outOfOrderReadCookiesToCommit_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Partition = input.ReadUInt64();
                    break;
                  }
                  case 16: {
                    Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
                    break;
                  }
                  case 26: {
                    issues_.AddEntriesFrom(input, _repeated_issues_codec);
                    break;
                  }
                  case 32: {
                    StartOffset = input.ReadUInt64();
                    break;
                  }
                  case 40: {
                    EndOffset = input.ReadUInt64();
                    break;
                  }
                  case 48: {
                    CommitOffset = input.ReadUInt64();
                    break;
                  }
                  case 56: {
                    CommitTimeLagMs = input.ReadUInt64();
                    break;
                  }
                  case 64: {
                    ReadOffset = input.ReadUInt64();
                    break;
                  }
                  case 72: {
                    ReadTimeLagMs = input.ReadUInt64();
                    break;
                  }
                  case 82: {
                    SessionId = input.ReadString();
                    break;
                  }
                  case 90: {
                    ClientNode = input.ReadString();
                    break;
                  }
                  case 98: {
                    ProxyNode = input.ReadString();
                    break;
                  }
                  case 106: {
                    TabletNode = input.ReadString();
                    break;
                  }
                  case 112: {
                    AssignId = input.ReadUInt64();
                    break;
                  }
                  case 120: {
                    AssignTimestampMs = input.ReadUInt64();
                    break;
                  }
                  case 128: {
                    LastReadCookie = input.ReadUInt64();
                    break;
                  }
                  case 136: {
                    CommittedReadCookie = input.ReadUInt64();
                    break;
                  }
                  case 146:
                  case 144: {
                    outOfOrderReadCookiesToCommit_.AddEntriesFrom(input, _repeated_outOfOrderReadCookiesToCommit_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    Partition = input.ReadUInt64();
                    break;
                  }
                  case 16: {
                    Status = (global::Ydb.StatusIds.Types.StatusCode) input.ReadEnum();
                    break;
                  }
                  case 26: {
                    issues_.AddEntriesFrom(ref input, _repeated_issues_codec);
                    break;
                  }
                  case 32: {
                    StartOffset = input.ReadUInt64();
                    break;
                  }
                  case 40: {
                    EndOffset = input.ReadUInt64();
                    break;
                  }
                  case 48: {
                    CommitOffset = input.ReadUInt64();
                    break;
                  }
                  case 56: {
                    CommitTimeLagMs = input.ReadUInt64();
                    break;
                  }
                  case 64: {
                    ReadOffset = input.ReadUInt64();
                    break;
                  }
                  case 72: {
                    ReadTimeLagMs = input.ReadUInt64();
                    break;
                  }
                  case 82: {
                    SessionId = input.ReadString();
                    break;
                  }
                  case 90: {
                    ClientNode = input.ReadString();
                    break;
                  }
                  case 98: {
                    ProxyNode = input.ReadString();
                    break;
                  }
                  case 106: {
                    TabletNode = input.ReadString();
                    break;
                  }
                  case 112: {
                    AssignId = input.ReadUInt64();
                    break;
                  }
                  case 120: {
                    AssignTimestampMs = input.ReadUInt64();
                    break;
                  }
                  case 128: {
                    LastReadCookie = input.ReadUInt64();
                    break;
                  }
                  case 136: {
                    CommittedReadCookie = input.ReadUInt64();
                    break;
                  }
                  case 146:
                  case 144: {
                    outOfOrderReadCookiesToCommit_.AddEntriesFrom(ref input, _repeated_outOfOrderReadCookiesToCommit_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class DropTopicRequest : pb::IMessage<DropTopicRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DropTopicRequest> _parser = new pb::MessageParser<DropTopicRequest>(() => new DropTopicRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DropTopicRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropTopicRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropTopicRequest(DropTopicRequest other) : this() {
      operationParams_ = other.operationParams_ != null ? other.operationParams_.Clone() : null;
      path_ = other.path_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropTopicRequest Clone() {
      return new DropTopicRequest(this);
    }

    /// <summary>Field number for the "operation_params" field.</summary>
    public const int OperationParamsFieldNumber = 1;
    private global::Ydb.Operations.OperationParams operationParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.OperationParams OperationParams {
      get { return operationParams_; }
      set {
        operationParams_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private string path_ = "";
    /// <summary>
    /// Topic path.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DropTopicRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DropTopicRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OperationParams, other.OperationParams)) return false;
      if (Path != other.Path) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operationParams_ != null) hash ^= OperationParams.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operationParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OperationParams);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operationParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OperationParams);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operationParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperationParams);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DropTopicRequest other) {
      if (other == null) {
        return;
      }
      if (other.operationParams_ != null) {
        if (operationParams_ == null) {
          OperationParams = new global::Ydb.Operations.OperationParams();
        }
        OperationParams.MergeFrom(other.OperationParams);
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DropTopicResponse : pb::IMessage<DropTopicResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DropTopicResponse> _parser = new pb::MessageParser<DropTopicResponse>(() => new DropTopicResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DropTopicResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropTopicResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropTopicResponse(DropTopicResponse other) : this() {
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropTopicResponse Clone() {
      return new DropTopicResponse(this);
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 1;
    private global::Ydb.Operations.Operation operation_;
    /// <summary>
    /// Result of request will be inside operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.Operation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DropTopicResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DropTopicResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Operation, other.Operation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DropTopicResponse other) {
      if (other == null) {
        return;
      }
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::Ydb.Operations.Operation();
        }
        Operation.MergeFrom(other.Operation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DropTopicResult : pb::IMessage<DropTopicResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DropTopicResult> _parser = new pb::MessageParser<DropTopicResult>(() => new DropTopicResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DropTopicResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropTopicResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropTopicResult(DropTopicResult other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropTopicResult Clone() {
      return new DropTopicResult(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DropTopicResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DropTopicResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DropTopicResult other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class Credentials : pb::IMessage<Credentials>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Credentials> _parser = new pb::MessageParser<Credentials>(() => new Credentials());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Credentials> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Credentials() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Credentials(Credentials other) : this() {
      switch (other.CredentialsCase) {
        case CredentialsOneofCase.OauthToken:
          OauthToken = other.OauthToken;
          break;
        case CredentialsOneofCase.JwtParams:
          JwtParams = other.JwtParams;
          break;
        case CredentialsOneofCase.Iam:
          Iam = other.Iam.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Credentials Clone() {
      return new Credentials(this);
    }

    /// <summary>Field number for the "oauth_token" field.</summary>
    public const int OauthTokenFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OauthToken {
      get { return credentialsCase_ == CredentialsOneofCase.OauthToken ? (string) credentials_ : ""; }
      set {
        credentials_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        credentialsCase_ = CredentialsOneofCase.OauthToken;
      }
    }

    /// <summary>Field number for the "jwt_params" field.</summary>
    public const int JwtParamsFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JwtParams {
      get { return credentialsCase_ == CredentialsOneofCase.JwtParams ? (string) credentials_ : ""; }
      set {
        credentials_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        credentialsCase_ = CredentialsOneofCase.JwtParams;
      }
    }

    /// <summary>Field number for the "iam" field.</summary>
    public const int IamFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.Credentials.Types.Iam Iam {
      get { return credentialsCase_ == CredentialsOneofCase.Iam ? (global::Ydb.PersQueue.V1.Credentials.Types.Iam) credentials_ : null; }
      set {
        credentials_ = value;
        credentialsCase_ = value == null ? CredentialsOneofCase.None : CredentialsOneofCase.Iam;
      }
    }

    private object credentials_;
    /// <summary>Enum of possible cases for the "credentials" oneof.</summary>
    public enum CredentialsOneofCase {
      None = 0,
      OauthToken = 1,
      JwtParams = 2,
      Iam = 3,
    }
    private CredentialsOneofCase credentialsCase_ = CredentialsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CredentialsOneofCase CredentialsCase {
      get { return credentialsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCredentials() {
      credentialsCase_ = CredentialsOneofCase.None;
      credentials_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Credentials);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Credentials other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OauthToken != other.OauthToken) return false;
      if (JwtParams != other.JwtParams) return false;
      if (!object.Equals(Iam, other.Iam)) return false;
      if (CredentialsCase != other.CredentialsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (credentialsCase_ == CredentialsOneofCase.OauthToken) hash ^= OauthToken.GetHashCode();
      if (credentialsCase_ == CredentialsOneofCase.JwtParams) hash ^= JwtParams.GetHashCode();
      if (credentialsCase_ == CredentialsOneofCase.Iam) hash ^= Iam.GetHashCode();
      hash ^= (int) credentialsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (credentialsCase_ == CredentialsOneofCase.OauthToken) {
        output.WriteRawTag(10);
        output.WriteString(OauthToken);
      }
      if (credentialsCase_ == CredentialsOneofCase.JwtParams) {
        output.WriteRawTag(18);
        output.WriteString(JwtParams);
      }
      if (credentialsCase_ == CredentialsOneofCase.Iam) {
        output.WriteRawTag(26);
        output.WriteMessage(Iam);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (credentialsCase_ == CredentialsOneofCase.OauthToken) {
        output.WriteRawTag(10);
        output.WriteString(OauthToken);
      }
      if (credentialsCase_ == CredentialsOneofCase.JwtParams) {
        output.WriteRawTag(18);
        output.WriteString(JwtParams);
      }
      if (credentialsCase_ == CredentialsOneofCase.Iam) {
        output.WriteRawTag(26);
        output.WriteMessage(Iam);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (credentialsCase_ == CredentialsOneofCase.OauthToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OauthToken);
      }
      if (credentialsCase_ == CredentialsOneofCase.JwtParams) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JwtParams);
      }
      if (credentialsCase_ == CredentialsOneofCase.Iam) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Iam);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Credentials other) {
      if (other == null) {
        return;
      }
      switch (other.CredentialsCase) {
        case CredentialsOneofCase.OauthToken:
          OauthToken = other.OauthToken;
          break;
        case CredentialsOneofCase.JwtParams:
          JwtParams = other.JwtParams;
          break;
        case CredentialsOneofCase.Iam:
          if (Iam == null) {
            Iam = new global::Ydb.PersQueue.V1.Credentials.Types.Iam();
          }
          Iam.MergeFrom(other.Iam);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OauthToken = input.ReadString();
            break;
          }
          case 18: {
            JwtParams = input.ReadString();
            break;
          }
          case 26: {
            global::Ydb.PersQueue.V1.Credentials.Types.Iam subBuilder = new global::Ydb.PersQueue.V1.Credentials.Types.Iam();
            if (credentialsCase_ == CredentialsOneofCase.Iam) {
              subBuilder.MergeFrom(Iam);
            }
            input.ReadMessage(subBuilder);
            Iam = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OauthToken = input.ReadString();
            break;
          }
          case 18: {
            JwtParams = input.ReadString();
            break;
          }
          case 26: {
            global::Ydb.PersQueue.V1.Credentials.Types.Iam subBuilder = new global::Ydb.PersQueue.V1.Credentials.Types.Iam();
            if (credentialsCase_ == CredentialsOneofCase.Iam) {
              subBuilder.MergeFrom(Iam);
            }
            input.ReadMessage(subBuilder);
            Iam = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Credentials message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Iam : pb::IMessage<Iam>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Iam> _parser = new pb::MessageParser<Iam>(() => new Iam());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Iam> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.Credentials.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Iam() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Iam(Iam other) : this() {
          endpoint_ = other.endpoint_;
          serviceAccountKey_ = other.serviceAccountKey_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Iam Clone() {
          return new Iam(this);
        }

        /// <summary>Field number for the "endpoint" field.</summary>
        public const int EndpointFieldNumber = 1;
        private string endpoint_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Endpoint {
          get { return endpoint_; }
          set {
            endpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "service_account_key" field.</summary>
        public const int ServiceAccountKeyFieldNumber = 2;
        private string serviceAccountKey_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ServiceAccountKey {
          get { return serviceAccountKey_; }
          set {
            serviceAccountKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Iam);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Iam other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Endpoint != other.Endpoint) return false;
          if (ServiceAccountKey != other.ServiceAccountKey) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Endpoint.Length != 0) hash ^= Endpoint.GetHashCode();
          if (ServiceAccountKey.Length != 0) hash ^= ServiceAccountKey.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Endpoint.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Endpoint);
          }
          if (ServiceAccountKey.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ServiceAccountKey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Endpoint.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Endpoint);
          }
          if (ServiceAccountKey.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ServiceAccountKey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Endpoint.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Endpoint);
          }
          if (ServiceAccountKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceAccountKey);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Iam other) {
          if (other == null) {
            return;
          }
          if (other.Endpoint.Length != 0) {
            Endpoint = other.Endpoint;
          }
          if (other.ServiceAccountKey.Length != 0) {
            ServiceAccountKey = other.ServiceAccountKey;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Endpoint = input.ReadString();
                break;
              }
              case 18: {
                ServiceAccountKey = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Endpoint = input.ReadString();
                break;
              }
              case 18: {
                ServiceAccountKey = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class TopicSettings : pb::IMessage<TopicSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TopicSettings> _parser = new pb::MessageParser<TopicSettings>(() => new TopicSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TopicSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicSettings(TopicSettings other) : this() {
      partitionsCount_ = other.partitionsCount_;
      retentionPeriodMs_ = other.retentionPeriodMs_;
      messageGroupSeqnoRetentionPeriodMs_ = other.messageGroupSeqnoRetentionPeriodMs_;
      maxPartitionMessageGroupsSeqnoStored_ = other.maxPartitionMessageGroupsSeqnoStored_;
      supportedFormat_ = other.supportedFormat_;
      supportedCodecs_ = other.supportedCodecs_.Clone();
      maxPartitionStorageSize_ = other.maxPartitionStorageSize_;
      maxPartitionWriteSpeed_ = other.maxPartitionWriteSpeed_;
      maxPartitionWriteBurst_ = other.maxPartitionWriteBurst_;
      clientWriteDisabled_ = other.clientWriteDisabled_;
      readRules_ = other.readRules_.Clone();
      attributes_ = other.attributes_.Clone();
      remoteMirrorRule_ = other.remoteMirrorRule_ != null ? other.remoteMirrorRule_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicSettings Clone() {
      return new TopicSettings(this);
    }

    /// <summary>Field number for the "partitions_count" field.</summary>
    public const int PartitionsCountFieldNumber = 1;
    private int partitionsCount_;
    /// <summary>
    /// How many partitions in topic. Must less than database limit. Default limit - 10.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PartitionsCount {
      get { return partitionsCount_; }
      set {
        partitionsCount_ = value;
      }
    }

    /// <summary>Field number for the "retention_period_ms" field.</summary>
    public const int RetentionPeriodMsFieldNumber = 2;
    private long retentionPeriodMs_;
    /// <summary>
    /// How long data in partition should be stored. Must be greater than 0 and less than limit for this database.  Default limit - 36 hours.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RetentionPeriodMs {
      get { return retentionPeriodMs_; }
      set {
        retentionPeriodMs_ = value;
      }
    }

    /// <summary>Field number for the "message_group_seqno_retention_period_ms" field.</summary>
    public const int MessageGroupSeqnoRetentionPeriodMsFieldNumber = 12;
    private long messageGroupSeqnoRetentionPeriodMs_;
    /// <summary>
    /// How long last written seqno for message group should be stored. Must be greater then retention_period_ms and less then limit for this database.  Default limit - 16 days.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MessageGroupSeqnoRetentionPeriodMs {
      get { return messageGroupSeqnoRetentionPeriodMs_; }
      set {
        messageGroupSeqnoRetentionPeriodMs_ = value;
      }
    }

    /// <summary>Field number for the "max_partition_message_groups_seqno_stored" field.</summary>
    public const int MaxPartitionMessageGroupsSeqnoStoredFieldNumber = 13;
    private long maxPartitionMessageGroupsSeqnoStored_;
    /// <summary>
    /// How many last written seqno for various message groups should be stored per partition. Must be less than limit for this database.  Default limit - 6*10^6 values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxPartitionMessageGroupsSeqnoStored {
      get { return maxPartitionMessageGroupsSeqnoStored_; }
      set {
        maxPartitionMessageGroupsSeqnoStored_ = value;
      }
    }

    /// <summary>Field number for the "supported_format" field.</summary>
    public const int SupportedFormatFieldNumber = 3;
    private global::Ydb.PersQueue.V1.TopicSettings.Types.Format supportedFormat_ = global::Ydb.PersQueue.V1.TopicSettings.Types.Format.Unspecified;
    /// <summary>
    /// Max format version that is allowed for writers. Must be value from enum FormatVersion.
    /// Writes with greater format version are forbiden.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.TopicSettings.Types.Format SupportedFormat {
      get { return supportedFormat_; }
      set {
        supportedFormat_ = value;
      }
    }

    /// <summary>Field number for the "supported_codecs" field.</summary>
    public const int SupportedCodecsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.Codec> _repeated_supportedCodecs_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::Ydb.PersQueue.V1.Codec) x);
    private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.Codec> supportedCodecs_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.Codec>();
    /// <summary>
    /// List of allowed codecs for writers.
    /// Writes with codec not from this list are forbiden.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.PersQueue.V1.Codec> SupportedCodecs {
      get { return supportedCodecs_; }
    }

    /// <summary>Field number for the "max_partition_storage_size" field.</summary>
    public const int MaxPartitionStorageSizeFieldNumber = 5;
    private long maxPartitionStorageSize_;
    /// <summary>
    /// Max storage usage for each topic's partition. Must be less than database limit. Default limit - 130 GB.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxPartitionStorageSize {
      get { return maxPartitionStorageSize_; }
      set {
        maxPartitionStorageSize_ = value;
      }
    }

    /// <summary>Field number for the "max_partition_write_speed" field.</summary>
    public const int MaxPartitionWriteSpeedFieldNumber = 6;
    private long maxPartitionWriteSpeed_;
    /// <summary>
    /// Partition write speed in bytes per second. Must be less than database limit. Default limit - 1 MB/s.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxPartitionWriteSpeed {
      get { return maxPartitionWriteSpeed_; }
      set {
        maxPartitionWriteSpeed_ = value;
      }
    }

    /// <summary>Field number for the "max_partition_write_burst" field.</summary>
    public const int MaxPartitionWriteBurstFieldNumber = 7;
    private long maxPartitionWriteBurst_;
    /// <summary>
    /// Burst size for write in partition, in bytes. Must be less than database limit. Default limit - 1 MB.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxPartitionWriteBurst {
      get { return maxPartitionWriteBurst_; }
      set {
        maxPartitionWriteBurst_ = value;
      }
    }

    /// <summary>Field number for the "client_write_disabled" field.</summary>
    public const int ClientWriteDisabledFieldNumber = 8;
    private bool clientWriteDisabled_;
    /// <summary>
    /// Disallows client writes. Used for mirrored topics in federation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ClientWriteDisabled {
      get { return clientWriteDisabled_; }
      set {
        clientWriteDisabled_ = value;
      }
    }

    /// <summary>Field number for the "read_rules" field.</summary>
    public const int ReadRulesFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.TopicSettings.Types.ReadRule> _repeated_readRules_codec
        = pb::FieldCodec.ForMessage(74, global::Ydb.PersQueue.V1.TopicSettings.Types.ReadRule.Parser);
    private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.TopicSettings.Types.ReadRule> readRules_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.TopicSettings.Types.ReadRule>();
    /// <summary>
    /// List of consumer read rules for this topic.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ydb.PersQueue.V1.TopicSettings.Types.ReadRule> ReadRules {
      get { return readRules_; }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 10;
    private static readonly pbc::MapField<string, string>.Codec _map_attributes_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 82);
    private readonly pbc::MapField<string, string> attributes_ = new pbc::MapField<string, string>();
    /// <summary>
    /// User and server attributes of topic. Server attributes starts from "_" and will be validated by server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Attributes {
      get { return attributes_; }
    }

    /// <summary>Field number for the "remote_mirror_rule" field.</summary>
    public const int RemoteMirrorRuleFieldNumber = 11;
    private global::Ydb.PersQueue.V1.TopicSettings.Types.RemoteMirrorRule remoteMirrorRule_;
    /// <summary>
    /// remote mirror rule for this topic.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.TopicSettings.Types.RemoteMirrorRule RemoteMirrorRule {
      get { return remoteMirrorRule_; }
      set {
        remoteMirrorRule_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TopicSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TopicSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PartitionsCount != other.PartitionsCount) return false;
      if (RetentionPeriodMs != other.RetentionPeriodMs) return false;
      if (MessageGroupSeqnoRetentionPeriodMs != other.MessageGroupSeqnoRetentionPeriodMs) return false;
      if (MaxPartitionMessageGroupsSeqnoStored != other.MaxPartitionMessageGroupsSeqnoStored) return false;
      if (SupportedFormat != other.SupportedFormat) return false;
      if(!supportedCodecs_.Equals(other.supportedCodecs_)) return false;
      if (MaxPartitionStorageSize != other.MaxPartitionStorageSize) return false;
      if (MaxPartitionWriteSpeed != other.MaxPartitionWriteSpeed) return false;
      if (MaxPartitionWriteBurst != other.MaxPartitionWriteBurst) return false;
      if (ClientWriteDisabled != other.ClientWriteDisabled) return false;
      if(!readRules_.Equals(other.readRules_)) return false;
      if (!Attributes.Equals(other.Attributes)) return false;
      if (!object.Equals(RemoteMirrorRule, other.RemoteMirrorRule)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PartitionsCount != 0) hash ^= PartitionsCount.GetHashCode();
      if (RetentionPeriodMs != 0L) hash ^= RetentionPeriodMs.GetHashCode();
      if (MessageGroupSeqnoRetentionPeriodMs != 0L) hash ^= MessageGroupSeqnoRetentionPeriodMs.GetHashCode();
      if (MaxPartitionMessageGroupsSeqnoStored != 0L) hash ^= MaxPartitionMessageGroupsSeqnoStored.GetHashCode();
      if (SupportedFormat != global::Ydb.PersQueue.V1.TopicSettings.Types.Format.Unspecified) hash ^= SupportedFormat.GetHashCode();
      hash ^= supportedCodecs_.GetHashCode();
      if (MaxPartitionStorageSize != 0L) hash ^= MaxPartitionStorageSize.GetHashCode();
      if (MaxPartitionWriteSpeed != 0L) hash ^= MaxPartitionWriteSpeed.GetHashCode();
      if (MaxPartitionWriteBurst != 0L) hash ^= MaxPartitionWriteBurst.GetHashCode();
      if (ClientWriteDisabled != false) hash ^= ClientWriteDisabled.GetHashCode();
      hash ^= readRules_.GetHashCode();
      hash ^= Attributes.GetHashCode();
      if (remoteMirrorRule_ != null) hash ^= RemoteMirrorRule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PartitionsCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PartitionsCount);
      }
      if (RetentionPeriodMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RetentionPeriodMs);
      }
      if (SupportedFormat != global::Ydb.PersQueue.V1.TopicSettings.Types.Format.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) SupportedFormat);
      }
      supportedCodecs_.WriteTo(output, _repeated_supportedCodecs_codec);
      if (MaxPartitionStorageSize != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MaxPartitionStorageSize);
      }
      if (MaxPartitionWriteSpeed != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(MaxPartitionWriteSpeed);
      }
      if (MaxPartitionWriteBurst != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(MaxPartitionWriteBurst);
      }
      if (ClientWriteDisabled != false) {
        output.WriteRawTag(64);
        output.WriteBool(ClientWriteDisabled);
      }
      readRules_.WriteTo(output, _repeated_readRules_codec);
      attributes_.WriteTo(output, _map_attributes_codec);
      if (remoteMirrorRule_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RemoteMirrorRule);
      }
      if (MessageGroupSeqnoRetentionPeriodMs != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(MessageGroupSeqnoRetentionPeriodMs);
      }
      if (MaxPartitionMessageGroupsSeqnoStored != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(MaxPartitionMessageGroupsSeqnoStored);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PartitionsCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PartitionsCount);
      }
      if (RetentionPeriodMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RetentionPeriodMs);
      }
      if (SupportedFormat != global::Ydb.PersQueue.V1.TopicSettings.Types.Format.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) SupportedFormat);
      }
      supportedCodecs_.WriteTo(ref output, _repeated_supportedCodecs_codec);
      if (MaxPartitionStorageSize != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MaxPartitionStorageSize);
      }
      if (MaxPartitionWriteSpeed != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(MaxPartitionWriteSpeed);
      }
      if (MaxPartitionWriteBurst != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(MaxPartitionWriteBurst);
      }
      if (ClientWriteDisabled != false) {
        output.WriteRawTag(64);
        output.WriteBool(ClientWriteDisabled);
      }
      readRules_.WriteTo(ref output, _repeated_readRules_codec);
      attributes_.WriteTo(ref output, _map_attributes_codec);
      if (remoteMirrorRule_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RemoteMirrorRule);
      }
      if (MessageGroupSeqnoRetentionPeriodMs != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(MessageGroupSeqnoRetentionPeriodMs);
      }
      if (MaxPartitionMessageGroupsSeqnoStored != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(MaxPartitionMessageGroupsSeqnoStored);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PartitionsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PartitionsCount);
      }
      if (RetentionPeriodMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RetentionPeriodMs);
      }
      if (MessageGroupSeqnoRetentionPeriodMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MessageGroupSeqnoRetentionPeriodMs);
      }
      if (MaxPartitionMessageGroupsSeqnoStored != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxPartitionMessageGroupsSeqnoStored);
      }
      if (SupportedFormat != global::Ydb.PersQueue.V1.TopicSettings.Types.Format.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SupportedFormat);
      }
      size += supportedCodecs_.CalculateSize(_repeated_supportedCodecs_codec);
      if (MaxPartitionStorageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxPartitionStorageSize);
      }
      if (MaxPartitionWriteSpeed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxPartitionWriteSpeed);
      }
      if (MaxPartitionWriteBurst != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxPartitionWriteBurst);
      }
      if (ClientWriteDisabled != false) {
        size += 1 + 1;
      }
      size += readRules_.CalculateSize(_repeated_readRules_codec);
      size += attributes_.CalculateSize(_map_attributes_codec);
      if (remoteMirrorRule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemoteMirrorRule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TopicSettings other) {
      if (other == null) {
        return;
      }
      if (other.PartitionsCount != 0) {
        PartitionsCount = other.PartitionsCount;
      }
      if (other.RetentionPeriodMs != 0L) {
        RetentionPeriodMs = other.RetentionPeriodMs;
      }
      if (other.MessageGroupSeqnoRetentionPeriodMs != 0L) {
        MessageGroupSeqnoRetentionPeriodMs = other.MessageGroupSeqnoRetentionPeriodMs;
      }
      if (other.MaxPartitionMessageGroupsSeqnoStored != 0L) {
        MaxPartitionMessageGroupsSeqnoStored = other.MaxPartitionMessageGroupsSeqnoStored;
      }
      if (other.SupportedFormat != global::Ydb.PersQueue.V1.TopicSettings.Types.Format.Unspecified) {
        SupportedFormat = other.SupportedFormat;
      }
      supportedCodecs_.Add(other.supportedCodecs_);
      if (other.MaxPartitionStorageSize != 0L) {
        MaxPartitionStorageSize = other.MaxPartitionStorageSize;
      }
      if (other.MaxPartitionWriteSpeed != 0L) {
        MaxPartitionWriteSpeed = other.MaxPartitionWriteSpeed;
      }
      if (other.MaxPartitionWriteBurst != 0L) {
        MaxPartitionWriteBurst = other.MaxPartitionWriteBurst;
      }
      if (other.ClientWriteDisabled != false) {
        ClientWriteDisabled = other.ClientWriteDisabled;
      }
      readRules_.Add(other.readRules_);
      attributes_.Add(other.attributes_);
      if (other.remoteMirrorRule_ != null) {
        if (remoteMirrorRule_ == null) {
          RemoteMirrorRule = new global::Ydb.PersQueue.V1.TopicSettings.Types.RemoteMirrorRule();
        }
        RemoteMirrorRule.MergeFrom(other.RemoteMirrorRule);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PartitionsCount = input.ReadInt32();
            break;
          }
          case 16: {
            RetentionPeriodMs = input.ReadInt64();
            break;
          }
          case 24: {
            SupportedFormat = (global::Ydb.PersQueue.V1.TopicSettings.Types.Format) input.ReadEnum();
            break;
          }
          case 34:
          case 32: {
            supportedCodecs_.AddEntriesFrom(input, _repeated_supportedCodecs_codec);
            break;
          }
          case 40: {
            MaxPartitionStorageSize = input.ReadInt64();
            break;
          }
          case 48: {
            MaxPartitionWriteSpeed = input.ReadInt64();
            break;
          }
          case 56: {
            MaxPartitionWriteBurst = input.ReadInt64();
            break;
          }
          case 64: {
            ClientWriteDisabled = input.ReadBool();
            break;
          }
          case 74: {
            readRules_.AddEntriesFrom(input, _repeated_readRules_codec);
            break;
          }
          case 82: {
            attributes_.AddEntriesFrom(input, _map_attributes_codec);
            break;
          }
          case 90: {
            if (remoteMirrorRule_ == null) {
              RemoteMirrorRule = new global::Ydb.PersQueue.V1.TopicSettings.Types.RemoteMirrorRule();
            }
            input.ReadMessage(RemoteMirrorRule);
            break;
          }
          case 96: {
            MessageGroupSeqnoRetentionPeriodMs = input.ReadInt64();
            break;
          }
          case 104: {
            MaxPartitionMessageGroupsSeqnoStored = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PartitionsCount = input.ReadInt32();
            break;
          }
          case 16: {
            RetentionPeriodMs = input.ReadInt64();
            break;
          }
          case 24: {
            SupportedFormat = (global::Ydb.PersQueue.V1.TopicSettings.Types.Format) input.ReadEnum();
            break;
          }
          case 34:
          case 32: {
            supportedCodecs_.AddEntriesFrom(ref input, _repeated_supportedCodecs_codec);
            break;
          }
          case 40: {
            MaxPartitionStorageSize = input.ReadInt64();
            break;
          }
          case 48: {
            MaxPartitionWriteSpeed = input.ReadInt64();
            break;
          }
          case 56: {
            MaxPartitionWriteBurst = input.ReadInt64();
            break;
          }
          case 64: {
            ClientWriteDisabled = input.ReadBool();
            break;
          }
          case 74: {
            readRules_.AddEntriesFrom(ref input, _repeated_readRules_codec);
            break;
          }
          case 82: {
            attributes_.AddEntriesFrom(ref input, _map_attributes_codec);
            break;
          }
          case 90: {
            if (remoteMirrorRule_ == null) {
              RemoteMirrorRule = new global::Ydb.PersQueue.V1.TopicSettings.Types.RemoteMirrorRule();
            }
            input.ReadMessage(RemoteMirrorRule);
            break;
          }
          case 96: {
            MessageGroupSeqnoRetentionPeriodMs = input.ReadInt64();
            break;
          }
          case 104: {
            MaxPartitionMessageGroupsSeqnoStored = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TopicSettings message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Format {
        [pbr::OriginalName("FORMAT_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("FORMAT_BASE")] Base = 1,
      }

      /// <summary>
      /// Message for read rules description.
      /// </summary>
      public sealed partial class ReadRule : pb::IMessage<ReadRule>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ReadRule> _parser = new pb::MessageParser<ReadRule>(() => new ReadRule());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ReadRule> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.TopicSettings.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReadRule() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReadRule(ReadRule other) : this() {
          consumerName_ = other.consumerName_;
          important_ = other.important_;
          startingMessageTimestampMs_ = other.startingMessageTimestampMs_;
          supportedFormat_ = other.supportedFormat_;
          supportedCodecs_ = other.supportedCodecs_.Clone();
          version_ = other.version_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReadRule Clone() {
          return new ReadRule(this);
        }

        /// <summary>Field number for the "consumer_name" field.</summary>
        public const int ConsumerNameFieldNumber = 1;
        private string consumerName_ = "";
        /// <summary>
        /// For what consumer this read rule is. Must be valid not empty consumer name.
        /// Is key for read rules. There could be only one read rule with corresponding consumer name.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ConsumerName {
          get { return consumerName_; }
          set {
            consumerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "important" field.</summary>
        public const int ImportantFieldNumber = 2;
        private bool important_;
        /// <summary>
        /// Flag that this consumer is important.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Important {
          get { return important_; }
          set {
            important_ = value;
          }
        }

        /// <summary>Field number for the "starting_message_timestamp_ms" field.</summary>
        public const int StartingMessageTimestampMsFieldNumber = 3;
        private long startingMessageTimestampMs_;
        /// <summary>
        /// All messages with smaller timestamp of write will be skipped.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long StartingMessageTimestampMs {
          get { return startingMessageTimestampMs_; }
          set {
            startingMessageTimestampMs_ = value;
          }
        }

        /// <summary>Field number for the "supported_format" field.</summary>
        public const int SupportedFormatFieldNumber = 4;
        private global::Ydb.PersQueue.V1.TopicSettings.Types.Format supportedFormat_ = global::Ydb.PersQueue.V1.TopicSettings.Types.Format.Unspecified;
        /// <summary>
        /// Max format version that is supported by this consumer.
        /// supported_format on topic must not be greater.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.PersQueue.V1.TopicSettings.Types.Format SupportedFormat {
          get { return supportedFormat_; }
          set {
            supportedFormat_ = value;
          }
        }

        /// <summary>Field number for the "supported_codecs" field.</summary>
        public const int SupportedCodecsFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Ydb.PersQueue.V1.Codec> _repeated_supportedCodecs_codec
            = pb::FieldCodec.ForEnum(42, x => (int) x, x => (global::Ydb.PersQueue.V1.Codec) x);
        private readonly pbc::RepeatedField<global::Ydb.PersQueue.V1.Codec> supportedCodecs_ = new pbc::RepeatedField<global::Ydb.PersQueue.V1.Codec>();
        /// <summary>
        /// List of supported codecs by this consumer.
        /// supported_codecs on topic must be contained inside this list.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ydb.PersQueue.V1.Codec> SupportedCodecs {
          get { return supportedCodecs_; }
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 6;
        private long version_;
        /// <summary>
        /// Read rule version. Any non-negative integer.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Version {
          get { return version_; }
          set {
            version_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ReadRule);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ReadRule other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ConsumerName != other.ConsumerName) return false;
          if (Important != other.Important) return false;
          if (StartingMessageTimestampMs != other.StartingMessageTimestampMs) return false;
          if (SupportedFormat != other.SupportedFormat) return false;
          if(!supportedCodecs_.Equals(other.supportedCodecs_)) return false;
          if (Version != other.Version) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ConsumerName.Length != 0) hash ^= ConsumerName.GetHashCode();
          if (Important != false) hash ^= Important.GetHashCode();
          if (StartingMessageTimestampMs != 0L) hash ^= StartingMessageTimestampMs.GetHashCode();
          if (SupportedFormat != global::Ydb.PersQueue.V1.TopicSettings.Types.Format.Unspecified) hash ^= SupportedFormat.GetHashCode();
          hash ^= supportedCodecs_.GetHashCode();
          if (Version != 0L) hash ^= Version.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ConsumerName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ConsumerName);
          }
          if (Important != false) {
            output.WriteRawTag(16);
            output.WriteBool(Important);
          }
          if (StartingMessageTimestampMs != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(StartingMessageTimestampMs);
          }
          if (SupportedFormat != global::Ydb.PersQueue.V1.TopicSettings.Types.Format.Unspecified) {
            output.WriteRawTag(32);
            output.WriteEnum((int) SupportedFormat);
          }
          supportedCodecs_.WriteTo(output, _repeated_supportedCodecs_codec);
          if (Version != 0L) {
            output.WriteRawTag(48);
            output.WriteInt64(Version);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ConsumerName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ConsumerName);
          }
          if (Important != false) {
            output.WriteRawTag(16);
            output.WriteBool(Important);
          }
          if (StartingMessageTimestampMs != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(StartingMessageTimestampMs);
          }
          if (SupportedFormat != global::Ydb.PersQueue.V1.TopicSettings.Types.Format.Unspecified) {
            output.WriteRawTag(32);
            output.WriteEnum((int) SupportedFormat);
          }
          supportedCodecs_.WriteTo(ref output, _repeated_supportedCodecs_codec);
          if (Version != 0L) {
            output.WriteRawTag(48);
            output.WriteInt64(Version);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ConsumerName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ConsumerName);
          }
          if (Important != false) {
            size += 1 + 1;
          }
          if (StartingMessageTimestampMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartingMessageTimestampMs);
          }
          if (SupportedFormat != global::Ydb.PersQueue.V1.TopicSettings.Types.Format.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SupportedFormat);
          }
          size += supportedCodecs_.CalculateSize(_repeated_supportedCodecs_codec);
          if (Version != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Version);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ReadRule other) {
          if (other == null) {
            return;
          }
          if (other.ConsumerName.Length != 0) {
            ConsumerName = other.ConsumerName;
          }
          if (other.Important != false) {
            Important = other.Important;
          }
          if (other.StartingMessageTimestampMs != 0L) {
            StartingMessageTimestampMs = other.StartingMessageTimestampMs;
          }
          if (other.SupportedFormat != global::Ydb.PersQueue.V1.TopicSettings.Types.Format.Unspecified) {
            SupportedFormat = other.SupportedFormat;
          }
          supportedCodecs_.Add(other.supportedCodecs_);
          if (other.Version != 0L) {
            Version = other.Version;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ConsumerName = input.ReadString();
                break;
              }
              case 16: {
                Important = input.ReadBool();
                break;
              }
              case 24: {
                StartingMessageTimestampMs = input.ReadInt64();
                break;
              }
              case 32: {
                SupportedFormat = (global::Ydb.PersQueue.V1.TopicSettings.Types.Format) input.ReadEnum();
                break;
              }
              case 42:
              case 40: {
                supportedCodecs_.AddEntriesFrom(input, _repeated_supportedCodecs_codec);
                break;
              }
              case 48: {
                Version = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                ConsumerName = input.ReadString();
                break;
              }
              case 16: {
                Important = input.ReadBool();
                break;
              }
              case 24: {
                StartingMessageTimestampMs = input.ReadInt64();
                break;
              }
              case 32: {
                SupportedFormat = (global::Ydb.PersQueue.V1.TopicSettings.Types.Format) input.ReadEnum();
                break;
              }
              case 42:
              case 40: {
                supportedCodecs_.AddEntriesFrom(ref input, _repeated_supportedCodecs_codec);
                break;
              }
              case 48: {
                Version = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Message for remote mirror rule description.
      /// </summary>
      public sealed partial class RemoteMirrorRule : pb::IMessage<RemoteMirrorRule>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RemoteMirrorRule> _parser = new pb::MessageParser<RemoteMirrorRule>(() => new RemoteMirrorRule());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RemoteMirrorRule> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ydb.PersQueue.V1.TopicSettings.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RemoteMirrorRule() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RemoteMirrorRule(RemoteMirrorRule other) : this() {
          endpoint_ = other.endpoint_;
          topicPath_ = other.topicPath_;
          consumerName_ = other.consumerName_;
          credentials_ = other.credentials_ != null ? other.credentials_.Clone() : null;
          startingMessageTimestampMs_ = other.startingMessageTimestampMs_;
          database_ = other.database_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RemoteMirrorRule Clone() {
          return new RemoteMirrorRule(this);
        }

        /// <summary>Field number for the "endpoint" field.</summary>
        public const int EndpointFieldNumber = 1;
        private string endpoint_ = "";
        /// <summary>
        /// Source cluster endpoint in format server:port.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Endpoint {
          get { return endpoint_; }
          set {
            endpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "topic_path" field.</summary>
        public const int TopicPathFieldNumber = 2;
        private string topicPath_ = "";
        /// <summary>
        /// Source topic that we want to mirror.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TopicPath {
          get { return topicPath_; }
          set {
            topicPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "consumer_name" field.</summary>
        public const int ConsumerNameFieldNumber = 3;
        private string consumerName_ = "";
        /// <summary>
        /// Source consumer for reading source topic.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ConsumerName {
          get { return consumerName_; }
          set {
            consumerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "credentials" field.</summary>
        public const int CredentialsFieldNumber = 4;
        private global::Ydb.PersQueue.V1.Credentials credentials_;
        /// <summary>
        /// Credentials for reading source topic by source consumer.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ydb.PersQueue.V1.Credentials Credentials {
          get { return credentials_; }
          set {
            credentials_ = value;
          }
        }

        /// <summary>Field number for the "starting_message_timestamp_ms" field.</summary>
        public const int StartingMessageTimestampMsFieldNumber = 5;
        private long startingMessageTimestampMs_;
        /// <summary>
        /// All messages with smaller timestamp of write will be skipped.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long StartingMessageTimestampMs {
          get { return startingMessageTimestampMs_; }
          set {
            startingMessageTimestampMs_ = value;
          }
        }

        /// <summary>Field number for the "database" field.</summary>
        public const int DatabaseFieldNumber = 6;
        private string database_ = "";
        /// <summary>
        /// Database
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Database {
          get { return database_; }
          set {
            database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RemoteMirrorRule);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RemoteMirrorRule other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Endpoint != other.Endpoint) return false;
          if (TopicPath != other.TopicPath) return false;
          if (ConsumerName != other.ConsumerName) return false;
          if (!object.Equals(Credentials, other.Credentials)) return false;
          if (StartingMessageTimestampMs != other.StartingMessageTimestampMs) return false;
          if (Database != other.Database) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Endpoint.Length != 0) hash ^= Endpoint.GetHashCode();
          if (TopicPath.Length != 0) hash ^= TopicPath.GetHashCode();
          if (ConsumerName.Length != 0) hash ^= ConsumerName.GetHashCode();
          if (credentials_ != null) hash ^= Credentials.GetHashCode();
          if (StartingMessageTimestampMs != 0L) hash ^= StartingMessageTimestampMs.GetHashCode();
          if (Database.Length != 0) hash ^= Database.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Endpoint.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Endpoint);
          }
          if (TopicPath.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TopicPath);
          }
          if (ConsumerName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ConsumerName);
          }
          if (credentials_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Credentials);
          }
          if (StartingMessageTimestampMs != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(StartingMessageTimestampMs);
          }
          if (Database.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Database);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Endpoint.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Endpoint);
          }
          if (TopicPath.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TopicPath);
          }
          if (ConsumerName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ConsumerName);
          }
          if (credentials_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Credentials);
          }
          if (StartingMessageTimestampMs != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(StartingMessageTimestampMs);
          }
          if (Database.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Database);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Endpoint.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Endpoint);
          }
          if (TopicPath.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TopicPath);
          }
          if (ConsumerName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ConsumerName);
          }
          if (credentials_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Credentials);
          }
          if (StartingMessageTimestampMs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartingMessageTimestampMs);
          }
          if (Database.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RemoteMirrorRule other) {
          if (other == null) {
            return;
          }
          if (other.Endpoint.Length != 0) {
            Endpoint = other.Endpoint;
          }
          if (other.TopicPath.Length != 0) {
            TopicPath = other.TopicPath;
          }
          if (other.ConsumerName.Length != 0) {
            ConsumerName = other.ConsumerName;
          }
          if (other.credentials_ != null) {
            if (credentials_ == null) {
              Credentials = new global::Ydb.PersQueue.V1.Credentials();
            }
            Credentials.MergeFrom(other.Credentials);
          }
          if (other.StartingMessageTimestampMs != 0L) {
            StartingMessageTimestampMs = other.StartingMessageTimestampMs;
          }
          if (other.Database.Length != 0) {
            Database = other.Database;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Endpoint = input.ReadString();
                break;
              }
              case 18: {
                TopicPath = input.ReadString();
                break;
              }
              case 26: {
                ConsumerName = input.ReadString();
                break;
              }
              case 34: {
                if (credentials_ == null) {
                  Credentials = new global::Ydb.PersQueue.V1.Credentials();
                }
                input.ReadMessage(Credentials);
                break;
              }
              case 40: {
                StartingMessageTimestampMs = input.ReadInt64();
                break;
              }
              case 50: {
                Database = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Endpoint = input.ReadString();
                break;
              }
              case 18: {
                TopicPath = input.ReadString();
                break;
              }
              case 26: {
                ConsumerName = input.ReadString();
                break;
              }
              case 34: {
                if (credentials_ == null) {
                  Credentials = new global::Ydb.PersQueue.V1.Credentials();
                }
                input.ReadMessage(Credentials);
                break;
              }
              case 40: {
                StartingMessageTimestampMs = input.ReadInt64();
                break;
              }
              case 50: {
                Database = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CreateTopicRequest : pb::IMessage<CreateTopicRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateTopicRequest> _parser = new pb::MessageParser<CreateTopicRequest>(() => new CreateTopicRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTopicRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTopicRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTopicRequest(CreateTopicRequest other) : this() {
      operationParams_ = other.operationParams_ != null ? other.operationParams_.Clone() : null;
      path_ = other.path_;
      settings_ = other.settings_ != null ? other.settings_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTopicRequest Clone() {
      return new CreateTopicRequest(this);
    }

    /// <summary>Field number for the "operation_params" field.</summary>
    public const int OperationParamsFieldNumber = 1;
    private global::Ydb.Operations.OperationParams operationParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.OperationParams OperationParams {
      get { return operationParams_; }
      set {
        operationParams_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private string path_ = "";
    /// <summary>
    /// Topic path.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 4;
    private global::Ydb.PersQueue.V1.TopicSettings settings_;
    /// <summary>
    /// Topic settings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.TopicSettings Settings {
      get { return settings_; }
      set {
        settings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTopicRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTopicRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OperationParams, other.OperationParams)) return false;
      if (Path != other.Path) return false;
      if (!object.Equals(Settings, other.Settings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operationParams_ != null) hash ^= OperationParams.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (settings_ != null) hash ^= Settings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operationParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OperationParams);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (settings_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Settings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operationParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OperationParams);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (settings_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Settings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operationParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperationParams);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (settings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Settings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTopicRequest other) {
      if (other == null) {
        return;
      }
      if (other.operationParams_ != null) {
        if (operationParams_ == null) {
          OperationParams = new global::Ydb.Operations.OperationParams();
        }
        OperationParams.MergeFrom(other.OperationParams);
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.settings_ != null) {
        if (settings_ == null) {
          Settings = new global::Ydb.PersQueue.V1.TopicSettings();
        }
        Settings.MergeFrom(other.Settings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
          case 34: {
            if (settings_ == null) {
              Settings = new global::Ydb.PersQueue.V1.TopicSettings();
            }
            input.ReadMessage(Settings);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
          case 34: {
            if (settings_ == null) {
              Settings = new global::Ydb.PersQueue.V1.TopicSettings();
            }
            input.ReadMessage(Settings);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateTopicResponse : pb::IMessage<CreateTopicResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateTopicResponse> _parser = new pb::MessageParser<CreateTopicResponse>(() => new CreateTopicResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTopicResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTopicResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTopicResponse(CreateTopicResponse other) : this() {
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTopicResponse Clone() {
      return new CreateTopicResponse(this);
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 1;
    private global::Ydb.Operations.Operation operation_;
    /// <summary>
    /// Result of request will be inside operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.Operation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTopicResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTopicResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Operation, other.Operation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTopicResponse other) {
      if (other == null) {
        return;
      }
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::Ydb.Operations.Operation();
        }
        Operation.MergeFrom(other.Operation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateTopicResult : pb::IMessage<CreateTopicResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateTopicResult> _parser = new pb::MessageParser<CreateTopicResult>(() => new CreateTopicResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTopicResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTopicResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTopicResult(CreateTopicResult other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTopicResult Clone() {
      return new CreateTopicResult(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTopicResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTopicResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTopicResult other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class AlterTopicRequest : pb::IMessage<AlterTopicRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AlterTopicRequest> _parser = new pb::MessageParser<AlterTopicRequest>(() => new AlterTopicRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AlterTopicRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterTopicRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterTopicRequest(AlterTopicRequest other) : this() {
      operationParams_ = other.operationParams_ != null ? other.operationParams_.Clone() : null;
      path_ = other.path_;
      settings_ = other.settings_ != null ? other.settings_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterTopicRequest Clone() {
      return new AlterTopicRequest(this);
    }

    /// <summary>Field number for the "operation_params" field.</summary>
    public const int OperationParamsFieldNumber = 1;
    private global::Ydb.Operations.OperationParams operationParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.OperationParams OperationParams {
      get { return operationParams_; }
      set {
        operationParams_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private string path_ = "";
    /// <summary>
    /// Topic path.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 4;
    private global::Ydb.PersQueue.V1.TopicSettings settings_;
    /// <summary>
    /// New topic settings to be set. All options inside should be set despite same value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.TopicSettings Settings {
      get { return settings_; }
      set {
        settings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AlterTopicRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AlterTopicRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OperationParams, other.OperationParams)) return false;
      if (Path != other.Path) return false;
      if (!object.Equals(Settings, other.Settings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operationParams_ != null) hash ^= OperationParams.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (settings_ != null) hash ^= Settings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operationParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OperationParams);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (settings_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Settings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operationParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OperationParams);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (settings_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Settings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operationParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperationParams);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (settings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Settings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AlterTopicRequest other) {
      if (other == null) {
        return;
      }
      if (other.operationParams_ != null) {
        if (operationParams_ == null) {
          OperationParams = new global::Ydb.Operations.OperationParams();
        }
        OperationParams.MergeFrom(other.OperationParams);
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.settings_ != null) {
        if (settings_ == null) {
          Settings = new global::Ydb.PersQueue.V1.TopicSettings();
        }
        Settings.MergeFrom(other.Settings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
          case 34: {
            if (settings_ == null) {
              Settings = new global::Ydb.PersQueue.V1.TopicSettings();
            }
            input.ReadMessage(Settings);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
          case 34: {
            if (settings_ == null) {
              Settings = new global::Ydb.PersQueue.V1.TopicSettings();
            }
            input.ReadMessage(Settings);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AlterTopicResponse : pb::IMessage<AlterTopicResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AlterTopicResponse> _parser = new pb::MessageParser<AlterTopicResponse>(() => new AlterTopicResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AlterTopicResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterTopicResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterTopicResponse(AlterTopicResponse other) : this() {
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterTopicResponse Clone() {
      return new AlterTopicResponse(this);
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 1;
    private global::Ydb.Operations.Operation operation_;
    /// <summary>
    /// Result of request will be inside operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.Operation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AlterTopicResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AlterTopicResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Operation, other.Operation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AlterTopicResponse other) {
      if (other == null) {
        return;
      }
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::Ydb.Operations.Operation();
        }
        Operation.MergeFrom(other.Operation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Update topic result message that will be inside UpdateTopicResponse.operation.
  /// </summary>
  public sealed partial class AlterTopicResult : pb::IMessage<AlterTopicResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AlterTopicResult> _parser = new pb::MessageParser<AlterTopicResult>(() => new AlterTopicResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AlterTopicResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterTopicResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterTopicResult(AlterTopicResult other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterTopicResult Clone() {
      return new AlterTopicResult(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AlterTopicResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AlterTopicResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AlterTopicResult other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Add read rules for existing topic request.
  /// </summary>
  public sealed partial class AddReadRuleRequest : pb::IMessage<AddReadRuleRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddReadRuleRequest> _parser = new pb::MessageParser<AddReadRuleRequest>(() => new AddReadRuleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddReadRuleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReadRuleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReadRuleRequest(AddReadRuleRequest other) : this() {
      operationParams_ = other.operationParams_ != null ? other.operationParams_.Clone() : null;
      path_ = other.path_;
      readRule_ = other.readRule_ != null ? other.readRule_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReadRuleRequest Clone() {
      return new AddReadRuleRequest(this);
    }

    /// <summary>Field number for the "operation_params" field.</summary>
    public const int OperationParamsFieldNumber = 1;
    private global::Ydb.Operations.OperationParams operationParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.OperationParams OperationParams {
      get { return operationParams_; }
      set {
        operationParams_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private string path_ = "";
    /// <summary>
    /// Topic path.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "read_rule" field.</summary>
    public const int ReadRuleFieldNumber = 3;
    private global::Ydb.PersQueue.V1.TopicSettings.Types.ReadRule readRule_;
    /// <summary>
    /// read rules to add
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.TopicSettings.Types.ReadRule ReadRule {
      get { return readRule_; }
      set {
        readRule_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddReadRuleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddReadRuleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OperationParams, other.OperationParams)) return false;
      if (Path != other.Path) return false;
      if (!object.Equals(ReadRule, other.ReadRule)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operationParams_ != null) hash ^= OperationParams.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (readRule_ != null) hash ^= ReadRule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operationParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OperationParams);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (readRule_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReadRule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operationParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OperationParams);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (readRule_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReadRule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operationParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperationParams);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (readRule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadRule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddReadRuleRequest other) {
      if (other == null) {
        return;
      }
      if (other.operationParams_ != null) {
        if (operationParams_ == null) {
          OperationParams = new global::Ydb.Operations.OperationParams();
        }
        OperationParams.MergeFrom(other.OperationParams);
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.readRule_ != null) {
        if (readRule_ == null) {
          ReadRule = new global::Ydb.PersQueue.V1.TopicSettings.Types.ReadRule();
        }
        ReadRule.MergeFrom(other.ReadRule);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
          case 26: {
            if (readRule_ == null) {
              ReadRule = new global::Ydb.PersQueue.V1.TopicSettings.Types.ReadRule();
            }
            input.ReadMessage(ReadRule);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
          case 26: {
            if (readRule_ == null) {
              ReadRule = new global::Ydb.PersQueue.V1.TopicSettings.Types.ReadRule();
            }
            input.ReadMessage(ReadRule);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Add read rules for existing topic response.
  /// </summary>
  public sealed partial class AddReadRuleResponse : pb::IMessage<AddReadRuleResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddReadRuleResponse> _parser = new pb::MessageParser<AddReadRuleResponse>(() => new AddReadRuleResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddReadRuleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReadRuleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReadRuleResponse(AddReadRuleResponse other) : this() {
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReadRuleResponse Clone() {
      return new AddReadRuleResponse(this);
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 1;
    private global::Ydb.Operations.Operation operation_;
    /// <summary>
    /// Result of request will be inside operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.Operation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddReadRuleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddReadRuleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Operation, other.Operation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddReadRuleResponse other) {
      if (other == null) {
        return;
      }
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::Ydb.Operations.Operation();
        }
        Operation.MergeFrom(other.Operation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Add read rules result message that will be inside AddReadRuleReponse.operation.
  /// </summary>
  public sealed partial class AddReadRuleResult : pb::IMessage<AddReadRuleResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddReadRuleResult> _parser = new pb::MessageParser<AddReadRuleResult>(() => new AddReadRuleResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddReadRuleResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReadRuleResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReadRuleResult(AddReadRuleResult other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReadRuleResult Clone() {
      return new AddReadRuleResult(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddReadRuleResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddReadRuleResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddReadRuleResult other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Remove read rules request for existing topic.
  /// </summary>
  public sealed partial class RemoveReadRuleRequest : pb::IMessage<RemoveReadRuleRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RemoveReadRuleRequest> _parser = new pb::MessageParser<RemoveReadRuleRequest>(() => new RemoveReadRuleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveReadRuleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveReadRuleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveReadRuleRequest(RemoveReadRuleRequest other) : this() {
      operationParams_ = other.operationParams_ != null ? other.operationParams_.Clone() : null;
      path_ = other.path_;
      consumerName_ = other.consumerName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveReadRuleRequest Clone() {
      return new RemoveReadRuleRequest(this);
    }

    /// <summary>Field number for the "operation_params" field.</summary>
    public const int OperationParamsFieldNumber = 1;
    private global::Ydb.Operations.OperationParams operationParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.OperationParams OperationParams {
      get { return operationParams_; }
      set {
        operationParams_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private string path_ = "";
    /// <summary>
    /// Topic path.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "consumer_name" field.</summary>
    public const int ConsumerNameFieldNumber = 3;
    private string consumerName_ = "";
    /// <summary>
    /// read rules to remove. Only consumer names
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConsumerName {
      get { return consumerName_; }
      set {
        consumerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveReadRuleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveReadRuleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OperationParams, other.OperationParams)) return false;
      if (Path != other.Path) return false;
      if (ConsumerName != other.ConsumerName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operationParams_ != null) hash ^= OperationParams.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (ConsumerName.Length != 0) hash ^= ConsumerName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operationParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OperationParams);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (ConsumerName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ConsumerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operationParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OperationParams);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (ConsumerName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ConsumerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operationParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperationParams);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (ConsumerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConsumerName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveReadRuleRequest other) {
      if (other == null) {
        return;
      }
      if (other.operationParams_ != null) {
        if (operationParams_ == null) {
          OperationParams = new global::Ydb.Operations.OperationParams();
        }
        OperationParams.MergeFrom(other.OperationParams);
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.ConsumerName.Length != 0) {
        ConsumerName = other.ConsumerName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
          case 26: {
            ConsumerName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
          case 26: {
            ConsumerName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Remove read rules response for existing topic.
  /// </summary>
  public sealed partial class RemoveReadRuleResponse : pb::IMessage<RemoveReadRuleResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RemoveReadRuleResponse> _parser = new pb::MessageParser<RemoveReadRuleResponse>(() => new RemoveReadRuleResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveReadRuleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveReadRuleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveReadRuleResponse(RemoveReadRuleResponse other) : this() {
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveReadRuleResponse Clone() {
      return new RemoveReadRuleResponse(this);
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 1;
    private global::Ydb.Operations.Operation operation_;
    /// <summary>
    /// Result of request will be inside operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.Operation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveReadRuleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveReadRuleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Operation, other.Operation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveReadRuleResponse other) {
      if (other == null) {
        return;
      }
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::Ydb.Operations.Operation();
        }
        Operation.MergeFrom(other.Operation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Remove read rules result message that will be inside RemoveReadRuleReponse.operation.
  /// </summary>
  public sealed partial class RemoveReadRuleResult : pb::IMessage<RemoveReadRuleResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RemoveReadRuleResult> _parser = new pb::MessageParser<RemoveReadRuleResult>(() => new RemoveReadRuleResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveReadRuleResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveReadRuleResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveReadRuleResult(RemoveReadRuleResult other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveReadRuleResult Clone() {
      return new RemoveReadRuleResult(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveReadRuleResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveReadRuleResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveReadRuleResult other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class DescribeTopicRequest : pb::IMessage<DescribeTopicRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DescribeTopicRequest> _parser = new pb::MessageParser<DescribeTopicRequest>(() => new DescribeTopicRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DescribeTopicRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTopicRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTopicRequest(DescribeTopicRequest other) : this() {
      operationParams_ = other.operationParams_ != null ? other.operationParams_.Clone() : null;
      path_ = other.path_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTopicRequest Clone() {
      return new DescribeTopicRequest(this);
    }

    /// <summary>Field number for the "operation_params" field.</summary>
    public const int OperationParamsFieldNumber = 1;
    private global::Ydb.Operations.OperationParams operationParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.OperationParams OperationParams {
      get { return operationParams_; }
      set {
        operationParams_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private string path_ = "";
    /// <summary>
    /// Topic path.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DescribeTopicRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DescribeTopicRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OperationParams, other.OperationParams)) return false;
      if (Path != other.Path) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operationParams_ != null) hash ^= OperationParams.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operationParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OperationParams);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operationParams_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OperationParams);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operationParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperationParams);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DescribeTopicRequest other) {
      if (other == null) {
        return;
      }
      if (other.operationParams_ != null) {
        if (operationParams_ == null) {
          OperationParams = new global::Ydb.Operations.OperationParams();
        }
        OperationParams.MergeFrom(other.OperationParams);
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operationParams_ == null) {
              OperationParams = new global::Ydb.Operations.OperationParams();
            }
            input.ReadMessage(OperationParams);
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DescribeTopicResponse : pb::IMessage<DescribeTopicResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DescribeTopicResponse> _parser = new pb::MessageParser<DescribeTopicResponse>(() => new DescribeTopicResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DescribeTopicResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTopicResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTopicResponse(DescribeTopicResponse other) : this() {
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTopicResponse Clone() {
      return new DescribeTopicResponse(this);
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 1;
    private global::Ydb.Operations.Operation operation_;
    /// <summary>
    /// Result of request will be inside operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Operations.Operation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DescribeTopicResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DescribeTopicResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Operation, other.Operation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (operation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DescribeTopicResponse other) {
      if (other == null) {
        return;
      }
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::Ydb.Operations.Operation();
        }
        Operation.MergeFrom(other.Operation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (operation_ == null) {
              Operation = new global::Ydb.Operations.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DescribeTopicResult : pb::IMessage<DescribeTopicResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DescribeTopicResult> _parser = new pb::MessageParser<DescribeTopicResult>(() => new DescribeTopicResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DescribeTopicResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ydb.PersQueue.V1.YdbPersqueueV1Reflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTopicResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTopicResult(DescribeTopicResult other) : this() {
      self_ = other.self_ != null ? other.self_.Clone() : null;
      settings_ = other.settings_ != null ? other.settings_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTopicResult Clone() {
      return new DescribeTopicResult(this);
    }

    /// <summary>Field number for the "self" field.</summary>
    public const int SelfFieldNumber = 1;
    private global::Ydb.Scheme.Entry self_;
    /// <summary>
    /// Topic path.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.Scheme.Entry Self {
      get { return self_; }
      set {
        self_ = value;
      }
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 2;
    private global::Ydb.PersQueue.V1.TopicSettings settings_;
    /// <summary>
    /// Settings of topic.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ydb.PersQueue.V1.TopicSettings Settings {
      get { return settings_; }
      set {
        settings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DescribeTopicResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DescribeTopicResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Self, other.Self)) return false;
      if (!object.Equals(Settings, other.Settings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (self_ != null) hash ^= Self.GetHashCode();
      if (settings_ != null) hash ^= Settings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (self_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Self);
      }
      if (settings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Settings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (self_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Self);
      }
      if (settings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Settings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (self_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Self);
      }
      if (settings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Settings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DescribeTopicResult other) {
      if (other == null) {
        return;
      }
      if (other.self_ != null) {
        if (self_ == null) {
          Self = new global::Ydb.Scheme.Entry();
        }
        Self.MergeFrom(other.Self);
      }
      if (other.settings_ != null) {
        if (settings_ == null) {
          Settings = new global::Ydb.PersQueue.V1.TopicSettings();
        }
        Settings.MergeFrom(other.Settings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (self_ == null) {
              Self = new global::Ydb.Scheme.Entry();
            }
            input.ReadMessage(Self);
            break;
          }
          case 18: {
            if (settings_ == null) {
              Settings = new global::Ydb.PersQueue.V1.TopicSettings();
            }
            input.ReadMessage(Settings);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (self_ == null) {
              Self = new global::Ydb.Scheme.Entry();
            }
            input.ReadMessage(Self);
            break;
          }
          case 18: {
            if (settings_ == null) {
              Settings = new global::Ydb.PersQueue.V1.TopicSettings();
            }
            input.ReadMessage(Settings);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
